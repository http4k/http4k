dependencies {
    api project(":http4k-core")
    api project(":http4k-cloudnative")
    api project(":http4k-serverless-lambda")
    api project(":http4k-aws")
    api project(":http4k-format-jackson")
    api project(":http4k-client-okhttp")


    api Libs.aws_lambda_java_events
    api Libs.result4k
    api project(path: ":http4k-core", configuration: 'testArtifacts')

    testImplementation project(path: ":http4k-aws", configuration: 'testArtifacts')
    testImplementation Config.TestDependencies
}

task deployTestFunction(type: JavaExec) {
    classpath = classpath + sourceSets.test.runtimeClasspath
    mainClass = 'org.http4k.serverless.lambda.testing.setup.DeployServerAsLambdaForClientContractKt'
}

task deployHttpApiGateway(type: JavaExec) {
    classpath = classpath + sourceSets.test.runtimeClasspath
    mainClass = 'org.http4k.serverless.lambda.testing.setup.DeployHttpApiGatewayKt'
}

task deployRestApiGateway(type: JavaExec) {
    classpath = classpath + sourceSets.test.runtimeClasspath
    mainClass = 'org.http4k.serverless.lambda.testing.setup.DeployRestApiGatewayKt'
}

deployTestFunction.dependsOn("test-function:buildZip")
