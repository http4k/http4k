name: Build
on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - '**/*.md'
  pull_request:
    branches:
      - '*'
    paths-ignore:
      - '**/*.md'
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4.2.2
        with:
          # required by release_tag.sh to correctly identify files changed in the last commit
          fetch-depth: 2
          # required by release_tag.sh to allow pushing with another credentials so other workflows are triggered
          persist-credentials: false
      - name: Buildnote report
        uses: buildnote/action@v0.2.10
        if: always()
        env:
          BUILDNOTE_API_KEY: ${{ secrets.BUILDNOTE_API_KEY }}
      - uses: actions/setup-java@v4.6.0
        with:
          distribution: temurin
          java-version: 21
          cache: gradle
      - name: Cache Gradle packages
        uses: actions/cache@v4.1.2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Build
        timeout-minutes: 120
        run: bin/build_ci.sh
        env:
          HONEYCOMB_API_KEY: ${{ secrets.HONEYCOMB_API_KEY }}
          HONEYCOMB_DATASET: ${{ secrets.HONEYCOMB_DATASET }}
      - name: Cleanup Gradle Cache
          # Remove some files from the Gradle cache, so they aren't cached by GitHub Actions.
        # Restoring these files from a GitHub Actions cache might cause problems for future builds.
        run: |
          rm -f ~/.gradle/caches/modules-2/modules-2.lock
          rm -f ~/.gradle/caches/modules-2/gc.properties
      - name: Buildnote
        uses: buildnote/action@v0.2.10
        if: always()
        env:
          BUILDNOTE_API_KEY: ${{ secrets.BUILDNOTE_API_KEY }}
        with:
          collectOnly: true
          command: collect
          params: test-results --include="**/build/test-results/**/TEST-*.xml"
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v5.2.0
        if: always()
        with:
          report_paths: '**/build/test-results/test/TEST-*.xml'
          github_token: ${{ secrets.GITHUB_TOKEN }}
          check_annotations: true
          update_check: true
      - name: Release (if required)
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git remote set-url origin https://x-access-token:${{ secrets.ORG_PUBLIC_REPO_RELEASE_TRIGGERING }}@github.com/${GITHUB_REPOSITORY}.git
          bin/release_tag.sh
        if: github.ref == 'refs/heads/master'
        env:
          GH_TOKEN: ${{ secrets.ORG_PUBLIC_REPO_RELEASE_TRIGGERING }}
