{
    "definitions": {
        "Account": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/AccountAttributes"
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/AccountRelationships"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "accounts",
                    "pattern": "^[A-Za-z]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id",
                "attributes"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AccountAmendment": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Account"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AccountAttributes": {
            "properties": {
                "account_classification": {
                    "default": "Personal",
                    "description": "Is the account business or personal?",
                    "enum": [
                        "Personal",
                        "Business"
                    ],
                    "type": "string"
                },
                "account_matching_opt_out": {
                    "default": false,
                    "description": "Is the account opted out of account matching, e.g. CoP?",
                    "type": "boolean"
                },
                "account_number": {
                    "description": "Account number of the account. A unique number will automatically be generated if not provided.",
                    "example": "41426819",
                    "pattern": "^[A-Z0-9]{0,64}$",
                    "type": "string"
                },
                "alternative_bank_account_names": {
                    "description": "- deprecated - Alternative account names. Used for Confirmation of Payee matching.",
                    "items": {
                        "maxLength": 140,
                        "minLength": 1,
                        "type": "string"
                    },
                    "maxItems": 3,
                    "type": "array",
                    "x-nullable": true
                },
                "alternative_names": {
                    "description": "Alternative names. Used for Confirmation of Payee matching.",
                    "items": {
                        "maxLength": 140,
                        "minLength": 1,
                        "type": "string"
                    },
                    "maxItems": 3,
                    "type": "array",
                    "x-nullable": true
                },
                "bank_account_name": {
                    "description": "- deprecated - Primary account name. Used for Confirmation of Payee matching. Required if confirmation_of_payee_enabled is true for the organisation.",
                    "maxLength": 140,
                    "minLength": 1,
                    "type": "string"
                },
                "bank_id": {
                    "description": "Local country bank identifier. In the UK this is the sort code.",
                    "example": "400300",
                    "pattern": "^[A-Z0-9]{0,16}$",
                    "type": "string"
                },
                "bank_id_code": {
                    "description": "ISO 20022 code used to identify the type of bank ID being used",
                    "example": "GBDSC",
                    "pattern": "^[A-Z]{0,16}$",
                    "type": "string"
                },
                "base_currency": {
                    "description": "ISO 4217 code used to identify the base currency of the account",
                    "example": "GBP",
                    "pattern": "^[A-Z]{3}$",
                    "type": "string"
                },
                "bic": {
                    "description": "SWIFT BIC in either 8 or 11 character format",
                    "example": "NWBKGB22",
                    "pattern": "^([A-Z]{6}[A-Z0-9]{2}|[A-Z]{6}[A-Z0-9]{5})$",
                    "type": "string"
                },
                "country": {
                    "description": "ISO 3166-1 code used to identify the domicile of the account",
                    "example": "GB",
                    "pattern": "^[A-Z]{2}$",
                    "type": "string"
                },
                "customer_id": {
                    "description": "A free-format reference that can be used to link this account to an external system",
                    "example": "12345",
                    "pattern": "^[a-zA-Z0-9-$@., ]{0,256}$",
                    "type": "string"
                },
                "first_name": {
                    "description": "- deprecated - Customer first name.",
                    "maxLength": 40,
                    "minLength": 1,
                    "type": "string"
                },
                "iban": {
                    "description": "IBAN of the account. Will be calculated from other fields if not supplied.",
                    "example": "GB11NWBK40030041426819",
                    "pattern": "^[A-Z]{2}[0-9]{2}[A-Z0-9]{0,64}$",
                    "type": "string"
                },
                "joint_account": {
                    "default": false,
                    "description": "Is the account joint?",
                    "type": "boolean"
                },
                "name": {
                    "description": "Account holder names (for example title, first name, last name). Used for Confirmation of Payee matching.",
                    "items": {
                        "maxLength": 140,
                        "minLength": 1,
                        "type": "string"
                    },
                    "maxItems": 4,
                    "type": "array",
                    "x-nullable": true
                },
                "organisation_identification": {
                    "$ref": "#/definitions/AccountAttributesOrganisationIdentification"
                },
                "private_identification": {
                    "$ref": "#/definitions/AccountAttributesPrivateIdentification"
                },
                "secondary_identification": {
                    "description": "Secondary identification, e.g. building society roll number. Used for Confirmation of Payee.",
                    "maxLength": 140,
                    "minLength": 1,
                    "type": "string"
                },
                "status": {
                    "description": "Current status of the account",
                    "enum": [
                        "pending",
                        "failed",
                        "confirmed"
                    ],
                    "type": "string"
                },
                "switched": {
                    "default": false,
                    "description": "Indicates whether the account has been switched using the Current Account Switch Service.",
                    "type": "boolean"
                },
                "title": {
                    "description": "- deprecated - Customer title.",
                    "example": "Ms",
                    "maxLength": 40,
                    "minLength": 1,
                    "type": "string"
                }
            },
            "required": [
                "country"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AccountAttributesOrganisationIdentification": {
            "properties": {
                "actors": {
                    "items": {
                        "$ref": "#/definitions/AccountAttributesOrganisationIdentificationActor"
                    },
                    "type": "array"
                },
                "address": {
                    "items": {
                        "maxLength": 140,
                        "minLength": 1,
                        "type": "string"
                    },
                    "type": "array"
                },
                "city": {
                    "maxLength": 35,
                    "minLength": 1,
                    "type": "string"
                },
                "country": {
                    "example": "GB",
                    "pattern": "^[A-Z]{2}$",
                    "type": "string"
                },
                "identification": {
                    "maxLength": 140,
                    "minLength": 1,
                    "type": "string"
                },
                "identification_issuer": {
                    "type": "string"
                },
                "identification_scheme": {
                    "maxLength": 35,
                    "minLength": 1,
                    "type": "string"
                },
                "identification_scheme_code": {
                    "maxLength": 35,
                    "minLength": 1,
                    "type": "string"
                },
                "registration_number": {
                    "type": "string"
                },
                "tax_residency": {
                    "description": "ISO 3166-1 code used to identify the domicile of the account",
                    "example": "GB",
                    "pattern": "^[A-Z]{2}$",
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AccountAttributesOrganisationIdentificationActor": {
            "properties": {
                "birth_date": {
                    "example": "2017-07-23",
                    "format": "date",
                    "type": "string",
                    "x-nullable": true
                },
                "name": {
                    "description": "Actor names (for example title, first name, last name). Used for Confirmation of Payee matching.",
                    "items": {
                        "maxLength": 255,
                        "minLength": 1,
                        "type": "string"
                    },
                    "maxItems": 4,
                    "type": "array",
                    "x-nullable": true
                },
                "residency": {
                    "description": "ISO 3166-1 code used to identify the domicile of the actor",
                    "example": "GB",
                    "pattern": "^[A-Z]{2}$",
                    "type": "string"
                },
                "role": {
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AccountAttributesPrivateIdentification": {
            "properties": {
                "address": {
                    "items": {
                        "maxLength": 140,
                        "minLength": 1,
                        "type": "string"
                    },
                    "type": "array"
                },
                "birth_country": {
                    "example": "GB",
                    "pattern": "^[A-Z]{2}$",
                    "type": "string"
                },
                "birth_date": {
                    "description": "Customer birth date",
                    "example": "2017-07-23",
                    "format": "date",
                    "type": "string",
                    "x-nullable": true
                },
                "city": {
                    "maxLength": 35,
                    "minLength": 1,
                    "type": "string"
                },
                "country": {
                    "example": "GB",
                    "pattern": "^[A-Z]{2}$",
                    "type": "string"
                },
                "identification": {
                    "example": "L-123456789",
                    "maxLength": 140,
                    "minLength": 1,
                    "type": "string"
                },
                "identification_issuer": {
                    "minLength": 1,
                    "type": "string"
                },
                "identification_scheme": {
                    "maxLength": 35,
                    "minLength": 1,
                    "type": "string"
                },
                "identification_scheme_code": {
                    "maxLength": 35,
                    "minLength": 1,
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AccountCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Account"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AccountCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Account"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AccountDetailsListResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/Account"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AccountDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Account"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AccountEvent": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/AccountEventAttributes"
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "6d4f9916-3af9-416e-a347-2d8df90fc4ab",
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "cfc09fb8-bbca-40bd-a518-6e58d8a9c7f4",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/AccountEventRelationships"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "account_events",
                    "pattern": "^[A-Za-z]*$",
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "type",
                "id",
                "version",
                "organisation_id",
                "attributes"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AccountEventAttributes": {
            "properties": {
                "account_id": {
                    "description": "ID of the account this event relates to",
                    "example": "cfc09fb8-bbca-40bd-a518-6e58d8a9c7f4",
                    "format": "uuid",
                    "type": "string"
                },
                "date_time": {
                    "format": "date-time",
                    "type": "string"
                },
                "description": {
                    "description": "Contains the event description",
                    "enum": [
                        "pending",
                        "failed",
                        "confirmed"
                    ],
                    "example": "confirmed",
                    "type": "string"
                },
                "reason": {
                    "description": "Failure reason. Should only be present when description is failed",
                    "example": "Invalid BIC",
                    "type": "string"
                },
                "routing_status": {
                    "description": "Contains the routing status",
                    "enum": [
                        "unroutable",
                        "routable",
                        "deleted"
                    ],
                    "example": "routable",
                    "type": "string"
                },
                "status": {
                    "description": "Contains the event status",
                    "enum": [
                        "pending",
                        "failed",
                        "confirmed"
                    ],
                    "example": "confirmed",
                    "type": "string"
                }
            },
            "required": [
                "status",
                "routing_status",
                "date_time",
                "account_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AccountEventDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/AccountEvent"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AccountEventListResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/AccountEvent"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AccountEventRelationships": {
            "properties": {
                "account": {
                    "$ref": "#/definitions/RelationshipAccount",
                    "description": "Account this event relates to"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AccountHoldingEntity": {
            "properties": {
                "bank_address": {
                    "description": "Financial institution address",
                    "example": [
                        "Liverpool Customer Service Centre",
                        "Stevenson Way",
                        "Wavertree",
                        "L13 1NW"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "x-availability": {
                        "get": {
                            "swift": "sometimes"
                        },
                        "post": {
                            "swift": "optional"
                        }
                    },
                    "x-description": {
                        "swift": "Field 57B"
                    },
                    "x-omitempty": true
                },
                "bank_id": {
                    "description": "Financial institution identification",
                    "example": "333333",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "bacs": "always",
                            "fps": "always",
                            "sepa": "always",
                            "swift": "always"
                        },
                        "post": {
                            "bacs": "required",
                            "fps": "required",
                            "sepa": "required",
                            "swift": "required"
                        }
                    },
                    "x-description": {
                        "bacs": "Field1",
                        "sepa": "Must be a BIC",
                        "swift": "Field 57A: BIC Component (11)"
                    }
                },
                "bank_id_code": {
                    "$ref": "#/definitions/BankIdCode"
                },
                "bank_name": {
                    "description": "Financial institution name",
                    "example": "NATIONAL WESTMINSTER BANK PLC",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "swift": "sometimes"
                        },
                        "post": {
                            "swift": "optional"
                        }
                    },
                    "x-description": {
                        "swift": "Field 57D"
                    }
                },
                "bank_party_id": {
                    "description": "Identifier of the financial institution which services the account",
                    "example": "//AT12345",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "swift": "sometimes"
                        },
                        "post": {
                            "swift": "optional"
                        }
                    },
                    "x-description": {
                        "swift": "Field 57A/57B/57D"
                    }
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AccountName": {
            "description": "Account name",
            "maxLength": 140,
            "minLength": 1,
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "AccountNumberCode": {
            "description": "The type of identification given at `account_number` attribute",
            "enum": [
                "IBAN",
                "BBAN"
            ],
            "example": "IBAN",
            "type": "string",
            "x-access": [
                "Public"
            ],
            "x-availability": {
                "get": {
                    "bacs": "always",
                    "fps": "always",
                    "sepa": "always",
                    "swift": "always"
                },
                "post": {
                    "bacs": "required",
                    "fps": "required",
                    "sepa": "required",
                    "swift": "required"
                }
            },
            "x-description": {
                "fps": "`BBAN` for domestic beneficiaries and debtors, `IBAN` for debtor if inbound payment originated overseas",
                "sepa": "Must be `IBAN`"
            },
            "x-length": 4
        },
        "AccountRelationships": {
            "properties": {
                "account_events": {
                    "$ref": "#/definitions/RelationshipLinks",
                    "description": "Events related to the lifecycle of this account"
                },
                "master_account": {
                    "$ref": "#/definitions/RelationshipLinks",
                    "description": "ID of the master account related to this account"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "Ace": {
            "properties": {
                "attributes": {
                    "properties": {
                        "action": {
                            "description": "Action that this ACE controls",
                            "example": "CREATE",
                            "pattern": "^[A-Za-z]*$",
                            "type": "string"
                        },
                        "filter": {
                            "type": "string"
                        },
                        "record_type": {
                            "description": "Type of record that this ACE gives access to",
                            "example": "User",
                            "pattern": "^[A-Za-z]*$",
                            "type": "string"
                        },
                        "role_id": {
                            "description": "Role ID of the role that this ACE belongs to",
                            "example": "813e371b-c16c-4b86-adbf-82bcda159b27",
                            "format": "uuid",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "ace",
                    "pattern": "^[A-Za-z]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id",
                "attributes"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AceCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Ace"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AceCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Ace"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AceDetailsListResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/Ace"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AceDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Ace"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AdviceCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/PaymentAdvice"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AdviceCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/PaymentAdvice"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AdviceDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/PaymentAdvice"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AdviceSubmission": {
            "properties": {
                "attributes": {
                    "properties": {
                        "status": {
                            "$ref": "#/definitions/AdviceSubmissionStatus"
                        },
                        "status_reason": {
                            "type": "string"
                        },
                        "submission_datetime": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                        },
                        "transaction_start_datetime": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/AdviceSubmissionRelationships"
                },
                "type": {
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AdviceSubmissionCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/NewAdviceSubmission"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AdviceSubmissionCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/AdviceSubmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AdviceSubmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/AdviceSubmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AdviceSubmissionRelationships": {
            "properties": {
                "advice": {
                    "$ref": "#/definitions/RelationshipAdvices"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AdviceSubmissionStatus": {
            "enum": [
                "accepted",
                "released_to_gateway",
                "queued_for_delivery",
                "delivery_confirmed",
                "delivery_failed",
                "submitted",
                "validation_pending"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "ApiError": {
            "properties": {
                "error_code": {
                    "format": "uuid",
                    "type": "string"
                },
                "error_message": {
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AuditEntry": {
            "properties": {
                "attributes": {
                    "properties": {
                        "action_time": {
                            "description": "Timestamp when the change was requested",
                            "example": "2017-03-20T17:13:41.308Z",
                            "format": "date-time",
                            "type": "string"
                        },
                        "actioned_by": {
                            "description": "User ID of the user who requested the change",
                            "example": "9a120694-2308-4044-9a6b-b667a9fc3e48",
                            "format": "uuid",
                            "type": "string"
                        },
                        "after_data": {
                            "description": "Snapshot of what the data would be after the change (empty if the request was to DELETE a record)",
                            "type": "object"
                        },
                        "before_data": {
                            "description": "Snapshot of the data before the change (empty if the request was to CREATE a new record)",
                            "type": "object"
                        },
                        "description": {
                            "description": "Textual description of the change being made",
                            "example": "Record insert request - pending approval",
                            "pattern": "^[A-Za-z0-9 .,@:]*$",
                            "type": "string"
                        },
                        "record_id": {
                            "description": "ID of the resource that is being changed",
                            "example": "e90c3385-e299-4d1c-95f3-fc1075e047a4",
                            "format": "uuid",
                            "type": "string"
                        },
                        "record_type": {
                            "description": "Type of the resource that is being changed",
                            "example": "User",
                            "pattern": "^[A-Za-z]*$",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "auditentry",
                    "pattern": "^[A-Za-z]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "AuditEntryListResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/AuditEntry"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "Balance": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/BalanceAttributes"
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "balances",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "BalanceAttributes": {
            "properties": {
                "amount": {
                    "description": "Amount of funds",
                    "example": "10.00",
                    "type": "string"
                },
                "currency": {
                    "description": "Currency of funds",
                    "example": "GBP",
                    "pattern": "^[A-Z]{3}$",
                    "type": "string"
                },
                "description": {
                    "description": "Balance description",
                    "example": "settlement account",
                    "type": "string"
                },
                "holding_institution": {
                    "description": "Institution that holds the funds",
                    "example": "starling",
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "BalanceDetailsListResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/Balance"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "BankIdCode": {
            "description": "The type of identification provided at `bank_id` attribute. Must be ISO code as listed in the [External Code Sets spreadsheet](https://www.iso20022.org/external_code_list.page)",
            "enum": [
                "SWBIC",
                "GBDSC",
                "BE",
                "FR",
                "DEBLZ",
                "GRBIC",
                "ITNCC",
                "PLKNR",
                "PTNCC",
                "ESNCC",
                "CHBCC"
            ],
            "example": "GBDSC",
            "type": "string",
            "x-access": [
                "Public"
            ],
            "x-availability": {
                "get": {
                    "bacs": "always",
                    "fps": "always",
                    "sepa": "always",
                    "swift": "always"
                },
                "post": {
                    "bacs": "required",
                    "fps": "required",
                    "sepa": "required",
                    "swift": "required"
                }
            },
            "x-description": {
                "fps": "Always `GBDSC` (GB Domestic Sort Code) for beneficiary. `GBDSC` for debtor for outbound payments and inbound payment originated from a domestic account, `SWBIC` (SWIFT BIC) for debtor if inbound payment originated overseas",
                "sepa": "Always has to be `SWBIC` (SWIFT BIC)"
            },
            "x-length": 5
        },
        "BeneficiaryDebtorAccountHoldingEntity": {
            "properties": {
                "bank_address": {
                    "description": "Financial institution address",
                    "example": [
                        "Liverpool Customer Service Centre",
                        "Stevenson Way",
                        "Wavertree",
                        "L13 1NW"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "x-availability": {
                        "get": {
                            "swift": "sometimes"
                        },
                        "post": {
                            "swift": "optional"
                        }
                    },
                    "x-description": {
                        "swift": "Field 57B"
                    },
                    "x-omitempty": true
                },
                "bank_id": {
                    "description": "Financial institution identification",
                    "example": "333333",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "bacs": "always",
                            "fps": "always",
                            "sepa": "always",
                            "swift": "always"
                        },
                        "post": {
                            "bacs": "required",
                            "fps": "required",
                            "sepa": "required",
                            "swift": "required"
                        }
                    },
                    "x-description": {
                        "bacs": "Field1",
                        "fps": "UK sort code when `bank_id_code` is `GBDSC`. BIC8/11 if `bank_id_code` is `SWBIC`",
                        "sepa": "Must be a BIC",
                        "swift": "Field 57A: BIC Component (11)"
                    },
                    "x-length": 11
                },
                "bank_id_code": {
                    "$ref": "#/definitions/BankIdCode"
                },
                "bank_name": {
                    "description": "Financial institution name",
                    "example": "NATIONAL WESTMINSTER BANK PLC",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "swift": "sometimes"
                        },
                        "post": {
                            "swift": "optional"
                        }
                    },
                    "x-description": {
                        "swift": "Field 57D"
                    },
                    "x-length": 35
                },
                "bank_party_id": {
                    "description": "Identifier of the financial institution which services the account",
                    "example": "//AT12345",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "swift": "sometimes"
                        },
                        "post": {
                            "swift": "optional"
                        }
                    },
                    "x-description": {
                        "swift": "Field 57A/57B/57D"
                    },
                    "x-length": 35
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "BeneficiaryParty": {
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "parties"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "id",
                "type"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ChargesInformation": {
            "properties": {
                "bearer_code": {
                    "description": "Specifies which party/parties will bear the charges associated with the processing of the payment transaction. Can be one of the following: `DEBT`, `CRED`, `SHAR` or `SLEV`",
                    "example": "SLEV",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "fps": "sometimes",
                            "sepa": "sometimes",
                            "swift": "sometimes"
                        },
                        "post": {
                            "fps": "optional",
                            "sepa": "optional",
                            "swift": "optional"
                        }
                    },
                    "x-description": {
                        "sepa": "Only `SLEV` is allowed. If not set, will be defaulted to `SLEV`.",
                        "swift": "Field 71A: details of charges (3)"
                    },
                    "x-length": 4
                },
                "receiver_charges_amount": {
                    "description": "Transaction charges due to the receiver of the transaction. Requires 1 to 2 decimal places. Must be > 0.",
                    "example": "1.20",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "fps": "sometimes",
                            "swift": "sometimes"
                        },
                        "post": {
                            "fps": "optional",
                            "swift": "optional"
                        }
                    },
                    "x-description": {
                        "swift": "71G, Receivers Charges (18)"
                    }
                },
                "receiver_charges_currency": {
                    "description": "Currency of `receiver_charges_amount`. Currency code as defined in [ISO 4217](http://www.iso.org/iso/home/standards/currency_codes.htm).",
                    "example": "EUR",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "fps": "sometimes",
                            "swift": "sometimes"
                        },
                        "post": {
                            "fps": "optional",
                            "swift": "optional"
                        }
                    },
                    "x-description": {
                        "swift": "71G, Receivers Charges (18)"
                    },
                    "x-length": 3
                },
                "sender_charges": {
                    "items": {
                        "description": "List of transaction charges due to the sender of the transaction",
                        "properties": {
                            "amount": {
                                "description": "Amount of each transaction charge due to the sender of the transaction. Requires 1 to 2 decimal places. Must be > 0.",
                                "example": "2.00",
                                "type": "string",
                                "x-availability": {
                                    "get": {
                                        "fps": "sometimes",
                                        "swift": "sometimes"
                                    },
                                    "post": {
                                        "fps": "optional",
                                        "swift": "optional"
                                    }
                                }
                            },
                            "currency": {
                                "description": "Currency of `amount`. Currency code as defined in [ISO 4217](http://www.iso.org/iso/home/standards/currency_codes.htm).",
                                "example": "EUR",
                                "type": "string",
                                "x-availability": {
                                    "get": {
                                        "fps": "sometimes",
                                        "swift": "sometimes"
                                    },
                                    "post": {
                                        "fps": "optional",
                                        "swift": "optional"
                                    }
                                }
                            }
                        },
                        "type": "object",
                        "x-availability": {
                            "get": {
                                "fps": "sometimes",
                                "swift": "sometimes"
                            },
                            "post": {
                                "fps": "optional",
                                "swift": "optional"
                            }
                        },
                        "x-description": {
                            "swift": "71F Senders charges (18) - several occurrences allowed"
                        }
                    },
                    "type": "array",
                    "x-omitempty": true
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "Claim": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/ClaimAttributes"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/ClaimRelationships"
                },
                "type": {
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id",
                "attributes"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ClaimAttributes": {
            "properties": {
                "beneficiary_party": {
                    "properties": {
                        "account_number": {
                            "pattern": "^[A-Z0-9]{6,34}$",
                            "type": "string"
                        },
                        "bank_id": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "account_number",
                        "bank_id"
                    ],
                    "type": "object"
                },
                "clearing_id": {
                    "pattern": "^[0-9]{6}$",
                    "type": "string"
                },
                "contact_name": {
                    "type": "string"
                },
                "debtor_party": {
                    "properties": {
                        "account_name": {
                            "pattern": "^[A-Za-z0-9 \\/\\-?:\\(\\)\\.,’\\+\\#\\=\\!\\\"%&\\*\\<\\>;\\{@\\r\\n]*$",
                            "type": "string"
                        },
                        "account_number": {
                            "pattern": "^[A-Z0-9]{6,34}$",
                            "type": "string"
                        },
                        "bank_id": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "account_name",
                        "account_number",
                        "bank_id"
                    ],
                    "type": "object"
                },
                "disputed_transactions": {
                    "items": {
                        "$ref": "#/definitions/DisputedTransaction"
                    },
                    "type": "array"
                },
                "number_of_claims": {
                    "type": "integer"
                },
                "original_instruction": {
                    "properties": {
                        "clearing_id": {
                            "pattern": "^[0-9]{6}$",
                            "type": "string"
                        },
                        "reference": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "clearing_id",
                        "reference"
                    ],
                    "type": "object"
                },
                "payment_scheme": {
                    "type": "string"
                },
                "processing_date": {
                    "format": "date",
                    "type": "string"
                },
                "reason_code": {
                    "pattern": "^[1-9]$",
                    "type": "string"
                },
                "reference": {
                    "type": "string"
                },
                "request_date": {
                    "format": "date",
                    "type": "string"
                }
            },
            "required": [
                "payment_scheme",
                "clearing_id",
                "reference",
                "reason_code",
                "beneficiary_party",
                "debtor_party",
                "original_instruction",
                "number_of_claims",
                "disputed_transactions"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ClaimCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Claim"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ClaimDetailsListResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/Claim"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ClaimDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Claim"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ClaimRelationships": {
            "properties": {
                "claim_reversal": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/ClaimReversal"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "claim_submission": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/ClaimSubmission"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ClaimResourceType": {
            "enum": [
                "claims",
                "claim_submissions",
                "claim_submission_validations",
                "claim_reversals",
                "claim_reversal_submissions",
                "claim_reversal_submission_validations"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "ClaimReversal": {
            "properties": {
                "attributes": {
                    "properties": {
                        "original_instruction_id": {
                            "type": "string"
                        }
                    },
                    "required": [
                        "original_instruction_id"
                    ],
                    "type": "object"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/ClaimReversalRelationships"
                },
                "type": {
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id",
                "attributes"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ClaimReversalCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ClaimReversal"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ClaimReversalDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ClaimReversal"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ClaimReversalRelationships": {
            "properties": {
                "claim": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/Claim"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "claim_reversal_submission": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/ClaimReversalSubmission"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ClaimReversalSubmission": {
            "properties": {
                "attributes": {
                    "properties": {
                        "status": {
                            "$ref": "#/definitions/ClaimSubmissionStatus"
                        },
                        "status_reason": {
                            "type": "string"
                        },
                        "submission_datetime": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/ClaimReversalSubmissionRelationships"
                },
                "type": {
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ClaimReversalSubmissionCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ClaimReversalSubmission"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ClaimReversalSubmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ClaimReversalSubmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ClaimReversalSubmissionRelationships": {
            "properties": {
                "claim": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/Claim"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "claim_reversal": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/ClaimReversal"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ClaimSubmission": {
            "properties": {
                "attributes": {
                    "properties": {
                        "scheme_message_id": {
                            "type": "string"
                        },
                        "status": {
                            "$ref": "#/definitions/ClaimSubmissionStatus"
                        },
                        "status_reason": {
                            "type": "string"
                        },
                        "submission_datetime": {
                            "format": "date-time",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/ClaimSubmissionRelationships"
                },
                "type": {
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ClaimSubmissionCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ClaimSubmission"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ClaimSubmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ClaimSubmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ClaimSubmissionRelationships": {
            "properties": {
                "claim": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/Claim"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ClaimSubmissionStatus": {
            "enum": [
                "accepted",
                "validation_failed",
                "validation_pending",
                "validation_passed",
                "released_to_gateway",
                "queued_for_delivery",
                "delivery_confirmed",
                "delivery_failed"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "Contact": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/ContactAttributes",
                    "type": "object"
                },
                "created_on": {
                    "format": "datetime",
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "datetime",
                    "type": "string"
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/Relationships"
                },
                "type": {
                    "enum": [
                        "contacts"
                    ],
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id",
                "attributes"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ContactAccount": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/ContactAccountAttributes",
                    "type": "object"
                },
                "created_on": {
                    "format": "datetime",
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "datetime",
                    "type": "string"
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/Relationships"
                },
                "type": {
                    "enum": [
                        "contact_accounts"
                    ],
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id",
                "attributes"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ContactAccountAttributes": {
            "properties": {
                "account_name": {
                    "type": "string"
                },
                "account_number": {
                    "type": "string"
                },
                "account_number_code": {
                    "type": "string"
                },
                "account_type": {
                    "type": "string"
                },
                "account_with": {
                    "$ref": "#/definitions/ContactAccountAttributesAccountWith",
                    "type": "object"
                },
                "country": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ContactAccountAttributesAccountWith": {
            "properties": {
                "bank_id": {
                    "type": "string"
                },
                "bank_id_code": {
                    "type": "string"
                },
                "bank_name": {
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ContactAccountCreatedEvent": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ContactAccount"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ContactAccountCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ContactAccount"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ContactAccountCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ContactAccount"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ContactAccountGetResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ContactAccount"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ContactAccountRecord": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ContactAccount"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ContactAccountUpdatedEvent": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ContactAccount"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ContactAttributes": {
            "properties": {
                "address": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "city": {
                    "type": "string"
                },
                "contact_method": {
                    "type": "string"
                },
                "contact_type": {
                    "enum": [
                        "organisation",
                        "private"
                    ],
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "email_address": {
                    "type": "string"
                },
                "identification": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "x-omitempty": true
                },
                "identification_type": {
                    "type": "string"
                },
                "name": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "post_code": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "telephone_number": {
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ContactCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Contact"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ContactCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Contact"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ContactGetResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Contact"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ContactRecord": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Contact"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "Credential": {
            "properties": {
                "client_id": {
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "CredentialCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/CredentialSecret"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "CredentialSecret": {
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "client_secret": {
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "CurrencyAndAmount": {
            "properties": {
                "amount": {
                    "description": "Amount that is being returned/kept. The sum of `recall-amount.amount` and `charges-amount.amount` have to equal the original payment amount.",
                    "example": "10.00",
                    "pattern": "^[0-9.]{0,20}$",
                    "type": "string"
                },
                "currency": {
                    "description": "ISO currency code for `amount`",
                    "example": "GBP",
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DebtorPartyAccount": {
            "properties": {
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "type": {
                    "enum": [
                        "contact_accounts"
                    ],
                    "type": "string"
                }
            },
            "required": [
                "id",
                "type"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebit": {
            "properties": {
                "attributes": {
                    "properties": {
                        "amount": {
                            "description": "Amount of money moved between the instructing agent and instructed agent",
                            "example": "10.00",
                            "pattern": "^[0-9.]{0,20}$",
                            "type": "string"
                        },
                        "beneficiary_party": {
                            "properties": {
                                "account_name": {
                                    "description": "Name of beneficiary as given with account",
                                    "example": "James Bond",
                                    "type": "string",
                                    "x-omitempty": false
                                },
                                "account_number": {
                                    "description": "Beneficiary account number",
                                    "example": "71268996",
                                    "type": "string"
                                },
                                "account_number_code": {
                                    "$ref": "#/definitions/AccountNumberCode"
                                },
                                "account_type": {
                                    "description": "The type of the account given with `beneficiary_party.account_number`. Single digit number. Only required if requested by the beneficiary party. Defaults to 0.",
                                    "example": 0,
                                    "type": "integer"
                                },
                                "account_with": {
                                    "$ref": "#/definitions/AccountHoldingEntity"
                                },
                                "address": {
                                    "description": "Beneficiary address",
                                    "example": [
                                        "1 Clarence Mew",
                                        "Horsforth",
                                        "Leeds Ls18 4EP"
                                    ],
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "country": {
                                    "description": "Country of the beneficiary address, ISO 3166 format country code",
                                    "example": "DE",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "clearing_id": {
                            "description": "Unique identifier for organisations collecting payments",
                            "example": "123456",
                            "type": "string"
                        },
                        "currency": {
                            "description": "Currency of the transaction amount. Currency code as defined in [ISO 4217](http://www.iso.org/iso/home/standards/currency_codes.htm)",
                            "example": "EUR",
                            "type": "string",
                            "x-length": 3
                        },
                        "debtor_party": {
                            "properties": {
                                "account_name": {
                                    "description": "Name of debtor as given with account",
                                    "example": "Jane Bond",
                                    "type": "string",
                                    "x-omitempty": false
                                },
                                "account_number": {
                                    "description": "Debtor account number. Allows upper case and numeric characters.",
                                    "example": "12345678",
                                    "type": "string"
                                },
                                "account_number_code": {
                                    "$ref": "#/definitions/AccountNumberCode"
                                },
                                "account_with": {
                                    "$ref": "#/definitions/AccountHoldingEntity"
                                },
                                "address": {
                                    "description": "Debtor address",
                                    "example": [
                                        "63 St Mary Axe",
                                        "London",
                                        "EC3A 8AA"
                                    ],
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array"
                                },
                                "country": {
                                    "description": "Country of debtor address. ISO 3166 format country code\"",
                                    "example": "GB",
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "numeric_reference": {
                            "description": "Numeric reference field, see scheme specific descriptions for usage",
                            "type": "string"
                        },
                        "payment_scheme": {
                            "description": "Clearing infrastructure through which the operation instruction is to be processed. Default for given organisation ID is used if left empty. Has to be a valid [scheme identifier](http://draft-api-docs.form3.tech/api.html#enumerations-schemes).",
                            "example": "BACS",
                            "type": "string"
                        },
                        "processing_date": {
                            "description": "Date on which the operation is to be debited from the debtor account. Formatted according to ISO 8601 format: YYYY-MM-DD.",
                            "example": "2015-02-12",
                            "format": "date",
                            "type": "string"
                        },
                        "reference": {
                            "description": "Payment reference for beneficiary use",
                            "example": "rent for oct",
                            "type": "string",
                            "x-length": 18
                        },
                        "scheme_payment_type": {
                            "description": "The [scheme-specific payment type](#enumerations-scheme-payment-types)",
                            "example": "DirectDebitFirst",
                            "type": "string"
                        },
                        "scheme_processing_date": {
                            "description": "Date on which the operation is processed by the scheme. Only used if different from `processing_date`.",
                            "example": "2015-02-12",
                            "format": "date",
                            "type": "string",
                            "x-nullable": true
                        },
                        "scheme_status": {
                            "description": "This reference is used by the receiving party to identify whether the related DDI would have been electronic (AUDDIS) or paper‐based.",
                            "enum": [
                                "AUDDIS",
                                "MIGRATING"
                            ],
                            "example": "AUDDIS",
                            "type": "string"
                        },
                        "unique_scheme_id": {
                            "description": "The scheme-specific unique transaction ID. Populated by the scheme.",
                            "example": "L5W48NDWYW7JV9MRO71020180301826040011",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/DirectDebitRelationships"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "direct_debits",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version of the resource",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id",
                "attributes"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitAdmission": {
            "properties": {
                "attributes": {
                    "properties": {
                        "admission_datetime": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                        },
                        "scheme_status_code": {
                            "type": "string"
                        },
                        "scheme_status_code_description": {
                            "type": "string"
                        },
                        "status": {
                            "$ref": "#/definitions/DirectDebitAdmissionStatus"
                        },
                        "status_reason": {
                            "$ref": "#/definitions/DirectDebitAdmissionStatusReason"
                        }
                    },
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/DirectDebitAdmissionRelationships"
                },
                "type": {
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitAdmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/DirectDebitAdmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitAdmissionRelationships": {
            "properties": {
                "direct_debit": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/DirectDebit"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitAdmissionStatus": {
            "enum": [
                "confirmed",
                "failed"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitAdmissionStatusReason": {
            "enum": [
                "accepted",
                "invalid_beneficiary_details",
                "bankid_not_provisioned",
                "unknown_accountnumber"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/DirectDebit"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/DirectDebit"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitDetailsListResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/DirectDebit"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/DirectDebit"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitRelationships": {
            "properties": {
                "direct_debit_admission": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/DirectDebitAdmission"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "direct_debit_return": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/DirectDebitReturn"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "direct_debit_reversal": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/DirectDebitReversal"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "direct_debit_submission": {
                    "description": "The submission resource related to the direct debit",
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/DirectDebitSubmission"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "mandate": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/Mandate"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitResourceType": {
            "enum": [
                "direct_debits",
                "direct_debit_admissions",
                "direct_debit_submissions",
                "direct_debit_submission_validations",
                "direct_debit_reversals",
                "direct_debit_reversal_admissions",
                "direct_debit_returns",
                "direct_debit_return_admissions",
                "direct_debit_return_submissions",
                "direct_debit_return_submission_validations",
                "direct_debit_return_reversals",
                "direct_debit_return_reversal_admissions",
                "direct_debit_automatic_returns"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReturn": {
            "properties": {
                "attributes": {
                    "properties": {
                        "return_code": {
                            "type": "string"
                        },
                        "scheme_transaction_id": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "properties": {
                        "direct_debit": {
                            "properties": {
                                "data": {
                                    "items": {
                                        "$ref": "#/definitions/DirectDebit"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "direct_debit_return_admission": {
                            "properties": {
                                "data": {
                                    "items": {
                                        "$ref": "#/definitions/DirectDebitReturnAdmission"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "direct_debit_return_reversal": {
                            "properties": {
                                "data": {
                                    "items": {
                                        "$ref": "#/definitions/DirectDebitReturnReversal"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "direct_debit_return_submission": {
                            "properties": {
                                "data": {
                                    "items": {
                                        "$ref": "#/definitions/DirectDebitReturnSubmission"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "type": {
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReturnAdmission": {
            "properties": {
                "attributes": {
                    "properties": {
                        "admission_datetime": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                        },
                        "scheme_status_code": {
                            "type": "string"
                        },
                        "scheme_status_code_description": {
                            "type": "string"
                        },
                        "settlement_cycle": {
                            "minimum": 0,
                            "type": "integer"
                        },
                        "settlement_date": {
                            "format": "date",
                            "type": "string"
                        },
                        "source_gateway": {
                            "type": "string"
                        },
                        "status": {
                            "$ref": "#/definitions/DirectDebitReturnAdmissionStatus"
                        }
                    },
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/DirectDebitReturnAdmissionRelationships"
                },
                "type": {
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReturnAdmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/DirectDebitReturnAdmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReturnAdmissionRelationships": {
            "properties": {
                "direct_debit": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/DirectDebit"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "direct_debit_return": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/DirectDebitReturn"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReturnAdmissionStatus": {
            "enum": [
                "confirmed",
                "failed"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReturnCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/DirectDebitReturn"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReturnCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/DirectDebitReturn"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReturnDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/DirectDebitReturn"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReturnReversal": {
            "properties": {
                "attributes": {
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "properties": {
                        "direct_debit": {
                            "properties": {
                                "data": {
                                    "items": {
                                        "$ref": "#/definitions/DirectDebit"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "direct_debit_return": {
                            "properties": {
                                "data": {
                                    "items": {
                                        "$ref": "#/definitions/DirectDebitReturn"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "direct_debit_return_reversal_admission": {
                            "properties": {
                                "data": {
                                    "items": {
                                        "$ref": "#/definitions/DirectDebitReturnReversalAdmission"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "type": {
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReturnReversalAdmission": {
            "properties": {
                "attributes": {
                    "properties": {
                        "scheme_status_code": {
                            "minLength": 1,
                            "type": "string"
                        },
                        "scheme_status_code_description": {
                            "minLength": 1,
                            "type": "string"
                        }
                    },
                    "required": [
                        "scheme_status_code",
                        "scheme_status_code_description"
                    ],
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "properties": {
                        "direct_debit": {
                            "properties": {
                                "data": {
                                    "items": {
                                        "$ref": "#/definitions/DirectDebit"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "direct_debit_return": {
                            "properties": {
                                "data": {
                                    "items": {
                                        "$ref": "#/definitions/DirectDebitReturn"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "direct_debit_return_reversal": {
                            "properties": {
                                "data": {
                                    "items": {
                                        "$ref": "#/definitions/DirectDebitReturnReversal"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "type": {
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReturnReversalAdmissionCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/DirectDebitReturnReversalAdmission"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReturnReversalAdmissionCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/DirectDebitReturnReversalAdmission"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReturnReversalAdmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/DirectDebitReturnReversalAdmission"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReturnReversalCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/DirectDebitReturnReversal"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReturnReversalCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/DirectDebitReturnReversal"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReturnReversalDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/DirectDebitReturnReversal"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReturnSubmission": {
            "properties": {
                "attributes": {
                    "properties": {
                        "scheme_status_code": {
                            "type": "string"
                        },
                        "scheme_status_code_description": {
                            "type": "string"
                        },
                        "status": {
                            "$ref": "#/definitions/DirectDebitReturnSubmissionStatus"
                        },
                        "status_reason": {
                            "type": "string"
                        },
                        "submission_datetime": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                        },
                        "transaction_start_datetime": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "properties": {
                        "direct_debit": {
                            "properties": {
                                "data": {
                                    "items": {
                                        "$ref": "#/definitions/DirectDebit"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "direct_debit_return": {
                            "properties": {
                                "data": {
                                    "items": {
                                        "$ref": "#/definitions/DirectDebitReturn"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "type": {
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReturnSubmissionCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/DirectDebitReturnSubmission"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReturnSubmissionCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/DirectDebitReturnSubmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReturnSubmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/DirectDebitReturnSubmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReturnSubmissionStatus": {
            "enum": [
                "accepted",
                "released_to_gateway",
                "delivery_confirmed",
                "delivery_failed",
                "submitted",
                "validation_pending",
                "validation_passed",
                "queued_for_delivery"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReversal": {
            "properties": {
                "attributes": {
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "properties": {
                        "direct_debit": {
                            "properties": {
                                "data": {
                                    "items": {
                                        "$ref": "#/definitions/DirectDebit"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "direct_debit_reversal_admission": {
                            "properties": {
                                "data": {
                                    "items": {
                                        "$ref": "#/definitions/DirectDebitReversalAdmission"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "type": {
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReversalAdmission": {
            "properties": {
                "attributes": {
                    "properties": {
                        "scheme_status_code": {
                            "type": "string"
                        },
                        "scheme_status_code_description": {
                            "type": "string"
                        },
                        "source_gateway": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "properties": {
                        "direct_debit": {
                            "properties": {
                                "data": {
                                    "items": {
                                        "$ref": "#/definitions/DirectDebit"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "direct_debit_reversal": {
                            "properties": {
                                "data": {
                                    "items": {
                                        "$ref": "#/definitions/DirectDebitReversal"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "type": {
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReversalAdmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/DirectDebitReversalAdmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReversalCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/DirectDebitReversal"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReversalCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/DirectDebitReversal"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitReversalDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/DirectDebitReversal"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitSubmission": {
            "properties": {
                "attributes": {
                    "properties": {
                        "scheme_status_code": {
                            "description": "Scheme-specific status (if submission has been submitted to a scheme)",
                            "example": "0000",
                            "type": "string"
                        },
                        "scheme_status_code_description": {
                            "description": "[Description](http://api-docs.form3.tech/api.html#enumerations-scheme-status-codes-for-bacs) of `scheme_status_code`",
                            "example": "Field 1 (destination sorting code) was invalid",
                            "type": "string"
                        },
                        "status": {
                            "$ref": "#/definitions/DirectDebitSubmissionStatus",
                            "description": "Status of the submission",
                            "example": "released_to_gateway"
                        },
                        "status_reason": {
                            "description": "Description of the submission status",
                            "example": "Accepted without qualification",
                            "type": "string"
                        },
                        "submission_datetime": {
                            "description": "Date of the submission",
                            "example": "2018-03-12T14:11:48.055Z",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                        },
                        "transaction_start_datetime": {
                            "description": "Time the request was received by Form3. Used to compute the total transaction time of an operation.",
                            "example": "2018-03-12T14:11:49.055Z",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "description": "Unique ID",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/DirectDebitSubmissionRelationships"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "direct_debit_submissions",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version of the resource",
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitSubmissionCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/DirectDebitSubmission"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitSubmissionCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/DirectDebitSubmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitSubmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/DirectDebitSubmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitSubmissionRelationships": {
            "properties": {
                "direct_debit": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/DirectDebit"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitSubmissionStatus": {
            "enum": [
                "accepted",
                "released_to_gateway",
                "delivery_confirmed",
                "delivery_failed",
                "submitted",
                "validation_pending",
                "validation_passed",
                "queued_for_delivery"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "DirectDebitWithReturn": {
            "properties": {
                "direct_debit": {
                    "$ref": "#/definitions/DirectDebit"
                },
                "direct_debit_return": {
                    "$ref": "#/definitions/DirectDebitReturn"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "DisputedTransaction": {
            "properties": {
                "amount": {
                    "pattern": "^[0-9.]{0,20}$",
                    "type": "string"
                },
                "date": {
                    "format": "date",
                    "type": "string"
                }
            },
            "required": [
                "date",
                "amount"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXAttributesRate": {
            "properties": {
                "inverse_rate": {
                    "description": "The inverse of the provider rate",
                    "type": "string"
                },
                "provider_rate": {
                    "description": "The rate that the user gets for this deal",
                    "type": "string"
                }
            },
            "required": [
                "provider_rate",
                "inverse_rate"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXDeal": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/FXDealAttributes",
                    "x-order": 7
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-order": 5
                },
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "x-order": 2
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-order": 6
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string",
                    "x-order": 4
                },
                "relationships": {
                    "$ref": "#/definitions/FXDealRelationships",
                    "x-order": 8
                },
                "type": {
                    "$ref": "#/definitions/FXDealResourceType",
                    "x-order": 1
                },
                "version": {
                    "type": "number",
                    "x-order": 3
                }
            },
            "required": [
                "id",
                "organisation_id",
                "type",
                "attributes",
                "relationships",
                "version"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXDealAttributes": {
            "properties": {
                "processing_date": {
                    "$ref": "#/definitions/FXProcessingDate"
                },
                "rate": {
                    "$ref": "#/definitions/FXAttributesRate"
                },
                "source": {
                    "$ref": "#/definitions/FXSource"
                },
                "target": {
                    "$ref": "#/definitions/FXTarget"
                },
                "type": {
                    "$ref": "#/definitions/FXType"
                },
                "warning": {
                    "$ref": "#/definitions/FXWarning"
                }
            },
            "required": [
                "type",
                "source",
                "target",
                "processing_date",
                "rate"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXDealCreatedEvent": {
            "properties": {
                "data": {
                    "properties": {
                        "attributes": {
                            "$ref": "#/definitions/FXDealAttributes",
                            "x-order": 4
                        },
                        "id": {
                            "format": "uuid",
                            "type": "string",
                            "x-order": 2
                        },
                        "organisation_id": {
                            "format": "uuid",
                            "type": "string",
                            "x-order": 3
                        },
                        "relationships": {
                            "$ref": "#/definitions/FXDealCreatedEventRelationships",
                            "x-order": 5
                        },
                        "type": {
                            "$ref": "#/definitions/FXDealResourceType",
                            "x-order": 1
                        }
                    },
                    "required": [
                        "id",
                        "organisation_id",
                        "type",
                        "attributes",
                        "relationships"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXDealCreatedEventRelationshipFXDealSubmission": {
            "properties": {
                "id": {
                    "description": "The FX Deal Submission for this FX Deal",
                    "format": "uuid",
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/FXDealSubmissionResourceType"
                }
            },
            "required": [
                "id",
                "type"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXDealCreatedEventRelationships": {
            "properties": {
                "fx_deal_submission": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/FXDealCreatedEventRelationshipFXDealSubmission"
                            },
                            "type": "array"
                        }
                    },
                    "required": [
                        "data"
                    ],
                    "type": "object"
                },
                "party": {
                    "$ref": "#/definitions/FXDealRelationshipParty"
                }
            },
            "required": [
                "party",
                "fx_deal_submission"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXDealCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/NewFXDeal"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXDealRelationshipFXDealSubmission": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/FXDealSubmissionWithoutRelationships"
                    },
                    "type": "array"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXDealRelationshipParty": {
            "properties": {
                "data": {
                    "properties": {
                        "id": {
                            "description": "The Party that initiated this FxDeal",
                            "format": "uuid",
                            "type": "string"
                        },
                        "type": {
                            "$ref": "#/definitions/PartyResourceType"
                        }
                    },
                    "required": [
                        "id",
                        "type"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXDealRelationships": {
            "properties": {
                "fx_deal_submission": {
                    "$ref": "#/definitions/FXDealRelationshipFXDealSubmission"
                },
                "party": {
                    "$ref": "#/definitions/FXDealRelationshipParty"
                }
            },
            "required": [
                "party",
                "fx_deal_submission"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXDealResourceType": {
            "enum": [
                "fx_deals"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "FXDealResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/FXDeal"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXDealSubmission": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/FXDealSubmissionAttributes",
                    "x-order": 7
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-order": 5
                },
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "x-order": 2
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-order": 6
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string",
                    "x-order": 4
                },
                "relationships": {
                    "$ref": "#/definitions/FXDealSubmissionRelationships",
                    "x-order": 8
                },
                "type": {
                    "$ref": "#/definitions/FXDealSubmissionResourceType",
                    "x-order": 1
                },
                "version": {
                    "type": "number",
                    "x-order": 3
                }
            },
            "required": [
                "id",
                "organisation_id",
                "type",
                "attributes",
                "relationships",
                "version"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXDealSubmissionAttributes": {
            "properties": {
                "provider_id": {
                    "$ref": "#/definitions/FXDealSubmissionProviderID"
                },
                "purposes_coded": {
                    "$ref": "#/definitions/FXDealSubmissionPurposesCoded"
                },
                "reference": {
                    "$ref": "#/definitions/FXDealSubmissionReference"
                },
                "status": {
                    "$ref": "#/definitions/FXDealSubmissionStatus"
                },
                "status_code": {
                    "$ref": "#/definitions/FXDealSubmissionStatusCode"
                },
                "status_reason": {
                    "$ref": "#/definitions/FXDealSubmissionStatusReason"
                }
            },
            "required": [
                "purposes_coded",
                "reference",
                "provider_id",
                "status",
                "status_reason"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXDealSubmissionCreatedEvent": {
            "properties": {
                "data": {
                    "properties": {
                        "attributes": {
                            "$ref": "#/definitions/FXDealSubmissionAttributes",
                            "x-order": 4
                        },
                        "id": {
                            "format": "uuid",
                            "type": "string",
                            "x-order": 2
                        },
                        "organisation_id": {
                            "format": "uuid",
                            "type": "string",
                            "x-order": 3
                        },
                        "relationships": {
                            "$ref": "#/definitions/FXDealSubmissionRelationships",
                            "x-order": 5
                        },
                        "type": {
                            "$ref": "#/definitions/FXDealSubmissionResourceType",
                            "x-order": 1
                        }
                    },
                    "required": [
                        "id",
                        "organisation_id",
                        "type",
                        "attributes",
                        "relationships"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXDealSubmissionCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/NewFXDealSubmission"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXDealSubmissionProviderID": {
            "description": "The ID of the FX provider's associated resource",
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "FXDealSubmissionPurposesCoded": {
            "description": "The purpose code of the FX Deal",
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "FXDealSubmissionReference": {
            "description": "Reference for the FX Deal",
            "type": "string",
            "x-access": [
                "Public"
            ],
            "x-nullable": true
        },
        "FXDealSubmissionRelationshipFXDeal": {
            "properties": {
                "data": {
                    "properties": {
                        "id": {
                            "description": "The FX Deal that is being submitted",
                            "format": "uuid",
                            "type": "string"
                        },
                        "type": {
                            "$ref": "#/definitions/FXDealResourceType"
                        }
                    },
                    "required": [
                        "id",
                        "type"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXDealSubmissionRelationships": {
            "properties": {
                "fx_deal": {
                    "$ref": "#/definitions/FXDealSubmissionRelationshipFXDeal"
                }
            },
            "required": [
                "fx_deal"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXDealSubmissionResourceType": {
            "enum": [
                "fx_deal_submissions"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "FXDealSubmissionResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/FXDealSubmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXDealSubmissionStatus": {
            "description": "The current state of the FX Deal Submission",
            "enum": [
                "accepted",
                "waiting_for_action",
                "failed"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "FXDealSubmissionStatusCode": {
            "description": "The status code of the current state of the FX Deal Submission",
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "FXDealSubmissionStatusReason": {
            "description": "Plain-text description of the status attribute. May provide additional information in case of a submission error.",
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "FXDealSubmissionUpdatedEvent": {
            "properties": {
                "data": {
                    "properties": {
                        "attributes": {
                            "$ref": "#/definitions/FXDealSubmissionAttributes",
                            "x-order": 4
                        },
                        "id": {
                            "format": "uuid",
                            "type": "string",
                            "x-order": 2
                        },
                        "organisation_id": {
                            "format": "uuid",
                            "type": "string",
                            "x-order": 3
                        },
                        "relationships": {
                            "$ref": "#/definitions/FXDealSubmissionRelationships",
                            "x-order": 5
                        },
                        "type": {
                            "$ref": "#/definitions/FXDealSubmissionResourceType",
                            "x-order": 1
                        }
                    },
                    "required": [
                        "id",
                        "organisation_id",
                        "type",
                        "attributes",
                        "relationships"
                    ],
                    "type": "object"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXDealSubmissionWithoutRelationships": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/FXDealSubmissionAttributes",
                    "x-order": 7
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-order": 5
                },
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "x-order": 2
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-order": 6
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string",
                    "x-order": 4
                },
                "type": {
                    "$ref": "#/definitions/FXDealSubmissionResourceType",
                    "x-order": 1
                },
                "version": {
                    "type": "number",
                    "x-order": 3
                }
            },
            "required": [
                "id",
                "organisation_id",
                "type",
                "attributes",
                "version"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXDealsListResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/FXDeal"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "required": [
                "data",
                "links"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXErrorType": {
            "enum": [
                "api.fx.invalid_party_id",
                "api.fx.target_currency_not_allowed",
                "api.fx.source_currency_not_allowed",
                "api.fx.type_not_allowed",
                "api.fx.amount_exceeds_maximum",
                "api.fx.currency_not_allowed",
                "api.fx.currency_not_equal",
                "api.fx.expired_deal",
                "api.fx.invalid_purpose",
                "api.fx.gateway_issue"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "FXProcessingDate": {
            "description": "The date for which the rate would be valid",
            "format": "date",
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "FXRate": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/FXRateAttributes",
                    "x-order": 3
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string",
                    "x-order": 2
                },
                "type": {
                    "$ref": "#/definitions/FXRateResourceType",
                    "x-order": 1
                }
            },
            "required": [
                "type",
                "organisation_id",
                "attributes"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXRateAttributes": {
            "properties": {
                "processing_date": {
                    "$ref": "#/definitions/FXProcessingDate"
                },
                "rate": {
                    "$ref": "#/definitions/FXAttributesRate"
                },
                "source": {
                    "$ref": "#/definitions/FXSource"
                },
                "target": {
                    "$ref": "#/definitions/FXTarget"
                },
                "type": {
                    "$ref": "#/definitions/FXType"
                },
                "warning": {
                    "$ref": "#/definitions/FXWarning"
                }
            },
            "required": [
                "type",
                "source",
                "target",
                "rate",
                "processing_date"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXRateResourceType": {
            "enum": [
                "fx_rates"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "FXRatesListResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/FXRate"
                    },
                    "type": "array"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXSource": {
            "properties": {
                "amount": {
                    "description": "The amount of currency to sell",
                    "pattern": "^[0-9.]{0,20}$",
                    "type": "string"
                },
                "currency": {
                    "description": "The currency the party wants to sell",
                    "type": "string"
                }
            },
            "required": [
                "currency"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXSupportedPartyProductType": {
            "enum": [
                "international_payments_ebury"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "FXTarget": {
            "properties": {
                "amount": {
                    "description": "The amount of currency to buy",
                    "pattern": "^[0-9.]{0,20}$",
                    "type": "string"
                },
                "currency": {
                    "description": "The currency the party wants to buy",
                    "type": "string"
                }
            },
            "required": [
                "currency"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FXType": {
            "description": "Type of foreign exchange",
            "enum": [
                "spot",
                "forward"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "FXWarning": {
            "description": "A warning message when processing_date date was updated",
            "type": "string",
            "x-access": [
                "Public"
            ],
            "x-nullable": true
        },
        "FxDealSubmissionAmendment": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/FxDealSubmissionUpdate"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FxDealSubmissionPatchAttributes": {
            "properties": {
                "provider_id": {
                    "type": "string",
                    "x-nullable": true
                },
                "status": {
                    "$ref": "#/definitions/FXDealSubmissionStatus",
                    "x-nullable": true
                },
                "status_code": {
                    "type": "string",
                    "x-nullable": true
                },
                "status_reason": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "FxDealSubmissionUpdate": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/FxDealSubmissionPatchAttributes"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/FXDealSubmissionResourceType"
                },
                "version": {
                    "type": "number"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "Health": {
            "properties": {
                "status": {
                    "description": "Status of the service. Can either be `up` or `down`.",
                    "enum": [
                        "up",
                        "down"
                    ],
                    "example": "up",
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "IntermediaryBankAccountHoldingEntity": {
            "properties": {
                "bank_address": {
                    "description": "Financial institution address",
                    "example": [
                        "Liverpool Customer Service Centre",
                        "Stevenson Way",
                        "Wavertree",
                        "L13 1NW"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "x-availability": {
                        "get": {
                            "swift": "sometimes"
                        },
                        "post": {
                            "swift": "optional"
                        }
                    },
                    "x-description": {
                        "swift": "Field 56B"
                    },
                    "x-omitempty": true
                },
                "bank_id": {
                    "description": "Financial institution identification",
                    "example": "333333",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "swift": "sometimes"
                        },
                        "post": {
                            "swift": "optional"
                        }
                    },
                    "x-description": {
                        "swift": "Field 56A"
                    },
                    "x-length": 11
                },
                "bank_id_code": {
                    "$ref": "#/definitions/BankIdCode"
                },
                "bank_name": {
                    "description": "Financial institution name",
                    "example": "XYZ BANK PLC",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "swift": "sometimes"
                        },
                        "post": {
                            "swift": "optional"
                        }
                    },
                    "x-description": {
                        "swift": "Field 56D"
                    },
                    "x-length": 35
                },
                "bank_party_id": {
                    "description": "Identifier of the financial institution which services the account",
                    "example": "//AT12345",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "swift": "sometimes"
                        },
                        "post": {
                            "swift": "optional"
                        }
                    },
                    "x-description": {
                        "swift": "Field 56A/56B/56D"
                    },
                    "x-length": 37
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "Links": {
            "additionalProperties": false,
            "description": "Links relevant to the payload",
            "properties": {
                "Self": {
                    "description": "An optional link to the account at the Read/Write Account Information API",
                    "format": "uri",
                    "type": "string"
                },
                "first": {
                    "description": "Link to the first resource in the list",
                    "example": "https://api.test.form3.tech/v1/api_name/resource_type",
                    "type": "string",
                    "x-nullable": true
                },
                "last": {
                    "description": "Link to the last resource in the list",
                    "example": "https://api.test.form3.tech/v1/api_name/resource_type",
                    "type": "string",
                    "x-nullable": true
                },
                "next": {
                    "description": "Link to the next resource in the list",
                    "example": "https://api.test.form3.tech/v1/api_name/resource_type",
                    "type": "string",
                    "x-nullable": true
                },
                "prev": {
                    "description": "Link to the previous resource in the list",
                    "example": "https://api.test.form3.tech/v1/api_name/resource_type",
                    "type": "string",
                    "x-nullable": true
                },
                "self": {
                    "description": "Link to this resource type",
                    "example": "https://api.test.form3.tech/v1/api_name/resource_type",
                    "type": "string"
                }
            },
            "required": [
                "self"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ListContactAccountsResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/ContactAccountRecord"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ListContactsResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/ContactRecord"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ListPartiesResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/PartyRecord"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "Mandate": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/MandateAttributes"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/MandateRelationships"
                },
                "type": {
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "MandateAdmission": {
            "properties": {
                "attributes": {
                    "properties": {
                        "admission_datetime": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                        },
                        "scheme_status_code": {
                            "type": "string"
                        },
                        "scheme_status_code_description": {
                            "type": "string"
                        },
                        "status": {
                            "$ref": "#/definitions/MandateAdmissionStatus"
                        },
                        "status_reason": {
                            "$ref": "#/definitions/MandateAdmissionStatusReason"
                        }
                    },
                    "type": "object"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/MandateAdmissionRelationships"
                },
                "type": {
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "MandateAdmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/MandateAdmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "MandateAdmissionRelationships": {
            "properties": {
                "mandate": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/Mandate"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "MandateAdmissionStatus": {
            "enum": [
                "confirmed",
                "failed"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "MandateAdmissionStatusReason": {
            "enum": [
                "accepted",
                "invalid_beneficiary_details",
                "bankid_not_provisioned",
                "unknown_accountnumber",
                "mandate_cancelled",
                "mandate_expired",
                "mandate_failed"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "MandateAmendment": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Mandate"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "MandateAttributes": {
            "properties": {
                "amount": {
                    "pattern": "^[0-9.]{0,20}$",
                    "type": "string"
                },
                "beneficiary_party": {
                    "$ref": "#/definitions/MandateAttributesBeneficiaryParty"
                },
                "clearing_id": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                },
                "debtor_party": {
                    "$ref": "#/definitions/MandateAttributesDebtorParty"
                },
                "frequency": {
                    "$ref": "#/definitions/MandateFrequency"
                },
                "numeric_reference": {
                    "type": "string"
                },
                "payment_scheme": {
                    "type": "string"
                },
                "processing_date": {
                    "format": "date",
                    "type": "string",
                    "x-nullable": true
                },
                "reference": {
                    "type": "string"
                },
                "scheme_payment_type": {
                    "type": "string"
                },
                "scheme_processing_date": {
                    "format": "date",
                    "type": "string",
                    "x-nullable": true
                },
                "status": {
                    "$ref": "#/definitions/MandateStatus"
                },
                "unique_scheme_id": {
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "MandateAttributesBeneficiaryParty": {
            "properties": {
                "account_name": {
                    "type": "string",
                    "x-omitempty": false
                },
                "account_number": {
                    "pattern": "^[A-Z0-9]{6,34}$",
                    "type": "string"
                },
                "account_number_code": {
                    "$ref": "#/definitions/AccountNumberCode"
                },
                "account_type": {
                    "type": "integer"
                },
                "account_with": {
                    "$ref": "#/definitions/AccountHoldingEntity"
                },
                "address": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "country": {
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "MandateAttributesDebtorParty": {
            "properties": {
                "account_name": {
                    "type": "string",
                    "x-omitempty": false
                },
                "account_number": {
                    "pattern": "^[A-Z0-9]{6,34}$",
                    "type": "string"
                },
                "account_number_code": {
                    "$ref": "#/definitions/AccountNumberCode"
                },
                "account_with": {
                    "$ref": "#/definitions/AccountHoldingEntity"
                },
                "address": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "country": {
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "MandateCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Mandate"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "MandateCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Mandate"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "MandateDetailsListResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/Mandate"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "MandateDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Mandate"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "MandateFrequency": {
            "enum": [
                "daily",
                "weekly",
                "fortnightly",
                "monthly",
                "bimonthly",
                "quarterly",
                "yearly"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "MandateRelationships": {
            "properties": {
                "beneficiary_party": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/BeneficiaryParty"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "debtor_party_account": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/DebtorPartyAccount"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "mandate_admission": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/MandateAdmission"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "mandate_return": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/MandateReturn"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "mandate_submission": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/MandateSubmission"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "MandateResourceType": {
            "enum": [
                "mandates",
                "mandate_admissions",
                "mandate_returns",
                "mandate_return_submissions",
                "mandate_return_submission_validations",
                "mandate_submissions",
                "mandate_submission_validations",
                "mandate_automatic_returns"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "MandateReturn": {
            "properties": {
                "attributes": {
                    "properties": {
                        "debtor_party": {
                            "properties": {
                                "new_bank_details": {
                                    "properties": {
                                        "account_number": {
                                            "type": "string"
                                        },
                                        "account_number_code": {
                                            "$ref": "#/definitions/AccountNumberCode"
                                        },
                                        "account_with": {
                                            "$ref": "#/definitions/AccountHoldingEntity"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "return_code": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "properties": {
                        "mandate": {
                            "properties": {
                                "data": {
                                    "items": {
                                        "$ref": "#/definitions/Mandate"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "mandate_return_submission": {
                            "properties": {
                                "data": {
                                    "items": {
                                        "$ref": "#/definitions/MandateReturnSubmission"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "type": {
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "MandateReturnCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/MandateReturn"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "MandateReturnCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/MandateReturn"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "MandateReturnDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/MandateReturn"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "MandateReturnSubmission": {
            "properties": {
                "attributes": {
                    "properties": {
                        "status": {
                            "$ref": "#/definitions/MandateReturnSubmissionStatus"
                        },
                        "status_reason": {
                            "type": "string"
                        },
                        "submission_datetime": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                        },
                        "transaction_start_datetime": {
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "properties": {
                        "mandate": {
                            "properties": {
                                "data": {
                                    "items": {
                                        "$ref": "#/definitions/Mandate"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        },
                        "mandate_return": {
                            "properties": {
                                "data": {
                                    "items": {
                                        "$ref": "#/definitions/MandateReturn"
                                    },
                                    "type": "array"
                                }
                            },
                            "type": "object"
                        }
                    },
                    "type": "object"
                },
                "type": {
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "MandateReturnSubmissionCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/MandateReturnSubmission"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "MandateReturnSubmissionCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/MandateReturnSubmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "MandateReturnSubmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/MandateReturnSubmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "MandateReturnSubmissionStatus": {
            "enum": [
                "accepted",
                "released_to_gateway",
                "delivery_confirmed",
                "delivery_failed",
                "submitted",
                "validation_pending",
                "validation_passed",
                "queued_for_delivery"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "MandateStatus": {
            "enum": [
                "pending",
                "submitted",
                "active",
                "cancelled",
                "failed"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "MandateSubmission": {
            "properties": {
                "attributes": {
                    "properties": {
                        "last_payment_date": {
                            "format": "date",
                            "type": "string"
                        },
                        "original_mandate": {
                            "$ref": "#/definitions/MandateAttributes"
                        },
                        "status": {
                            "$ref": "#/definitions/MandateSubmissionStatus"
                        },
                        "status_reason": {
                            "type": "string"
                        },
                        "submission_datetime": {
                            "format": "date-time",
                            "type": "string"
                        },
                        "submission_reason": {
                            "type": "string"
                        },
                        "submitted_mandate": {
                            "$ref": "#/definitions/MandateAttributes"
                        }
                    },
                    "type": "object"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/MandateSubmissionRelationships"
                },
                "type": {
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "MandateSubmissionCreation": {
            "properties": {
                "data": {
                    "properties": {
                        "attributes": {
                            "properties": {
                                "last_payment_date": {
                                    "format": "date",
                                    "type": "string"
                                },
                                "submission_reason": {
                                    "type": "string"
                                }
                            },
                            "type": "object"
                        },
                        "id": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "organisation_id": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "type": {
                            "pattern": "^[A-Za-z_]*$",
                            "type": "string"
                        },
                        "version": {
                            "minimum": 0,
                            "type": "integer"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "MandateSubmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/MandateSubmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "MandateSubmissionRelationships": {
            "properties": {
                "mandate": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/Mandate"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "MandateSubmissionStatus": {
            "enum": [
                "accepted",
                "validation_failed",
                "validation_pending",
                "validation_passed",
                "released_to_gateway",
                "queued_for_delivery",
                "submitted",
                "delivery_confirmed",
                "delivery_failed"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "Meta": {
            "description": "Meta Data relevant to the payload",
            "properties": {},
            "title": "MetaData",
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "NewAdviceSubmission": {
            "properties": {
                "attributes": {
                    "properties": {},
                    "type": "object"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "type": {
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "NewFXDeal": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/NewFXDealAttributes"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/NewFXDealRelationships"
                },
                "type": {
                    "$ref": "#/definitions/FXDealResourceType"
                }
            },
            "required": [
                "id",
                "organisation_id",
                "type",
                "attributes",
                "relationships"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "NewFXDealAttributes": {
            "properties": {
                "processing_date": {
                    "$ref": "#/definitions/FXProcessingDate"
                },
                "source": {
                    "$ref": "#/definitions/FXSource"
                },
                "target": {
                    "$ref": "#/definitions/FXTarget"
                },
                "type": {
                    "$ref": "#/definitions/FXType"
                }
            },
            "required": [
                "type",
                "source",
                "target"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "NewFXDealRelationships": {
            "properties": {
                "party": {
                    "$ref": "#/definitions/FXDealRelationshipParty"
                }
            },
            "required": [
                "party"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "NewFXDealSubmission": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/NewFXDealSubmissionAttributes"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "type": {
                    "$ref": "#/definitions/FXDealSubmissionResourceType"
                }
            },
            "required": [
                "id",
                "organisation_id",
                "type",
                "attributes"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "NewFXDealSubmissionAttributes": {
            "properties": {
                "purposes_coded": {
                    "$ref": "#/definitions/FXDealSubmissionPurposesCoded"
                },
                "reference": {
                    "$ref": "#/definitions/FXDealSubmissionReference"
                }
            },
            "required": [
                "purposes_coded"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "NewPaymentSubmission": {
            "properties": {
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "properties": {
                        "validations": {
                            "$ref": "#/definitions/RelationshipLinks"
                        }
                    },
                    "type": "object"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "payment_submissions",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "NewRecall": {
            "properties": {
                "attributes": {
                    "properties": {
                        "reason": {
                            "description": "Further explanation of the reason given in reason_code. Only evaluated for certain reason codes.",
                            "example": "Payment was a duplicate",
                            "type": "string",
                            "x-omitempty": true
                        },
                        "reason_code": {
                            "description": "The reason for the recall. Has to be a valid [recall reason code](http://api-docs.form3.tech/api.html#enumerations-recall-reason-codes).",
                            "example": "DUPL",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/RecallRelationships"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "recalls",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "NewRecallDecisionSubmission": {
            "properties": {
                "attributes": {
                    "type": "object"
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "recall_decision_submissions",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "NewRecallSubmission": {
            "properties": {
                "attributes": {
                    "type": "object"
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/RecallSubmissionRelationships"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "recall_submissions",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "NewReturnSubmission": {
            "properties": {
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/ReturnSubmissionRelationships"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "return_submissions",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "NewReversalSubmission": {
            "properties": {
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "reversal_submissions",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "Notification": {
            "properties": {
                "data": {
                    "description": "The full resource itself (as you would see from a GET request)",
                    "type": "object"
                },
                "data_record_type": {
                    "description": "Internal representation of the record type. Field values are subject to frequent change, evaluation of this field is discouraged.",
                    "example": "PaymentAdmission",
                    "pattern": "^[A-Za-z]*$",
                    "type": "string"
                },
                "event_type": {
                    "description": "The type of event",
                    "example": "created",
                    "pattern": "^[a-z]*$",
                    "type": "string"
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "e1fa2883-940a-44d5-88af-e1a62123c67a",
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "record_type": {
                    "description": "The type of resource contained in `data`",
                    "example": "payment_admissions",
                    "pattern": "^[A-Za-z]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "OBError1": {
            "additionalProperties": false,
            "minProperties": 1,
            "properties": {
                "ErrorCode": {
                    "description": "Low level textual error code, e.g., UK.OBIE.Field.Missing",
                    "maxLength": 128,
                    "minLength": 1,
                    "type": "string"
                },
                "Message": {
                    "description": "A description of the error that occurred. e.g., 'A mandatory field isn't supplied' or 'RequestedExecutionDateTime must be in future'\nOBIE doesn't standardise this field",
                    "maxLength": 500,
                    "minLength": 1,
                    "type": "string"
                },
                "Path": {
                    "description": "Recommended but optional reference to the JSON Path of the field with error, e.g., Data.Initiation.InstructedAmount.Currency",
                    "maxLength": 40,
                    "minLength": 1,
                    "type": "string"
                },
                "Url": {
                    "description": "URL to help remediate the problem, or provide more information, or to API Reference, or help etc",
                    "type": "string"
                }
            },
            "required": [
                "ErrorCode",
                "Message"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "OBErrorResponse1": {
            "additionalProperties": false,
            "description": "An array of detail error codes, and messages, and URLs to documentation to help remediation.",
            "properties": {
                "Code": {
                    "description": "High level textual error code, to help categorize the errors.",
                    "maxLength": 40,
                    "minLength": 1,
                    "type": "string"
                },
                "Errors": {
                    "items": {
                        "$ref": "#/definitions/OBError1"
                    },
                    "minItems": 1,
                    "type": "array"
                },
                "Id": {
                    "description": "A unique reference for the error instance, for audit purposes, in case of unknown/unclassified errors.",
                    "maxLength": 40,
                    "minLength": 1,
                    "type": "string"
                },
                "Message": {
                    "description": "Brief Error message, e.g., 'There is something wrong with the request parameters provided'",
                    "maxLength": 500,
                    "minLength": 1,
                    "type": "string"
                }
            },
            "required": [
                "Code",
                "Message",
                "Errors"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "OBExternalAccountType1Code": {
            "description": "Specifies the type of account (personal or business).",
            "enum": [
                "Business",
                "Personal"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "Organisation": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/OrganisationAttributes"
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "organisations",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "OrganisationAttributes": {
            "properties": {
                "name": {
                    "description": "Name of the organisation",
                    "example": "Acme Corporation",
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "OrganisationCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Organisation"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "OrganisationCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Organisation"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "OrganisationDetailsListResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/Organisation"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "OrganisationDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Organisation"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "OrganisationUpdate": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Organisation"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "Participant": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/ParticipantAttributes"
                },
                "id": {
                    "description": "Participant ID",
                    "type": "string"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "participants",
                    "pattern": "^[A-Za-z]*$",
                    "type": "string"
                }
            },
            "required": [
                "id",
                "attributes"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ParticipantAttributes": {
            "properties": {
                "bank_code": {
                    "description": "Participant's bank code(s)",
                    "example": [
                        "1234",
                        "0998"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "cop_endpoint": {
                    "description": "URL where the participant Confirmation of Payee endpoint may be found",
                    "example": "https://abcbank.co.uk/apis/open-banking/v3.1/confirmation-payee/accounts/name-verification",
                    "type": "string"
                },
                "cop_requests_active": {
                    "description": "Whether the participant is currently accepting Confirmation of Payee requests",
                    "type": "boolean"
                },
                "participant_name": {
                    "description": "Name of the participant",
                    "example": "ABC Bank",
                    "pattern": "^[A-Za-z]*$",
                    "type": "string"
                }
            },
            "required": [
                "participant_name",
                "cop_endpoint",
                "cop_requests_active"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ParticipantLinks": {
            "properties": {
                "self": {
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ParticipantResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/Participant"
                    },
                    "maxItems": 1,
                    "minItems": 1,
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/ParticipantLinks"
                }
            },
            "required": [
                "data",
                "links"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "Party": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/PartyAttributes"
                },
                "created_on": {
                    "format": "datetime",
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "datetime",
                    "type": "string"
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/Relationships"
                },
                "type": {
                    "enum": [
                        "parties"
                    ],
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id",
                "attributes"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PartyAccount": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/PartyAccountAttributes",
                    "type": "object"
                },
                "created_on": {
                    "format": "datetime",
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "datetime",
                    "type": "string"
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/Relationships"
                },
                "type": {
                    "enum": [
                        "party_accounts"
                    ],
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id",
                "attributes"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PartyAccountAttributes": {
            "properties": {
                "account_name": {
                    "type": "string"
                },
                "account_number": {
                    "type": "string"
                },
                "account_number_code": {
                    "type": "string"
                },
                "account_type": {
                    "type": "string"
                },
                "account_with": {
                    "$ref": "#/definitions/PartyAccountAttributesAccountWith"
                },
                "country": {
                    "type": "string"
                },
                "currency": {
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PartyAccountAttributesAccountWith": {
            "properties": {
                "bank_id": {
                    "type": "string"
                },
                "bank_id_code": {
                    "type": "string"
                },
                "bank_name": {
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PartyAccountGetResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/PartyAccount"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PartyAccountRecord": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/PartyAccount"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PartyAttributes": {
            "properties": {
                "address": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "city": {
                    "type": "string"
                },
                "contact_method": {
                    "enum": [
                        "email"
                    ],
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "district": {
                    "type": "string"
                },
                "email_address": {
                    "type": "string"
                },
                "identification": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "identification_type": {
                    "enum": [
                        "CompanyRegNumber"
                    ],
                    "type": "string"
                },
                "name": {
                    "items": {
                        "type": "string"
                    },
                    "type": "array"
                },
                "party_type": {
                    "enum": [
                        "organisation"
                    ],
                    "type": "string"
                },
                "post_code": {
                    "type": "string"
                },
                "province": {
                    "type": "string"
                },
                "telephone_number": {
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PartyCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Party"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PartyCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Party"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PartyGetResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Party"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PartyProduct": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/PartyProductAttributes",
                    "type": "object"
                },
                "created_on": {
                    "format": "datetime",
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "datetime",
                    "type": "string"
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/Relationships"
                },
                "type": {
                    "enum": [
                        "party_products"
                    ],
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id",
                "attributes"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PartyProductAttributes": {
            "properties": {
                "product": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/PartyProductStatus"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PartyProductCreatedEventPartyProduct": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/PartyProductAttributes",
                    "type": "object"
                },
                "created_on": {
                    "format": "datetime",
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "datetime",
                    "type": "string"
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "properties": {
                        "party": {
                            "$ref": "#/definitions/PartyProductEventPartyRelationship",
                            "type": "object",
                            "x-nullable": true
                        }
                    },
                    "type": "object"
                },
                "type": {
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PartyProductEventPartyRelationship": {
            "properties": {
                "data": {
                    "items": {
                        "properties": {
                            "id": {
                                "format": "uuid",
                                "type": "string"
                            },
                            "type": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "id",
                            "type"
                        ],
                        "type": "object"
                    },
                    "type": "array"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PartyProductStatus": {
            "enum": [
                "pending",
                "active",
                "inactive"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "PartyProductUpdatedEvent": {
            "properties": {
                "event_type": {
                    "enum": [
                        "updated"
                    ],
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "party_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "party_product_status": {
                    "$ref": "#/definitions/PartyProductStatus"
                },
                "product_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "record_type": {
                    "$ref": "#/definitions/ResourceType",
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                },
                "vendor_status": {
                    "type": "string"
                }
            },
            "required": [
                "id",
                "organisation_id",
                "record_type",
                "event_type"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PartyRecord": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Party"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PartyResourceType": {
            "enum": [
                "parties"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "Payment": {
            "properties": {
                "attributes": {
                    "properties": {
                        "amount": {
                            "description": "Amount of money moved between the instructing agent and instructed agent",
                            "example": "10.00",
                            "pattern": "^[0-9.]{0,20}$",
                            "type": "string",
                            "x-availability": {
                                "get": {
                                    "bacs": "always",
                                    "fps": "always",
                                    "sepa": "always"
                                },
                                "post": {
                                    "bacs": "required",
                                    "fps": "required",
                                    "sepa": "required"
                                }
                            },
                            "x-description": {
                                "bacs": "Field8, automatically converted to pence when submitted to Bacs. Maximum value `20000000.00`.",
                                "fps": "Format uses decimal point. Maximum two decimals, value must be > 0. Maximum value `250000.00`.",
                                "sepa": "Interbank settlement amount, must have 2 decimal places. Maximum value `15000.00`.",
                                "swift": "Field 32A: Interbank Settled Amount (15). No maximum value."
                            }
                        },
                        "batch_booking_indicator": {
                            "type": "string"
                        },
                        "batch_id": {
                            "type": "string"
                        },
                        "batch_type": {
                            "type": "string"
                        },
                        "beneficiary_party": {
                            "properties": {
                                "account_name": {
                                    "description": "Name of beneficiary as given with account",
                                    "example": "James Bond",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "bacs": "sometimes",
                                            "fps": "sometimes",
                                            "swift": "sometimes"
                                        },
                                        "post": {
                                            "bacs": "required",
                                            "fps": "required",
                                            "swift": "required"
                                        }
                                    },
                                    "x-description": {
                                        "bacs": "Field11",
                                        "swift": "Field 59A: Beneficiary customer name and address (140)"
                                    },
                                    "x-length": 40
                                },
                                "account_number": {
                                    "description": "Beneficiary account number",
                                    "example": "71268996",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "bacs": "always",
                                            "fps": "always",
                                            "sepa": "always",
                                            "swift": "always"
                                        },
                                        "post": {
                                            "bacs": "required",
                                            "fps": "required",
                                            "sepa": "required",
                                            "swift": "required"
                                        }
                                    },
                                    "x-description": {
                                        "bacs": "Field2",
                                        "sepa": "Must be in IBAN format",
                                        "swift": "Field 59A: Beneficiary customer, Account Component (34)"
                                    },
                                    "x-length": 34
                                },
                                "account_number_code": {
                                    "$ref": "#/definitions/AccountNumberCode"
                                },
                                "account_type": {
                                    "description": "The type of the account given with `beneficiary_party.account_number`. Single digit number. Only required if requested by the beneficiary party. Defaults to 0.",
                                    "example": 0,
                                    "type": "integer",
                                    "x-availability": {
                                        "post": {
                                            "bacs": "optional",
                                            "fps": "optional"
                                        }
                                    },
                                    "x-description": {
                                        "bacs": "Field3 (Defaults to 0)",
                                        "fps": "Single digit number. Only required if requested by the beneficiary party. Defaults to 0."
                                    }
                                },
                                "account_with": {
                                    "$ref": "#/definitions/BeneficiaryDebtorAccountHoldingEntity"
                                },
                                "address": {
                                    "description": "Beneficiary address",
                                    "example": [
                                        "1 Clarence Mew",
                                        "Horsforth",
                                        "Leeds Ls18 4EP"
                                    ],
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "x-availability": {
                                        "get": {
                                            "fps": "sometimes",
                                            "sepa": "sometimes",
                                            "swift": "sometimes"
                                        },
                                        "post": {
                                            "fps": "optional",
                                            "sepa": "optional",
                                            "swift": "optional"
                                        }
                                    },
                                    "x-description": {
                                        "sepa": "Max 2 lines of 70 text",
                                        "swift": "Field 59A: Beneficiary customer name and address (140)"
                                    },
                                    "x-omitempty": true
                                },
                                "birth_city": {
                                    "description": "Beneficiary birth city",
                                    "example": "PARIS",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "sepa": "sometimes"
                                        },
                                        "post": {
                                            "sepa": "conditional"
                                        }
                                    },
                                    "x-description": {
                                        "sepa": "If a Beneficiary Identification is used then only one of `beneficiary_party.organisation_identification`, `beneficiary_party.private_identification` or date and place of birth can be present."
                                    },
                                    "x-length": 35
                                },
                                "birth_country": {
                                    "description": "Beneficiary birth country, ISO 3166 format country code",
                                    "example": "FR",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "sepa": "sometimes"
                                        },
                                        "post": {
                                            "sepa": "conditional"
                                        }
                                    },
                                    "x-description": {
                                        "sepa": "If a Beneficiary Identification is used then only one of `beneficiary_party.organisation_identification`, `beneficiary_party.private_identification` or date and place of birth can be present."
                                    },
                                    "x-length": 2
                                },
                                "birth_date": {
                                    "description": "Beneficiary birth date. Formatted according to ISO 8601 format: YYYY-MM-DD",
                                    "example": "1977-02-28",
                                    "format": "date",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "sepa": "sometimes"
                                        },
                                        "post": {
                                            "sepa": "optional"
                                        }
                                    },
                                    "x-description": {
                                        "sepa": "If a Beneficiary Identification is used then only one of `beneficiary_party.organisation_identification`, `beneficiary_party.private_identification` or date and place of birth can be present."
                                    },
                                    "x-nullable": true
                                },
                                "birth_province": {
                                    "description": "Beneficiary birth province",
                                    "example": "NORTHSIDE",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "sepa": "sometimes"
                                        },
                                        "post": {
                                            "sepa": "optional"
                                        }
                                    },
                                    "x-description": {
                                        "sepa": "If a Beneficiary Identification is used then only one of `beneficiary_party.organisation_identification`, `beneficiary_party.private_identification` or date and place of birth can be present."
                                    },
                                    "x-length": 35
                                },
                                "country": {
                                    "description": "Country of the beneficiary address, ISO 3166 format country code",
                                    "example": "DE",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "sepa": "sometimes"
                                        },
                                        "post": {
                                            "sepa": "conditional"
                                        }
                                    },
                                    "x-length": 2
                                },
                                "name": {
                                    "description": "Beneficiary name",
                                    "example": "James Bond",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "fps": "sometimes",
                                            "sepa": "always",
                                            "swift": "sometimes"
                                        },
                                        "post": {
                                            "fps": "optional",
                                            "sepa": "required",
                                            "swift": "optional"
                                        }
                                    },
                                    "x-description": {
                                        "swift": "Field 59A: Beneficiary customer name and address (140)"
                                    },
                                    "x-length": 70
                                },
                                "organisation_identification": {
                                    "description": "Organisation identification of a beneficiary, used in the case that the beneficiary is an organisation and not a private person",
                                    "example": "ID1234656",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "sepa": "sometimes"
                                        },
                                        "post": {
                                            "sepa": "optional"
                                        }
                                    },
                                    "x-description": {
                                        "sepa": "The Identification can either be a BIC, BEI or Other Identification"
                                    },
                                    "x-length": 35
                                },
                                "organisation_identification_code": {
                                    "description": "The code that specifies the type of `organisation_identification`",
                                    "example": "BIC",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "sepa": "sometimes"
                                        },
                                        "post": {
                                            "sepa": "conditional"
                                        }
                                    },
                                    "x-description": {
                                        "sepa": "If `beneficiary_party.organisation_identification` is specified, must be one of `BIC`, `BEI`, `BANK`, `CBID`, `CHID`, `CINC`, `COID`, `CUST`, `DUNS`, `EMPL`, `GS1G`, `SREN`, `SRET`, `TXID` or `Other`"
                                    },
                                    "x-length": 5
                                },
                                "organisation_identification_issuer": {
                                    "description": "Issuer of the `organisation_identification`",
                                    "example": "NATIONAL WESTMINSTER BANK PLC",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "sepa": "sometimes"
                                        },
                                        "post": {
                                            "sepa": "optional"
                                        }
                                    },
                                    "x-description": {
                                        "sepa": "May only be present if `beneficiary_party.organisation_identification_code` is `Other`"
                                    },
                                    "x-length": 35
                                },
                                "organisation_identification_scheme": {
                                    "description": "The code that specifies the scheme of `organisation_identification`",
                                    "example": "CustomerId",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "sepa": "sometimes"
                                        },
                                        "post": {
                                            "sepa": "optional"
                                        }
                                    },
                                    "x-description": {
                                        "sepa": "May only be present if `beneficiary_party.organisation_identification_code` is `Other`"
                                    },
                                    "x-length": 35
                                },
                                "private_identification": {
                                    "$ref": "#/definitions/PrivateIdentification"
                                },
                                "telephone_number": {
                                    "description": "Beneficiary phone number",
                                    "example": "+447921123987",
                                    "type": "string",
                                    "x-length": 16
                                }
                            },
                            "type": "object"
                        },
                        "category_purpose": {
                            "description": "Category purpose in proprietary form. Specifies the high level purpose of the instruction. Cannot be used at the same time as `category_purpose_coded`.",
                            "example": null,
                            "type": "string",
                            "x-availability": {
                                "get": {
                                    "sepa": "sometimes"
                                },
                                "post": {
                                    "sepa": "optional"
                                }
                            },
                            "x-length": 35
                        },
                        "category_purpose_coded": {
                            "description": "Category purpose in a coded form. Specifies the high level purpose of the instruction. Cannot be used at the same time as `category_purpose`.",
                            "example": null,
                            "type": "string",
                            "x-availability": {
                                "get": {
                                    "sepa": "sometimes"
                                },
                                "post": {
                                    "sepa": "optional"
                                }
                            },
                            "x-description": {
                                "sepa": "The codes used must be part of the ISO 20022 ExternalCategoryPurpose1Code list"
                            },
                            "x-length": 4
                        },
                        "charges_information": {
                            "$ref": "#/definitions/ChargesInformation",
                            "x-omitempty": true
                        },
                        "clearing_id": {
                            "description": "Unique identifier for organisations collecting payments",
                            "example": null,
                            "type": "string",
                            "x-availability": {
                                "get": {
                                    "bacs": "always"
                                },
                                "post": {
                                    "bacs": "required"
                                }
                            },
                            "x-description": {
                                "bacs": "Bacs Service User Number (6 numeric digits). VOL1/Field7 HDR1/Field 3 EOF1/Field 3"
                            },
                            "x-length": 6
                        },
                        "currency": {
                            "description": "Currency of the transaction amount. Currency code as defined in [ISO 4217](http://www.iso.org/iso/home/standards/currency_codes.htm)",
                            "example": "EUR",
                            "type": "string",
                            "x-availability": {
                                "get": {
                                    "bacs": "always",
                                    "fps": "always",
                                    "sepa": "always",
                                    "swift": "always"
                                },
                                "post": {
                                    "bacs": "required",
                                    "fps": "required",
                                    "sepa": "required",
                                    "swift": "required"
                                }
                            },
                            "x-description": {
                                "bacs": "Field 32A: Digits 7-9",
                                "sepa": "Must be `EUR`"
                            },
                            "x-length": 3
                        },
                        "debtor_party": {
                            "properties": {
                                "account_name": {
                                    "description": "Name of debtor as given with account",
                                    "example": "Jane Bond",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "bacs": "always",
                                            "fps": "always",
                                            "swift": "always"
                                        },
                                        "post": {
                                            "bacs": "required",
                                            "fps": "required",
                                            "swift": "required"
                                        }
                                    },
                                    "x-description": {
                                        "bacs": "Field9",
                                        "swift": "Field 50A: Ordering customer name and address (140)"
                                    },
                                    "x-length": 40
                                },
                                "account_number": {
                                    "description": "Debtor account number. Allows upper case and numeric characters.",
                                    "example": "12345678",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "bacs": "always",
                                            "fps": "always",
                                            "sepa": "always",
                                            "swift": "always"
                                        },
                                        "post": {
                                            "bacs": "required",
                                            "fps": "required",
                                            "sepa": "required",
                                            "swift": "required"
                                        }
                                    },
                                    "x-description": {
                                        "bacs": "Field6",
                                        "fps": "Domestic account number if `account_number_code` is `BBAN`, IBAN if `account_number_code` is `IBAN`",
                                        "sepa": "Must be in IBAN format.",
                                        "swift": "Field 50A: Ordering customer Account Component (34)"
                                    },
                                    "x-length": 34
                                },
                                "account_number_code": {
                                    "$ref": "#/definitions/AccountNumberCode"
                                },
                                "account_with": {
                                    "$ref": "#/definitions/BeneficiaryDebtorAccountHoldingEntity"
                                },
                                "address": {
                                    "description": "Debtor address",
                                    "example": [
                                        "63 St Mary Axe",
                                        "London",
                                        "EC3A 8AA"
                                    ],
                                    "items": {
                                        "type": "string"
                                    },
                                    "type": "array",
                                    "x-availability": {
                                        "get": {
                                            "fps": "sometimes",
                                            "sepa": "sometimes",
                                            "swift": "sometimes"
                                        },
                                        "post": {
                                            "fps": "optional",
                                            "sepa": "optional",
                                            "swift": "optional"
                                        }
                                    },
                                    "x-description": {
                                        "sepa": "Max 2 lines of 70 text.",
                                        "swift": "Field 50A: Ordering customer name and address (140)"
                                    },
                                    "x-omitempty": true
                                },
                                "birth_city": {
                                    "description": "Debtor birth city",
                                    "example": "PARIS",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "sepa": "sometimes"
                                        },
                                        "post": {
                                            "sepa": "conditional"
                                        }
                                    },
                                    "x-description": {
                                        "sepa": "If a Debtor Identification is used then only one of `debtor_party.organisation_identification`, `debtor_party.private_identification` or date and place of birth can be present."
                                    },
                                    "x-length": 35
                                },
                                "birth_country": {
                                    "description": "Debtor birth country. ISO 3166 format country code",
                                    "example": "FR",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "sepa": "sometimes"
                                        },
                                        "post": {
                                            "sepa": "conditional"
                                        }
                                    },
                                    "x-description": {
                                        "sepa": "If a Debtor Identification is used then only one of `debtor_party.organisation_identification`, `debtor_party.private_identification` or date and place of birth can be present."
                                    },
                                    "x-length": 2
                                },
                                "birth_date": {
                                    "description": "Debtor birth date. Formatted according to ISO 8601 format: YYYY-MM-DD",
                                    "example": "1973-01-31",
                                    "format": "date",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "sepa": "optional"
                                        },
                                        "post": {
                                            "sepa": "conditional"
                                        }
                                    },
                                    "x-description": {
                                        "sepa": "If a Debtor Identification is used then only one of `debtor_party.organisation_identification`, `debtor_party.private_identification` or date and place of birth can be present."
                                    },
                                    "x-nullable": true
                                },
                                "birth_province": {
                                    "description": "Debtor birth province",
                                    "example": "SOUTH SIDE",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "sepa": "sometimes"
                                        },
                                        "post": {
                                            "sepa": "optional"
                                        }
                                    },
                                    "x-description": {
                                        "sepa": "If a Debtor Identification is used then only one of `debtor_party.organisation_identification`, `debtor_party.private_identification` or date and place of birth can be present."
                                    },
                                    "x-length": 35
                                },
                                "country": {
                                    "description": "Country of debtor address. ISO 3166 format country code\"",
                                    "example": "GB",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "sepa": "sometimes"
                                        },
                                        "post": {
                                            "sepa": "optional"
                                        }
                                    },
                                    "x-length": 2
                                },
                                "customer_id": {
                                    "description": "SWIFT BIC for ordering customer, either BIC8 or BIC11",
                                    "example": "BARCGB22",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "swift": "sometimes"
                                        },
                                        "post": {
                                            "swift": "optional"
                                        }
                                    },
                                    "x-description": {
                                        "swift": "Field 50A"
                                    },
                                    "x-length": 11
                                },
                                "customer_id_code": {
                                    "description": "Code for `customer_id`",
                                    "example": "SWBIC",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "swift": "sometimes"
                                        },
                                        "post": {
                                            "swift": "optional"
                                        }
                                    },
                                    "x-length": 5
                                },
                                "name": {
                                    "description": "Debtor name",
                                    "example": "Norman Smith",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "fps": "sometimes",
                                            "sepa": "always",
                                            "swift": "sometimes"
                                        },
                                        "post": {
                                            "fps": "optional",
                                            "sepa": "required",
                                            "swift": "optional"
                                        }
                                    },
                                    "x-description": {
                                        "swift": "Field 50A: Ordering customer name and address (140)"
                                    },
                                    "x-length": 70
                                },
                                "organisation_identification": {
                                    "description": "Organisation identification of a debtor, in the case that the debtor is an organisation and not a private person",
                                    "example": "ID1234656",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "sepa": "sometimes"
                                        },
                                        "post": {
                                            "sepa": "optional"
                                        }
                                    },
                                    "x-description": {
                                        "sepa": "The Identification can either be a BIC, BEI or Other Identification"
                                    },
                                    "x-length": 35
                                },
                                "organisation_identification_code": {
                                    "description": "The code that specifies the type of `organisation_identification`",
                                    "example": "BIC",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "sepa": "sometimes"
                                        },
                                        "post": {
                                            "sepa": "conditional"
                                        }
                                    },
                                    "x-description": {
                                        "sepa": "If `debtor_party.organisation_identification` is specified, must be one of `BIC`, `BEI`, `BANK`, `CBID`, `CHID`, `CINC`, `COID`, `CUST`, `DUNS`, `EMPL`, `GS1G`, `SREN`, `SRET`, `TXID` or `Other`"
                                    },
                                    "x-length": 5
                                },
                                "organisation_identification_issuer": {
                                    "description": "Issuer of the `organisation_identification`",
                                    "example": "NATIONAL WESTMINSTER BANK PLC",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "sepa": "sometimes"
                                        },
                                        "post": {
                                            "sepa": "optional"
                                        }
                                    },
                                    "x-description": {
                                        "sepa": "May only be present if `debtor_party.organisation_identification_code` is `Other`"
                                    },
                                    "x-length": 35
                                },
                                "organisation_identification_scheme": {
                                    "description": "The code that specifies the scheme of `organisation_identification`",
                                    "example": "CustomerId",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "sepa": "sometimes"
                                        },
                                        "post": {
                                            "sepa": "optional"
                                        }
                                    },
                                    "x-description": {
                                        "sepa": "May only be present if `debtor_party.organisation_identification_code` is `Other`"
                                    },
                                    "x-length": 35
                                },
                                "private_identification": {
                                    "$ref": "#/definitions/PrivateIdentification"
                                }
                            },
                            "type": "object"
                        },
                        "end_to_end_reference": {
                            "description": "Unique identification, as assigned by the initiating party, to unambiguously identify the transaction. This identification is passed on, unchanged, throughout the entire end-to-end chain.",
                            "example": "PAYMENT REF: 20094",
                            "type": "string",
                            "x-availability": {
                                "get": {
                                    "fps": "sometimes",
                                    "sepa": "always",
                                    "swift": "sometimes"
                                },
                                "post": {
                                    "fps": "optional",
                                    "sepa": "required",
                                    "swift": "optional"
                                }
                            },
                            "x-description": {
                                "sepa": "In the event that no reference was given, `NOTPROVIDED` must be used.",
                                "swift": "Field70: Remittance Information after /ROC/ code (31)"
                            },
                            "x-length": 35
                        },
                        "file_number": {
                            "type": "string"
                        },
                        "fx": {
                            "properties": {
                                "contract_reference": {
                                    "description": "Reference to the foreign exchange contract associated with the transaction",
                                    "example": "FXCONTRACT/REF/123567",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "fps": "sometimes",
                                            "swift": "sometimes"
                                        },
                                        "post": {
                                            "fps": "optional",
                                            "swift": "optional"
                                        }
                                    },
                                    "x-length": 35
                                },
                                "exchange_rate": {
                                    "description": "Factor used to convert an amount from the instructed currency into the transaction currency: i.e. to convert the `fx.original_amount`, expressed in the `fx.original_currency`, to `amount` specified in `currency`. Decimal value, represented as a string, maximum length 12. Must be > 0.",
                                    "example": "0.13343",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "fps": "sometimes",
                                            "sepa": "sometimes",
                                            "swift": "sometimes"
                                        },
                                        "post": {
                                            "fps": "optional",
                                            "sepa": "conditional",
                                            "swift": "optional"
                                        }
                                    },
                                    "x-description": {
                                        "sepa": "If the instructed currency is not `EUR`: `fx.exchange_rate`, `fx.original_amount` and `fx.original_currency` must be provided",
                                        "swift": "Field 36 Exchange Rate (12)"
                                    }
                                },
                                "original_amount": {
                                    "description": "Amount of money to be moved between the debtor and creditor, before deduction of charges, expressed in the currency as instructed by the initiating party. Decimal value. Must be > 0.",
                                    "example": "100.00",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "fps": "sometimes",
                                            "sepa": "sometimes",
                                            "swift": "sometimes"
                                        },
                                        "post": {
                                            "fps": "optional",
                                            "sepa": "conditional",
                                            "swift": "optional"
                                        }
                                    },
                                    "x-description": {
                                        "sepa": "If the instructed currency is not `EUR`: `fx.exchange_rate`, `fx.original_amount` and `fx.original_currency` must be provided.",
                                        "swift": "Field 33B: Currency/instructed amount (18)"
                                    }
                                },
                                "original_currency": {
                                    "description": "Currency of `original_amount`. Currency code as defined in ISO 4217.",
                                    "example": "EUR",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "fps": "sometimes",
                                            "sepa": "sometimes",
                                            "swift": "sometimes"
                                        },
                                        "post": {
                                            "fps": "optional",
                                            "sepa": "conditional",
                                            "swift": "optional"
                                        }
                                    },
                                    "x-description": {
                                        "sepa": "If the instructed currency is not `EUR`: `fx.exchange_rate`, `fx.original_amount` and `fx.original_currency` must be provided.",
                                        "swift": "Field 33B: Currency/instructed amount (18)"
                                    },
                                    "x-length": 3
                                }
                            },
                            "type": "object"
                        },
                        "instruction_id": {
                            "description": "Unique identification, as assigned by the initiating party to unambiguously identify the transaction. This identification is an point-to-point reference and is passed on, unchanged, throughout the entire chain. Cannot include leading, trailing or internal spaces.",
                            "example": "ID1245799",
                            "type": "string",
                            "x-availability": {
                                "get": {
                                    "sepa": "sometimes"
                                },
                                "post": {
                                    "sepa": "optional"
                                }
                            },
                            "x-description": {
                                "sepa": "Cannot include leading, trailing or internal spaces"
                            },
                            "x-length": 35
                        },
                        "intermediary_bank": {
                            "$ref": "#/definitions/IntermediaryBankAccountHoldingEntity"
                        },
                        "numeric_reference": {
                            "description": "Numeric reference field, see scheme specific descriptions for usage",
                            "example": null,
                            "type": "string",
                            "x-availability": {
                                "get": {
                                    "bacs": "sometimes",
                                    "fps": "sometimes"
                                },
                                "post": {
                                    "bacs": "optional",
                                    "fps": "optional"
                                }
                            },
                            "x-description": {
                                "bacs": "Field7: Reference field used for UK tax info and Bacs Returns"
                            },
                            "x-length": 4
                        },
                        "payment_acceptance_datetime": {
                            "description": "Timestamp of when the payment instruction meets the set processing conditions. Format: YYYY-MM-DDThh:mm:ss:mmm+hh:mm",
                            "example": "2017-09-30T12:36:02.123+01:00",
                            "format": "date-time",
                            "type": "string",
                            "x-nullable": true
                        },
                        "payment_purpose": {
                            "description": "Purpose of the payment in a proprietary form",
                            "example": "X",
                            "type": "string",
                            "x-availability": {
                                "get": {
                                    "fps": "sometimes",
                                    "sepa": "sometimes",
                                    "swift": "sometimes"
                                },
                                "post": {
                                    "fps": "optional",
                                    "sepa": "optional",
                                    "swift": "optional"
                                }
                            },
                            "x-description": {
                                "fps": "FPS Procedures do not mandate any values for the use of this field",
                                "swift": "Field 26T: Transaction Type (3)"
                            },
                            "x-length": 35
                        },
                        "payment_purpose_coded": {
                            "description": "Purpose of the payment in a coded form",
                            "type": "string",
                            "x-availability": {
                                "get": {
                                    "sepa": "sometimes"
                                },
                                "post": {
                                    "sepa": "optional"
                                }
                            },
                            "x-description": {
                                "sepa": "The codes used must be part of the ISO 20022 ExternalPurpose1Code list."
                            },
                            "x-length": 4
                        },
                        "payment_scheme": {
                            "description": "Clearing infrastructure through which the payment instruction is to be processed. Default for given organisation ID is used if left empty. Has to be a valid [scheme identifier](http://draft-api-docs.form3.tech/api.html#enumerations-schemes).",
                            "example": "FPS",
                            "type": "string",
                            "x-availability": {
                                "get": {
                                    "bacs": "sometimes",
                                    "fps": "sometimes",
                                    "sepa": "sometimes",
                                    "swift": "sometimes"
                                },
                                "post": {
                                    "bacs": "optional",
                                    "fps": "optional",
                                    "sepa": "optional",
                                    "swift": "optional"
                                }
                            },
                            "x-description": {
                                "bacs": "`BACS` or empty if default for organisation is `BACS`",
                                "fps": "`FPS` or empty if default for organisation is `FPS`",
                                "sepa": "`SEPAINSTANT` or empty if default for organisation is `SEPAINSTANT`"
                            }
                        },
                        "payment_type": {
                            "type": "string"
                        },
                        "processing_date": {
                            "description": "Date on which the payment is to be debited from the debtor account. Formatted according to ISO 8601 format: YYYY-MM-DD.",
                            "example": "2015-02-12",
                            "format": "date",
                            "type": "string",
                            "x-availability": {
                                "get": {
                                    "bacs": "always",
                                    "fps": "always",
                                    "swift": "always"
                                },
                                "post": {
                                    "bacs": "optional",
                                    "fps": "required",
                                    "swift": "optional"
                                }
                            },
                            "x-description": {
                                "bacs": "Field12 +/- one working day",
                                "fps": "Must be within +/- 1 day of today",
                                "sepa": "Ignored",
                                "swift": "Field 32A: Digits 1-6"
                            },
                            "x-nullable": true
                        },
                        "receivers_correspondent": {
                            "$ref": "#/definitions/ReceiversCorrespondentAccountHoldingEntity"
                        },
                        "reference": {
                            "description": "Payment reference for beneficiary use",
                            "example": "rent for oct",
                            "type": "string",
                            "x-availability": {
                                "get": {
                                    "bacs": "always",
                                    "fps": "always",
                                    "swift": "always"
                                },
                                "post": {
                                    "bacs": "required",
                                    "fps": "required",
                                    "swift": "required"
                                }
                            },
                            "x-description": {
                                "bacs": "Field10",
                                "fps": "Short reference information associated with the payment. The beneficiary bank must pass on this information to beneficiary. 18 characters max, must match ^[A-Za-z0-9 /&#92;-]{1,18}$.",
                                "swift": "Field 70: Remittance Information after /RFB/ code (31)"
                            },
                            "x-length": 18
                        },
                        "regulatory_reporting": {
                            "description": "Regulatory reporting information",
                            "example": "May be required for some foreign originated payments",
                            "type": "string",
                            "x-availability": {
                                "get": {
                                    "fps": "sometimes",
                                    "swift": "sometimes"
                                },
                                "post": {
                                    "fps": "optional",
                                    "swift": "optional"
                                }
                            },
                            "x-description": {
                                "swift": "Field 77B: Regulatory Reporting (105)"
                            },
                            "x-length": 105
                        },
                        "reimbursement": {
                            "$ref": "#/definitions/ReimbursementAccountHoldingEntity"
                        },
                        "remittance_information": {
                            "description": "Information supplied to enable the matching of an entry with the items that the transfer is intended to settle, such as commercial invoices in an accounts receivable system provided by the debtor for the beneficiary.",
                            "example": "Additional remittance information over and above reference information",
                            "type": "string",
                            "x-availability": {
                                "get": {
                                    "fps": "sometimes",
                                    "sepa": "sometimes",
                                    "swift": "sometimes"
                                },
                                "post": {
                                    "fps": "optional",
                                    "sepa": "conditional",
                                    "swift": "optional"
                                }
                            },
                            "x-description": {
                                "fps": "Longer reference information associated with the payment.",
                                "sepa": "Either the structured remittance information `structured_reference` or unstructured `remittance_information` may be present but not both.",
                                "swift": "Field 70: Remittance Information (140 less /RFB/ or /ROC/ elements if present)"
                            },
                            "x-length": 140
                        },
                        "scheme_payment_sub_type": {
                            "description": "The scheme specific payment [sub type](http://api-docs.form3.tech/api.html#enumerations-scheme-specific-payment-sub-types)",
                            "example": "TelephoneBanking",
                            "type": "string",
                            "x-availability": {
                                "get": {
                                    "fps": "sometimes"
                                },
                                "post": {
                                    "fps": "optional"
                                }
                            },
                            "x-description": {
                                "fps": "Either `TelephoneBanking`, `InternetBanking`, `BranchInstruction`, `Letter`, `Email` or `MobilePaymentsService`"
                            }
                        },
                        "scheme_payment_type": {
                            "description": "The [scheme-specific payment type](#enumerations-scheme-payment-types)",
                            "example": "ImmediatePayment",
                            "type": "string",
                            "x-availability": {
                                "get": {
                                    "bacs": "always",
                                    "fps": "always"
                                },
                                "post": {
                                    "bacs": "required",
                                    "fps": "required"
                                }
                            },
                            "x-description": {
                                "bacs": "Has to be valid payment type for Bacs Direct Credit",
                                "fps": "Either `ImmediatePayment`, `ForwardDatedPayment` or `StandingOrder`"
                            }
                        },
                        "scheme_processing_date": {
                            "description": "Date on which the payment is processed by the scheme. Only used if different from `processing_date`.",
                            "example": "2015-02-12",
                            "format": "date",
                            "type": "string",
                            "x-availability": {
                                "get": {
                                    "bacs": "sometimes"
                                },
                                "post": {
                                    "bacs": "optional"
                                }
                            },
                            "x-description": {
                                "bacs": "Field12. Usually day 2 of the Bacs cycle, only populated on incoming payments."
                            },
                            "x-nullable": true
                        },
                        "scheme_transaction_id": {
                            "description": "Unique identification, as assigned by the first instructing agent, to unambiguously identify the transaction that is passed on, unchanged, throughout the entire interbank chain.",
                            "example": "123456789012345678",
                            "type": "string",
                            "x-availability": {
                                "get": {
                                    "fps": "sometimes",
                                    "sepa": "always",
                                    "swift": "always"
                                },
                                "post": {
                                    "fps": "optional",
                                    "sepa": "required",
                                    "swift": "required"
                                }
                            },
                            "x-description": {
                                "fps": "Corresponds to the Transaction Reference Number (TRN)",
                                "sepa": "Cannot include leading, trailing or internal spaces",
                                "swift": "Field 20: Senders Reference (20)"
                            },
                            "x-length": 35
                        },
                        "senders_correspondent": {
                            "$ref": "#/definitions/SendersCorrespondentAccountHoldingEntity"
                        },
                        "structured_reference": {
                            "properties": {
                                "issuer": {
                                    "description": "Issuer of remittance reference",
                                    "example": null,
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "sepa": "sometimes"
                                        },
                                        "post": {
                                            "sepa": "conditional"
                                        }
                                    },
                                    "x-description": {
                                        "sepa": "Either the structured remittance information `structured_reference` or unstructured `remittance_information` may be present but not both. Mandatory if `SCOR` is used in the remittance data proprietary code."
                                    },
                                    "x-length": 35
                                },
                                "reference": {
                                    "description": "Unique reference to unambiguously refer to the payment originated by the creditor, this reference enables reconciliation by the creditor upon receipt of the amount of money.",
                                    "example": null,
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "sepa": "sometimes"
                                        },
                                        "post": {
                                            "sepa": "conditional"
                                        }
                                    },
                                    "x-description": {
                                        "sepa": "Either the structured remittance information `structured_reference` or unstructured `remittance_information` may be present but not both."
                                    },
                                    "x-length": 35
                                }
                            },
                            "type": "object"
                        },
                        "swift": {
                            "properties": {
                                "bank_operation_code": {
                                    "description": "SWIFT service level",
                                    "example": "CRED",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "swift": "sometimes"
                                        },
                                        "post": {
                                            "swift": "optional"
                                        }
                                    },
                                    "x-description": {
                                        "swift": "Field 23B: Bank Operation Code (`SSTD`, `SPAY`, `SPRI`, `CRED`)"
                                    },
                                    "x-length": 4
                                },
                                "header": {
                                    "properties": {
                                        "destination": {
                                            "description": "Destination SWIFT logical terminal address. Complete 12-character SWIFT destination, including BIC (x8), logical terminal code (x1) and branch code (x).",
                                            "example": "MIDLGB22XABC",
                                            "type": "string",
                                            "x-availability": {
                                                "get": {
                                                    "swift": "sometimes"
                                                },
                                                "post": {
                                                    "swift": "optional"
                                                }
                                            },
                                            "x-description": {
                                                "swift": "Basic Header Block"
                                            },
                                            "x-length": 12
                                        },
                                        "message_type": {
                                            "description": "The message type of the SWIFT payment, has to match `[A-Z]{2}[0-9]{3}`. Currently `MT103` is the only supported value",
                                            "example": "MT103",
                                            "type": "string",
                                            "x-availability": {
                                                "get": {
                                                    "swift": "sometimes"
                                                },
                                                "post": {
                                                    "swift": "optional"
                                                }
                                            },
                                            "x-description": {
                                                "swift": "Application Header Block"
                                            },
                                            "x-length": 5
                                        },
                                        "priority": {
                                            "description": "SWIFT priority. Either `Normal` or `Priority`.",
                                            "example": "Priority",
                                            "type": "string",
                                            "x-availability": {
                                                "get": {
                                                    "swift": "sometimes"
                                                },
                                                "post": {
                                                    "swift": "optional"
                                                }
                                            },
                                            "x-description": {
                                                "swift": "Application Header Block"
                                            },
                                            "x-length": 8
                                        },
                                        "recipient": {
                                            "description": "The destination SWIFT BIC for SWIFT MT messages being sent by Form3 client to SWIFT. Formatted as BIC8 or BIC11.",
                                            "example": null,
                                            "type": "string",
                                            "x-availability": {
                                                "get": {
                                                    "swift": "sometimes"
                                                },
                                                "post": {
                                                    "swift": "optional"
                                                }
                                            },
                                            "x-description": {
                                                "swift": "Application Header Block"
                                            },
                                            "x-length": 8
                                        },
                                        "source": {
                                            "description": "The source SWIFT BIC for SWIFT MT messages being received by Form3 client from SWIFT. Formatted as BIC8 or BIC11.",
                                            "example": null,
                                            "type": "string",
                                            "x-availability": {
                                                "get": {
                                                    "swift": "sometimes"
                                                },
                                                "post": {
                                                    "swift": "optional"
                                                }
                                            },
                                            "x-description": {
                                                "swift": "Application Header Block"
                                            },
                                            "x-length": 8
                                        },
                                        "user_reference": {
                                            "description": "Message User Reference (MUR) value, which can be up to 16 characters, and will be returned in the ACK",
                                            "example": null,
                                            "type": "string",
                                            "x-availability": {
                                                "get": {
                                                    "swift": "sometimes"
                                                },
                                                "post": {
                                                    "swift": "optional"
                                                }
                                            },
                                            "x-description": {
                                                "swift": "User Header Block"
                                            },
                                            "x-length": 16
                                        }
                                    },
                                    "type": "object"
                                },
                                "instruction_code": {
                                    "description": "A SWIFT instruction code",
                                    "example": "INTC",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "swift": "sometimes"
                                        },
                                        "post": {
                                            "swift": "optional"
                                        }
                                    },
                                    "x-description": {
                                        "swift": "Field 23E"
                                    },
                                    "x-length": 35
                                },
                                "sender_receiver_information": {
                                    "description": "This field specifies additional information for the Receiver or other party specified.",
                                    "example": "/INS/ABNANL2A",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "swift": "sometimes"
                                        },
                                        "post": {
                                            "swift": "optional"
                                        }
                                    },
                                    "x-description": {
                                        "swift": "Field 72 Line 1 /RETN/, Line 2 value follows Payment Return Code. Unless bilaterally agreed otherwise between the Sender and the Receiver, one of the following codes must be used in Code, placed between slashes (`/`):<br>- ACC Account with institution<br>- INS Instructing institution<br>- INT Intermediary institution<br>- REC Receiver"
                                    },
                                    "x-length": 210
                                },
                                "time_indication": {
                                    "description": "This repetitive field specifies one or several time indication(s) related to the processing of the payment instruction.",
                                    "example": "/CLSTIME/0915+0200",
                                    "type": "string",
                                    "x-availability": {
                                        "get": {
                                            "swift": "sometimes"
                                        },
                                        "post": {
                                            "swift": "optional"
                                        }
                                    },
                                    "x-description": {
                                        "swift": "Field 13C: Time Indication"
                                    }
                                }
                            },
                            "type": "object"
                        },
                        "ultimate_beneficiary": {
                            "$ref": "#/definitions/UltimateEntity"
                        },
                        "ultimate_debtor": {
                            "$ref": "#/definitions/UltimateEntity"
                        },
                        "unique_scheme_id": {
                            "description": "The scheme-specific unique transaction ID. Populated by the scheme.",
                            "example": "L5W48NDWYW7JV9MRO71020180301826040011",
                            "type": "string",
                            "x-availability": {
                                "get": {
                                    "fps": "sometimes"
                                }
                            },
                            "x-description": {
                                "fps": "Corresponds to the FPID, only present for incoming payments or after payment has been submitted to the scheme."
                            },
                            "x-length": 42
                        }
                    },
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/PaymentRelationships"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "payments",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id",
                "attributes"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PaymentAdmission": {
            "properties": {
                "attributes": {
                    "properties": {
                        "admission_datetime": {
                            "description": "Date and time the payment admission was created",
                            "example": "2017-09-26T15:26:57.494Z",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string",
                            "x-nullable": true
                        },
                        "scheme_status_code": {
                            "description": "Refers to individual scheme where applicable",
                            "example": "10001",
                            "type": "string"
                        },
                        "scheme_status_code_description": {
                            "description": "[Description](http://api-docs.form3.tech/api.html#enumerations-scheme-status-codes-for-bacs) of `scheme_status_code`",
                            "example": "Field 1 (destination sorting code) was invalid",
                            "type": "string"
                        },
                        "settlement_cycle": {
                            "description": "Cycle in which the payment will be settled",
                            "example": 1,
                            "minimum": 0,
                            "type": "integer"
                        },
                        "settlement_date": {
                            "description": "Date on which the payment will be settled",
                            "example": "2017-09-28",
                            "format": "date",
                            "type": "string"
                        },
                        "status": {
                            "$ref": "#/definitions/PaymentAdmissionStatus"
                        },
                        "status_reason": {
                            "$ref": "#/definitions/PaymentAdmissionStatusReason"
                        }
                    },
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "properties": {
                        "payment": {
                            "$ref": "#/definitions/RelationshipPayments"
                        }
                    },
                    "type": "object"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "payment_admissions",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PaymentAdmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/PaymentAdmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PaymentAdmissionStatus": {
            "description": "[Status of the admission](http://api-docs.form3.tech/api.html#enumerations-payment-admission-status)",
            "enum": [
                "confirmed",
                "failed"
            ],
            "example": "confirmed",
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "PaymentAdmissionStatusReason": {
            "description": "[Payment admission status reason](http://api-docs.form3.tech/api.html#enumerations-payment-admission-status-reasons)",
            "enum": [
                "accepted",
                "invalid_beneficiary_details",
                "bankid_not_provisioned",
                "unknown_accountnumber"
            ],
            "example": "accepted",
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "PaymentAdvice": {
            "properties": {
                "attributes": {
                    "properties": {
                        "beneficiary_party": {
                            "properties": {
                                "new_bank_details": {
                                    "properties": {
                                        "account_number": {
                                            "type": "string"
                                        },
                                        "account_number_code": {
                                            "$ref": "#/definitions/AccountNumberCode"
                                        },
                                        "account_with": {
                                            "$ref": "#/definitions/AccountHoldingEntity"
                                        },
                                        "roll_number": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            },
                            "type": "object"
                        },
                        "reason_code": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "properties": {
                        "advice_submission": {
                            "$ref": "#/definitions/RelationshipLinks"
                        },
                        "payment": {
                            "$ref": "#/definitions/RelationshipLinks"
                        }
                    },
                    "type": "object"
                },
                "type": {
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PaymentCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Payment"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PaymentCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Payment"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PaymentDetailsListResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/Payment"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PaymentDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Payment"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PaymentRelationships": {
            "properties": {
                "contact_account": {
                    "properties": {
                        "data": {
                            "description": "Array of ContactAccount resources related to the payment",
                            "items": {
                                "$ref": "#/definitions/RelationshipData"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "direct_debit": {
                    "properties": {
                        "data": {
                            "description": "Array of Direct Debit resources related to the payment",
                            "items": {
                                "$ref": "#/definitions/RelationshipData"
                            },
                            "type": "array",
                            "x-availability": {
                                "get": {
                                    "bacs": "always",
                                    "fps": "always",
                                    "sepa": "always",
                                    "swift": "always"
                                }
                            }
                        }
                    },
                    "type": "object"
                },
                "fx_deal": {
                    "properties": {
                        "data": {
                            "description": "Array of FXDeal resources related to the payment",
                            "items": {
                                "$ref": "#/definitions/RelationshipData"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "party": {
                    "properties": {
                        "data": {
                            "description": "Array of Party resources related to the payment",
                            "items": {
                                "$ref": "#/definitions/RelationshipData"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                },
                "payment_admission": {
                    "properties": {
                        "data": {
                            "description": "Array of Payment Admission resources related to the payment",
                            "items": {
                                "$ref": "#/definitions/PaymentAdmission"
                            },
                            "type": "array",
                            "x-availability": {
                                "get": {
                                    "bacs": "always",
                                    "fps": "always",
                                    "sepa": "always",
                                    "swift": "always"
                                }
                            }
                        }
                    },
                    "type": "object"
                },
                "payment_advice": {
                    "properties": {
                        "data": {
                            "description": "Array of Payment Advice resources related to the payment",
                            "items": {
                                "$ref": "#/definitions/PaymentAdvice"
                            },
                            "type": "array",
                            "x-availability": {
                                "get": {
                                    "bacs": "always",
                                    "fps": "always",
                                    "sepa": "always",
                                    "swift": "always"
                                }
                            }
                        }
                    },
                    "type": "object"
                },
                "payment_recall": {
                    "properties": {
                        "data": {
                            "description": "Array of Payment Recall resources related to the payment",
                            "items": {
                                "$ref": "#/definitions/Recall"
                            },
                            "type": "array",
                            "x-availability": {
                                "get": {
                                    "bacs": "always",
                                    "fps": "always",
                                    "sepa": "always",
                                    "swift": "always"
                                }
                            }
                        }
                    },
                    "type": "object"
                },
                "payment_return": {
                    "properties": {
                        "data": {
                            "description": "Array of Payment Return resources related to the payment",
                            "items": {
                                "$ref": "#/definitions/ReturnPayment"
                            },
                            "type": "array",
                            "x-availability": {
                                "get": {
                                    "bacs": "always",
                                    "fps": "always",
                                    "sepa": "always",
                                    "swift": "always"
                                }
                            }
                        }
                    },
                    "type": "object"
                },
                "payment_reversal": {
                    "properties": {
                        "data": {
                            "description": "Array of Payment Reversal resources related to the payment",
                            "items": {
                                "$ref": "#/definitions/ReversalPayment"
                            },
                            "type": "array",
                            "x-availability": {
                                "get": {
                                    "bacs": "always",
                                    "fps": "always",
                                    "sepa": "always",
                                    "swift": "always"
                                }
                            }
                        }
                    },
                    "type": "object"
                },
                "payment_submission": {
                    "properties": {
                        "data": {
                            "description": "Array of Payment Submission resources related to the payment",
                            "items": {
                                "$ref": "#/definitions/PaymentSubmission"
                            },
                            "type": "array",
                            "x-availability": {
                                "get": {
                                    "bacs": "always",
                                    "fps": "always",
                                    "sepa": "always",
                                    "swift": "always"
                                }
                            }
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PaymentScheme": {
            "enum": [
                "FPS",
                "SEPAINSTANT"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "PaymentSubmission": {
            "properties": {
                "attributes": {
                    "properties": {
                        "limit_breach_end_datetime": {
                            "description": "Time a payment was released from being held due to a limit breach",
                            "example": "2018-03-12T14:11:55.055Z",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                        },
                        "limit_breach_start_datetime": {
                            "description": "Start time a payment was held due to a limit breach",
                            "example": "2018-03-12T14:11:50.055Z",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                        },
                        "redirected_account_number": {
                            "description": "Details of the account to which funds are redirected (if applicable)",
                            "example": "12345678",
                            "type": "string"
                        },
                        "redirected_bank_id": {
                            "description": "Details of the bank to which funds are redirected (if applicable)",
                            "example": "400300",
                            "type": "string"
                        },
                        "scheme_status_code": {
                            "description": "Scheme-specific status (if submission has been submitted to a scheme)",
                            "example": "0000",
                            "type": "string"
                        },
                        "scheme_status_code_description": {
                            "description": "[Description](http://api-docs.form3.tech/api.html#enumerations-scheme-status-codes-for-bacs) of `scheme_status_code`",
                            "example": "Field 1 (destination sorting code) was invalid",
                            "type": "string"
                        },
                        "settlement_cycle": {
                            "description": "Cycle in which the payment will be settled",
                            "example": 1,
                            "minimum": 0,
                            "type": "integer"
                        },
                        "settlement_date": {
                            "description": "Date that the payment will be settled",
                            "example": "2017-07-23",
                            "format": "date",
                            "type": "string",
                            "x-nullable": true
                        },
                        "status": {
                            "$ref": "#/definitions/PaymentSubmissionStatus"
                        },
                        "status_reason": {
                            "description": "Description of the submission status",
                            "example": "Accepted without qualification",
                            "type": "string"
                        },
                        "submission_datetime": {
                            "description": "Date of the submission",
                            "example": "2018-03-12T14:11:48.055Z",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                        },
                        "transaction_start_datetime": {
                            "description": "Time the request was received by Form3. Used to compute the total transaction time of a payment.",
                            "example": "2018-03-12T14:11:49.055Z",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/PaymentSubmissionRelationships"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "payment_submissions",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PaymentSubmissionCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/NewPaymentSubmission"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PaymentSubmissionCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/PaymentSubmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PaymentSubmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/PaymentSubmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PaymentSubmissionRelationships": {
            "properties": {
                "payment": {
                    "$ref": "#/definitions/RelationshipPayments"
                },
                "validations": {
                    "$ref": "#/definitions/RelationshipLinks"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PaymentSubmissionStatus": {
            "description": "[Status of the submission](http://api-docs.form3.tech/api.html#enumerations-payment-submission-status)",
            "enum": [
                "accepted",
                "limit_check_pending",
                "limit_check_failed",
                "limit_check_passed",
                "released_to_gateway",
                "queued_for_delivery",
                "delivery_confirmed",
                "delivery_failed",
                "submitted",
                "validation_pending"
            ],
            "example": "delivery_confirmed",
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "Position": {
            "properties": {
                "attributes": {
                    "properties": {
                        "limit": {
                            "description": "Current limit",
                            "example": "1000",
                            "pattern": "^[0-9.]{0,20}$",
                            "type": "string"
                        },
                        "position": {
                            "description": "Current position",
                            "example": "10",
                            "pattern": "^[0-9.]{0,20}$",
                            "type": "string"
                        },
                        "scheme": {
                            "description": "Scheme associated with the limit",
                            "example": "FPS",
                            "pattern": "^[A-Za-z_\\-]*$",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "links": {
                    "$ref": "#/definitions/Self"
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "positions",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id",
                "attributes"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PositionDetailsListResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/Position"
                    },
                    "type": "array"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "PrivateIdentification": {
            "properties": {
                "identification": {
                    "description": "Private Identification of an debtor/beneficiary or ultimate debtor/beneficiary",
                    "example": "AB12345",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "sepa": "sometimes"
                        },
                        "post": {
                            "sepa": "optional"
                        }
                    },
                    "x-length": 35
                },
                "identification_issuer": {
                    "description": "Issuer of the `identification`",
                    "example": "HM Passport Office",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "sepa": "sometimes"
                        },
                        "post": {
                            "sepa": "optional"
                        }
                    },
                    "x-length": 35
                },
                "identification_scheme": {
                    "description": "Scheme of the `identification`",
                    "example": "BANK",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "sepa": "sometimes"
                        },
                        "post": {
                            "sepa": "optional"
                        }
                    },
                    "x-length": 35
                },
                "identification_scheme_code": {
                    "description": "The code that specifies the type of `identification`",
                    "example": "CCPT",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "sepa": "sometimes"
                        },
                        "post": {
                            "sepa": "conditional"
                        }
                    },
                    "x-description": {
                        "sepa": "If `identification` is specified, must be either `ARNU`, `CCPT`, `CUST`, `DRLC`, `EMPL`, `NIDN`, `SOSE`, `TXID` or `Other`"
                    }
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReasonCodes": {
            "description": "Valid reason codes for confirmation of payee",
            "enum": [
                "ANNM",
                "AC01",
                "MBAM",
                "OPTO",
                "ACNS",
                "IVCR",
                "BANM",
                "PANM",
                "BAMM",
                "PAMM",
                "CASS",
                "SCNS"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "Recall": {
            "properties": {
                "attributes": {
                    "properties": {
                        "reason": {
                            "description": "Further explanation of the reason given in reason_code. Only evaluated for certain reason codes.",
                            "example": "Payment was a duplicate",
                            "type": "string",
                            "x-omitempty": true
                        },
                        "reason_code": {
                            "description": "The reason for the recall. Has to be a valid [recall reason code](http://api-docs.form3.tech/api.html#enumerations-recall-reason-codes).",
                            "example": "DUPL",
                            "type": "string"
                        },
                        "status": {
                            "$ref": "#/definitions/RecallStatus"
                        }
                    },
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/RecallRelationships"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "recalls",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallAdmission": {
            "properties": {
                "attributes": {
                    "properties": {
                        "admission_datetime": {
                            "description": "Date and time the recall admission was created",
                            "example": "2018-09-26T15:26:57.494Z",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string",
                            "x-nullable": true
                        },
                        "source_gateway": {
                            "type": "string"
                        },
                        "status": {
                            "$ref": "#/definitions/RecallAdmissionStatus"
                        },
                        "status_reason": {
                            "description": "Human-readable reason for failure if admission status is failed",
                            "example": "payment does not exist",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/RecallAdmissionRelationships"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "recall_admissions",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallAdmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/RecallAdmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallAdmissionRelationships": {
            "properties": {
                "payment": {
                    "$ref": "#/definitions/RelationshipPayments"
                },
                "recall": {
                    "$ref": "#/definitions/RelationshipRecalls"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallAdmissionStatus": {
            "description": "[Status](http://draft-api-docs.form3.tech/api.html#enumerations-payment-admission-status) of the recall admission",
            "enum": [
                "confirmed",
                "failed"
            ],
            "example": "confirmed",
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "RecallCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/NewRecall"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Recall"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallDecision": {
            "properties": {
                "attributes": {
                    "properties": {
                        "answer": {
                            "$ref": "#/definitions/RecallDecisionAnswer"
                        },
                        "charges_amount": {
                            "$ref": "#/definitions/CurrencyAndAmount",
                            "x-omitempty": true
                        },
                        "reason": {
                            "description": "Optional free text reason in addition to `reason_code`",
                            "example": "Closed account number",
                            "type": "string",
                            "x-omitempty": true
                        },
                        "reason_code": {
                            "description": "Reason for a rejected decision. Required when answer is rejected, ignored otherwise. Has to be a valid [rejected recall decision reason code](http://api-docs.form3.tech/api.html#enumerations-rejected-recall-decision-reason-codes)",
                            "example": "AC04",
                            "type": "string",
                            "x-omitempty": true
                        },
                        "recall_amount": {
                            "$ref": "#/definitions/CurrencyAndAmount",
                            "x-omitempty": true
                        }
                    },
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "properties": {
                        "decision_admission": {
                            "$ref": "#/definitions/RelationshipLinks",
                            "description": "ID of the recall decision admission resource related to the recall decision"
                        },
                        "decision_submission": {
                            "$ref": "#/definitions/RelationshipLinks",
                            "description": "ID of the recall decision submission resource related to the recall decision"
                        },
                        "payment": {
                            "$ref": "#/definitions/RelationshipLinks",
                            "description": "ID of the payment resource related to the recall decision"
                        },
                        "recall": {
                            "$ref": "#/definitions/RelationshipLinks",
                            "description": "ID of the recall resource related to the recall decision"
                        }
                    },
                    "type": "object"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "recall_decisions",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallDecisionAdmission": {
            "properties": {
                "attributes": {
                    "properties": {
                        "admission_datetime": {
                            "description": "Date and time the recall decision admission was created",
                            "example": "2018-09-26T15:26:57.494Z",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string",
                            "x-nullable": true
                        },
                        "source_gateway": {
                            "type": "string"
                        },
                        "status": {
                            "$ref": "#/definitions/RecallDecisionAdmissionStatus"
                        },
                        "status_reason": {
                            "description": "Human-readable reason for failure if status is failed.",
                            "example": "recall does not exist",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/RecallDecisionAdmissionRelationships"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "recall_decision_admissions",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallDecisionAdmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/RecallDecisionAdmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallDecisionAdmissionRelationships": {
            "properties": {
                "payment": {
                    "$ref": "#/definitions/RelationshipPayments"
                },
                "recall": {
                    "$ref": "#/definitions/RelationshipRecalls"
                },
                "recall_decision": {
                    "$ref": "#/definitions/RelationshipRecallDecisions"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallDecisionAdmissionStatus": {
            "description": "[Status](http://draft-api-docs.form3.tech/api.html#enumerations-payment-admission-status) of the admission",
            "enum": [
                "confirmed",
                "failed"
            ],
            "example": "confirmed",
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "RecallDecisionAnswer": {
            "description": "Answer to the recall request. Can either be `accepted` or `rejected`.",
            "enum": [
                "accepted",
                "rejected"
            ],
            "example": "accepted",
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "RecallDecisionCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/RecallDecision"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallDecisionCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/RecallDecision"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallDecisionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/RecallDecision"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallDecisionSubmission": {
            "properties": {
                "attributes": {
                    "properties": {
                        "status": {
                            "$ref": "#/definitions/RecallDecisionSubmissionStatus"
                        },
                        "status_reason": {
                            "description": "Reason for submission failure if status is `delivery_failed`",
                            "example": "recall does not exist",
                            "type": "string"
                        },
                        "submission_datetime": {
                            "description": "Date and time of the submission",
                            "example": "2018-03-12T14:11:48.055Z",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string",
                            "x-nullable": true
                        }
                    },
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/RecallDecisionSubmissionRelationships"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "recall_decision_submissions",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallDecisionSubmissionCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/NewRecallDecisionSubmission"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallDecisionSubmissionCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/RecallDecisionSubmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallDecisionSubmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/RecallDecisionSubmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallDecisionSubmissionRelationships": {
            "properties": {
                "payment": {
                    "$ref": "#/definitions/RelationshipPayments"
                },
                "recall": {
                    "$ref": "#/definitions/RelationshipRecalls"
                },
                "recall_decision": {
                    "$ref": "#/definitions/RelationshipRecallDecisions"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallDecisionSubmissionStatus": {
            "description": "[Status](http://draft-api-docs.form3.tech/api.html#enumerations-payment-status-codes-payment-submission-status) of the submission",
            "enum": [
                "accepted",
                "limit_check_pending",
                "limit_check_failed",
                "limit_check_passed",
                "released_to_gateway",
                "queued_for_delivery",
                "delivery_confirmed",
                "delivery_failed",
                "validation_pending",
                "validation_passed"
            ],
            "example": "accepted",
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "RecallDecisionSubmissionUpdate": {
            "properties": {
                "attributes": {
                    "properties": {
                        "status": {
                            "$ref": "#/definitions/RecallDecisionSubmissionStatus"
                        },
                        "status_reason": {
                            "description": "Reason for submission failure if status is `delivery_failed`",
                            "example": "recall does not exist",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "recall_decision_submissions",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Recall"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallRelationships": {
            "properties": {
                "payment": {
                    "$ref": "#/definitions/RelationshipLinks",
                    "description": "ID of the payment resource related to the recall"
                },
                "recall_admission": {
                    "$ref": "#/definitions/RelationshipLinks",
                    "description": "ID of the recall admission resource related to the recall"
                },
                "recall_decisions": {
                    "$ref": "#/definitions/RelationshipLinks",
                    "description": "ID of the recall decision resource related to the recall"
                },
                "recall_reversal": {
                    "$ref": "#/definitions/RelationshipLinks",
                    "description": "ID of the recall reversal resource related to the recall"
                },
                "recall_submission": {
                    "$ref": "#/definitions/RelationshipLinks",
                    "description": "ID of the recall submission resource related to the recall"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallReversal": {
            "properties": {
                "attributes": {
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "properties": {
                        "payment": {
                            "$ref": "#/definitions/RelationshipLinks",
                            "description": "ID of the payment resource related to the recall reversal",
                            "x-availability": {
                                "get": {
                                    "sepa": "always"
                                }
                            }
                        },
                        "recall": {
                            "$ref": "#/definitions/RelationshipLinks",
                            "description": "ID of the recall resource related to the recall reversal",
                            "x-availability": {
                                "get": {
                                    "sepa": "always"
                                }
                            }
                        },
                        "reversal_admission": {
                            "$ref": "#/definitions/RelationshipLinks",
                            "description": "ID of the reversal admission resource related to the recall reversal",
                            "x-availability": {
                                "get": {
                                    "sepa": "always"
                                }
                            }
                        }
                    },
                    "type": "object"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "recall_reversals",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallReversalAdmission": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/RecallReversalAdmissionAttributes"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "properties": {
                        "payment": {
                            "$ref": "#/definitions/RelationshipPayments",
                            "x-availability": {
                                "get": {
                                    "sepa": "always"
                                }
                            }
                        },
                        "recall": {
                            "$ref": "#/definitions/RelationshipRecalls",
                            "x-availability": {
                                "get": {
                                    "sepa": "always"
                                }
                            }
                        },
                        "recall_reversal": {
                            "$ref": "#/definitions/RelationshipRecallReversals",
                            "x-availability": {
                                "get": {
                                    "sepa": "always"
                                }
                            }
                        }
                    },
                    "type": "object"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "recall_reversal_admissions",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallReversalAdmissionAttributes": {
            "properties": {
                "scheme_status_code": {
                    "description": "Scheme-specific status code",
                    "example": "0",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "sepa": "sometimes"
                        }
                    }
                },
                "source_gateway": {
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallReversalAdmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/RecallReversalAdmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallReversalDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/RecallReversal"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallStatus": {
            "description": "The status of the recall, can either be `pending`, `confirmed`, or `failed`.",
            "enum": [
                "pending",
                "confirmed",
                "failed"
            ],
            "example": "confirmed",
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "RecallSubmission": {
            "properties": {
                "attributes": {
                    "properties": {
                        "status": {
                            "$ref": "#/definitions/RecallSubmissionStatus"
                        },
                        "status_reason": {
                            "description": "Reason for submission failure if submission status is `delivery_failed`",
                            "example": "Gateway failure",
                            "type": "string"
                        },
                        "submission_datetime": {
                            "description": "Date and time of the submission",
                            "example": "2018-03-12T14:11:48.055Z",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string",
                            "x-nullable": true
                        }
                    },
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/RecallSubmissionRelationships"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "recall_submissions",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallSubmissionCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/NewRecallSubmission"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallSubmissionCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/RecallSubmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallSubmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/RecallSubmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallSubmissionRelationships": {
            "properties": {
                "payment": {
                    "$ref": "#/definitions/RelationshipPayments"
                },
                "recall": {
                    "$ref": "#/definitions/RelationshipRecalls"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RecallSubmissionStatus": {
            "description": "[Status](http://draft-api-docs.form3.tech/api.html#enumerations-payment-status-codes-payment-submission-status) of the submission",
            "enum": [
                "accepted",
                "validation_pending",
                "validation_passed",
                "released_to_gateway",
                "delivery_confirmed",
                "delivery_failed",
                "queued_for_delivery",
                "submitted"
            ],
            "example": "accepted",
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "RecallSubmissionUpdate": {
            "properties": {
                "attributes": {
                    "properties": {
                        "status": {
                            "$ref": "#/definitions/RecallSubmissionStatus"
                        },
                        "status_reason": {
                            "description": "Reason for submission failure if submission status is `delivery_failed`",
                            "example": "Gateway failure",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "recall_submissions",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReceiversCorrespondentAccountHoldingEntity": {
            "properties": {
                "bank_address": {
                    "description": "Receiver's correspondent's address",
                    "example": [
                        "Liverpool Customer Service Centre",
                        "Stevenson Way",
                        "Wavertree",
                        "L13 1NW"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "x-availability": {
                        "get": {
                            "swift": "sometimes"
                        },
                        "post": {
                            "swift": "optional"
                        }
                    },
                    "x-description": {
                        "swift": "Field 54B"
                    },
                    "x-length": 140,
                    "x-omitempty": true
                },
                "bank_id": {
                    "description": "SWIFT BIC for receiver's correspondent",
                    "example": "333333",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "swift": "sometimes"
                        },
                        "post": {
                            "swift": "optional"
                        }
                    },
                    "x-description": {
                        "swift": "Field 54A, must be BIC8 or BIC11"
                    },
                    "x-length": 11
                },
                "bank_id_code": {
                    "$ref": "#/definitions/BankIdCode"
                },
                "bank_name": {
                    "description": "Receiver's correspondent's name",
                    "example": "XYZ BANK PLC",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "swift": "sometimes"
                        },
                        "post": {
                            "swift": "optional"
                        }
                    },
                    "x-description": {
                        "swift": "Field 54D"
                    },
                    "x-length": 35
                },
                "bank_party_id": {
                    "description": "Receiver's correspondent party identifier",
                    "example": "//AT12345",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "swift": "sometimes"
                        },
                        "post": {
                            "swift": "optional"
                        }
                    },
                    "x-description": {
                        "swift": "Field 54A/54B/54D"
                    },
                    "x-length": 37
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReimbursementAccountHoldingEntity": {
            "properties": {
                "bank_address": {
                    "description": "Third party reimbursement institution address",
                    "example": [
                        "Liverpool Customer Service Centre",
                        "Stevenson Way",
                        "Wavertree",
                        "L13 1NW"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "x-availability": {
                        "get": {
                            "swift": "sometimes"
                        },
                        "post": {
                            "swift": "optional"
                        }
                    },
                    "x-description": {
                        "swift": "Field 55B"
                    },
                    "x-omitempty": true
                },
                "bank_id": {
                    "description": "Identification of third party reimbursement institution",
                    "example": "333333",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "swift": "sometimes"
                        },
                        "post": {
                            "swift": "optional"
                        }
                    },
                    "x-description": {
                        "swift": "Field 55A, must be BIC8 or BIC11"
                    },
                    "x-length": 11
                },
                "bank_id_code": {
                    "$ref": "#/definitions/BankIdCode"
                },
                "bank_name": {
                    "description": "Third party reimbursement institution name",
                    "example": "NATIONAL WESTMINSTER BANK PLC",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "swift": "sometimes"
                        },
                        "post": {
                            "swift": "optional"
                        }
                    },
                    "x-description": {
                        "swift": "Field 55D"
                    },
                    "x-length": 35
                },
                "bank_party_id": {
                    "description": "Third party reimbursement institution identifier",
                    "example": "//AT12345",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "swift": "sometimes"
                        },
                        "post": {
                            "swift": "optional"
                        }
                    },
                    "x-description": {
                        "swift": "Field 55A/55B/55D"
                    },
                    "x-length": 37
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RelationshipAccount": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/Account"
                    },
                    "type": "array"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RelationshipAdvices": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/PaymentAdvice"
                    },
                    "type": "array"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RelationshipData": {
            "properties": {
                "id": {
                    "description": "ID of the referenced resource",
                    "format": "uuid",
                    "type": "string"
                },
                "type": {
                    "description": "Name of the referenced resource type",
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RelationshipLinks": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/RelationshipData"
                    },
                    "type": "array"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RelationshipPayments": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/Payment"
                    },
                    "type": "array"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RelationshipRecallDecisions": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/RecallDecision"
                    },
                    "type": "array"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RelationshipRecallReversals": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/RecallReversal"
                    },
                    "type": "array"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RelationshipRecalls": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/Recall"
                    },
                    "type": "array"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RelationshipReturnReversals": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/ReturnReversal"
                    },
                    "type": "array"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RelationshipReturns": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/ReturnPayment"
                    },
                    "type": "array"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RelationshipReversals": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/ReversalPayment"
                    },
                    "type": "array"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "Relationships": {
            "properties": {
                "contact": {
                    "$ref": "#/definitions/RelationshipsContactProperties",
                    "type": "object",
                    "x-nullable": true
                },
                "contact_account": {
                    "$ref": "#/definitions/RelationshipsContactAccountProperties",
                    "type": "object",
                    "x-nullable": true
                },
                "party": {
                    "$ref": "#/definitions/RelationshipsPartyProperties",
                    "type": "object",
                    "x-nullable": true
                },
                "party_product": {
                    "$ref": "#/definitions/RelationshipsPartyProductProperties",
                    "type": "object",
                    "x-nullable": true
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RelationshipsContactAccountProperties": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/ContactAccount"
                    },
                    "type": "array"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RelationshipsContactProperties": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/Contact"
                    },
                    "type": "array"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RelationshipsPartyProductProperties": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/PartyProduct"
                    },
                    "type": "array"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RelationshipsPartyProductUpdatedEventProperties": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/PartyProductUpdatedEvent"
                    },
                    "type": "array"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RelationshipsPartyProperties": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/Party"
                    },
                    "type": "array"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "Report": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/ReportAttributes"
                },
                "created_on": {
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "x-nullable": false
                },
                "modified_on": {
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string",
                    "x-nullable": false
                },
                "relationships": {
                    "$ref": "#/definitions/ReportRelationships"
                },
                "type": {
                    "enum": [
                        "reports"
                    ],
                    "type": "string",
                    "x-nullable": false
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id",
                "attributes"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReportAdmission": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/ReportAdmissionAttributes"
                },
                "created_on": {
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                },
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "x-nullable": false
                },
                "modified_on": {
                    "format": "date-time",
                    "readOnly": true,
                    "type": "string"
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string",
                    "x-nullable": false
                },
                "relationships": {
                    "$ref": "#/definitions/ReportAdmissionRelationships"
                },
                "type": {
                    "enum": [
                        "report_admissions"
                    ],
                    "type": "string",
                    "x-nullable": false
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReportAdmissionAttributes": {
            "properties": {
                "admission_datetime": {
                    "format": "date-time",
                    "type": "string"
                },
                "scheme_status_code": {
                    "type": "string"
                },
                "scheme_status_code_description": {
                    "type": "string"
                },
                "source_gateway": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/ReportAdmissionStatus"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReportAdmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ReportAdmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReportAdmissionRelationships": {
            "properties": {
                "report": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/Report"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReportAdmissionStatus": {
            "enum": [
                "delivery_confirmed",
                "failed"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "ReportAttributes": {
            "properties": {
                "formats": {
                    "items": {
                        "type": "string"
                    },
                    "readOnly": true,
                    "type": "array"
                },
                "generation_time": {
                    "format": "date-time",
                    "type": "string"
                },
                "processing_date": {
                    "format": "date",
                    "type": "string",
                    "x-nullable": true
                },
                "report_source": {
                    "type": "string"
                },
                "report_type": {
                    "description": "Type of report.",
                    "type": "string"
                },
                "report_type_description": {
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReportDetailsListResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/Report"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReportDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Report"
                },
                "links": {
                    "$ref": "#/definitions/ReportLinks"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReportLink": {
            "properties": {
                "href": {
                    "format": "uri",
                    "type": "string"
                },
                "meta": {
                    "properties": {
                        "content-type": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                }
            },
            "required": [
                "href"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ],
            "x-nullable": false
        },
        "ReportLinks": {
            "additionalProperties": {
                "$ref": "#/definitions/ReportLink"
            },
            "properties": {
                "self": {
                    "$ref": "#/definitions/ReportLink"
                }
            },
            "required": [
                "self"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReportRelationships": {
            "properties": {
                "report_admission": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/ReportAdmission"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ResourceType": {
            "enum": [
                "payments",
                "recall_decision_admissions",
                "positions",
                "party_product_events",
                "party_products",
                "fx_deals",
                "return_admissions",
                "contact_accounts",
                "returns",
                "direct_account",
                "direct_debit",
                "return_reversals",
                "reversal_submission_validations",
                "contacts",
                "recall_decision_submission_validations",
                "accounts",
                "payment_admissions",
                "recall_submission_validations",
                "product_associations",
                "return_reversal_admissions",
                "account_events",
                "recall_admissions",
                "recall_submissions",
                "reversal_submissions",
                "reversals",
                "payment_submissions",
                "payment_submission_validations",
                "payment_automatic_returns",
                "scheme_messages",
                "limits",
                "return_submissions",
                "bank_ids",
                "recalls",
                "payment_advice_submissions",
                "return_submission_validations",
                "reversal_admissions",
                "recall_reversals",
                "account_configurations",
                "payment_defaults",
                "recall_reversal_admissions",
                "payment_advices",
                "parties",
                "payment_batches",
                "party_accounts",
                "scheme_message_admissions",
                "recall_decisions",
                "bics",
                "payment_advice_submission_validations",
                "account_routings",
                "recall_decision_submissions"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "ReturnAdmission": {
            "properties": {
                "attributes": {
                    "properties": {
                        "admission_datetime": {
                            "description": "Date and time the payment admission was created",
                            "example": "2017-09-28T14:21:46.123+01:00",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                        },
                        "scheme_status_code": {
                            "description": "Refer to individual scheme where applicable",
                            "example": "1001",
                            "type": "string"
                        },
                        "scheme_status_code_description": {
                            "description": "[Description](http://api-docs.form3.tech/api.html#enumerations-scheme-status-codes-for-bacs) of `scheme_status_code`",
                            "example": "Field 1 (destination sorting code) was invalid",
                            "type": "string"
                        },
                        "settlement_cycle": {
                            "description": "Cycle in which the payment will be settled",
                            "example": 1,
                            "minimum": 0,
                            "type": "integer"
                        },
                        "settlement_date": {
                            "description": "Date on which the payment will be settled",
                            "example": "2017-01-14",
                            "format": "date",
                            "type": "string",
                            "x-nullable": true
                        },
                        "status": {
                            "$ref": "#/definitions/ReturnAdmissionStatus"
                        },
                        "status_reason": {
                            "description": "Further explanation of the status. [See here](http://api-docs.form3.tech/api.html#enumerations-payment-admission-status-reasons) for possible values.",
                            "example": "Account data invalid",
                            "type": "string"
                        },
                        "unique_scheme_id": {
                            "description": "Scheme-specific unique ID (42 character string)",
                            "example": "",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/ReturnAdmissionRelationships"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "return_admissions",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReturnAdmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ReturnAdmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReturnAdmissionRelationships": {
            "properties": {
                "payment": {
                    "$ref": "#/definitions/RelationshipPayments"
                },
                "payment_return": {
                    "$ref": "#/definitions/RelationshipReturns"
                },
                "validations": {
                    "$ref": "#/definitions/RelationshipLinks"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReturnAdmissionStatus": {
            "description": "[Status](http://draft-api-docs.form3.tech/api.html#enumerations-payment-admission-status) of the return admission",
            "enum": [
                "confirmed",
                "failed"
            ],
            "example": "confirmed",
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "ReturnCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ReturnPayment"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReturnCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ReturnPayment"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReturnDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ReturnPayment"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReturnPayment": {
            "properties": {
                "attributes": {
                    "properties": {
                        "amount": {
                            "description": "The amount to return which should correspond to the amount of the original payment",
                            "example": "200.00",
                            "pattern": "^[0-9.]{0,20}$",
                            "type": "string",
                            "x-description-bacs": "This is a Bacs description",
                            "x-description-fps": "This is an FPS description",
                            "x-description-sepa": "This is a SEPA Instant description",
                            "x-description-swift": "This is a SWIFT description",
                            "x-length": 20
                        },
                        "currency": {
                            "description": "ISO currency code for transaction amount",
                            "example": "GBP",
                            "type": "string"
                        },
                        "limit_breach_end_datetime": {
                            "description": "Time a payment was released from being held due to a limit breach",
                            "example": "2018-03-12T14:11:55.055Z",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string",
                            "x-nullable": true
                        },
                        "limit_breach_start_datetime": {
                            "description": "Start time a payment was held due to a limit breach",
                            "example": "2018-03-12T14:11:50.055Z",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string",
                            "x-nullable": true
                        },
                        "reason": {
                            "type": "string",
                            "x-nullable": true
                        },
                        "return_code": {
                            "description": "The return [reason code](http://draft-api-docs.form3.tech/api.html#enumerations-payment-return-codes)",
                            "example": "00000002",
                            "type": "string"
                        },
                        "scheme_transaction_id": {
                            "description": "A unique reference to the return payment instruction. If not supplied, the value is generated by Form3.",
                            "example": "e368ab2d",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "properties": {
                        "payment": {
                            "$ref": "#/definitions/RelationshipLinks",
                            "description": "ID of the payment resource related to the return"
                        },
                        "return_admission": {
                            "$ref": "#/definitions/RelationshipLinks",
                            "description": "ID of the return admission resource related to the return"
                        },
                        "return_submission": {
                            "$ref": "#/definitions/RelationshipLinks",
                            "description": "ID of the return submission resource related to the return"
                        }
                    },
                    "type": "object"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "returns",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReturnReversal": {
            "properties": {
                "attributes": {
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "properties": {
                        "payment": {
                            "$ref": "#/definitions/RelationshipLinks",
                            "description": "ID of the payment resource related to the return reversal"
                        },
                        "payment_return": {
                            "$ref": "#/definitions/RelationshipLinks",
                            "description": "ID of the payment return resource related to the return reversal"
                        },
                        "return_reversal_admission": {
                            "$ref": "#/definitions/RelationshipLinks",
                            "description": "ID of the return reversal admission resource related to the return reversal"
                        }
                    },
                    "type": "object"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "return_reversals",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReturnReversalAdmission": {
            "properties": {
                "attributes": {
                    "properties": {
                        "scheme_status_code": {
                            "description": "Scheme-specific status code. Refer to individual scheme where applicable",
                            "example": "0",
                            "type": "string"
                        },
                        "scheme_status_code_description": {
                            "description": "[Description](http://draft-api-docs.form3.tech/api.html#enumerations-scheme-status-codes-for-bacs) of scheme_status_code",
                            "example": "Field 1 (destination sorting code) was invalid",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/ReturnReversalAdmissionRelationships"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "return_reversal_admissions",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReturnReversalAdmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ReturnReversalAdmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReturnReversalAdmissionRelationships": {
            "properties": {
                "payment": {
                    "$ref": "#/definitions/RelationshipPayments"
                },
                "payment_return": {
                    "$ref": "#/definitions/RelationshipReturns"
                },
                "payment_return_reversal": {
                    "$ref": "#/definitions/RelationshipReturnReversals"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReturnReversalCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ReturnReversal"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReturnReversalCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ReturnReversal"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReturnReversalDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ReturnReversal"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReturnSubmission": {
            "properties": {
                "attributes": {
                    "properties": {
                        "limit_breach_end_datetime": {
                            "description": "Time a payment was released from being held due to a limit breach",
                            "example": "2018-03-12T14:11:55.055Z",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string",
                            "x-nullable": true
                        },
                        "limit_breach_start_datetime": {
                            "description": "Start time a payment was held due to a limit breach",
                            "example": "2018-03-12T14:11:50.055Z",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string",
                            "x-nullable": true
                        },
                        "redirected_account_number": {
                            "description": "Details of the account to which funds are redirected (if applicable)",
                            "example": "12345678",
                            "type": "string"
                        },
                        "redirected_bank_id": {
                            "description": "Details of the bank to which funds are redirected (if applicable)",
                            "example": "400300",
                            "type": "string"
                        },
                        "scheme_status_code": {
                            "description": "Scheme-specific status (if submission has been submitted to a scheme)",
                            "example": "0000",
                            "type": "string"
                        },
                        "scheme_status_code_description": {
                            "description": "[Description](http://api-docs.form3.tech/api.html#enumerations-scheme-status-codes-for-bacs) of `scheme_status_code`",
                            "example": "Field 1 (destination sorting code) was invalid",
                            "type": "string"
                        },
                        "settlement_cycle": {
                            "description": "Cycle in which the payment will be settled",
                            "example": 1,
                            "minimum": 0,
                            "type": "integer"
                        },
                        "settlement_date": {
                            "description": "Date that the payment will be settled",
                            "example": "2017-07-23",
                            "format": "date",
                            "type": "string",
                            "x-nullable": true
                        },
                        "status": {
                            "$ref": "#/definitions/ReturnSubmissionStatus"
                        },
                        "status_reason": {
                            "description": "Description of the submission status",
                            "example": "Accepted without qualification",
                            "type": "string"
                        },
                        "submission_datetime": {
                            "description": "Time of the submission",
                            "example": "2018-03-12T14:11:48.055Z",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string",
                            "x-nullable": true
                        },
                        "transaction_start_datetime": {
                            "description": "Time the request was received by Form3. Used to compute the total transaction time of a payment.",
                            "example": "2018-03-12T14:11:49.055Z",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string",
                            "x-nullable": true
                        }
                    },
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/ReturnSubmissionRelationships"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "return_submissions",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReturnSubmissionCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/NewReturnSubmission"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReturnSubmissionCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ReturnSubmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReturnSubmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ReturnSubmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReturnSubmissionRelationships": {
            "properties": {
                "payment": {
                    "$ref": "#/definitions/RelationshipPayments"
                },
                "payment_return": {
                    "$ref": "#/definitions/RelationshipReturns"
                },
                "validations": {
                    "$ref": "#/definitions/RelationshipLinks"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReturnSubmissionStatus": {
            "description": "[Status](http://draft-api-docs.form3.tech/api.html#enumerations-payment-submission-status) of the submission",
            "enum": [
                "accepted",
                "limit_check_pending",
                "limit_check_failed",
                "limit_check_passed",
                "released_to_gateway",
                "delivery_confirmed",
                "delivery_failed",
                "submitted",
                "validation_pending",
                "queued_for_delivery"
            ],
            "example": "accepted",
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "ReturnSubmissionUpdate": {
            "properties": {
                "attributes": {
                    "properties": {
                        "redirected_account_number": {
                            "description": "Details of the account to which funds are redirected (if applicable)",
                            "example": "12345678",
                            "type": "string"
                        },
                        "redirected_bank_id": {
                            "description": "Details of the bank to which funds are redirected (if applicable)",
                            "example": "400300",
                            "type": "string"
                        },
                        "scheme_status_code": {
                            "description": "Scheme-specific status (if submission has been submitted to a scheme)",
                            "example": "0000",
                            "type": "string"
                        },
                        "scheme_status_code_description": {
                            "description": "[Description](http://api-docs.form3.tech/api.html#enumerations-scheme-status-codes-for-bacs) of `scheme_status_code`",
                            "example": "Field 1 (destination sorting code) was invalid",
                            "type": "string"
                        },
                        "settlement_cycle": {
                            "description": "Cycle in which the payment will be settled",
                            "example": 1,
                            "minimum": 0,
                            "type": "integer"
                        },
                        "settlement_date": {
                            "description": "Date that the payment will be settled",
                            "example": "2017-07-23",
                            "format": "date",
                            "type": "string",
                            "x-nullable": true
                        },
                        "status": {
                            "$ref": "#/definitions/ReturnSubmissionStatus"
                        },
                        "status_reason": {
                            "description": "Description of the submission status",
                            "example": "Accepted without qualification",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "return_submissions",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReversalAdmission": {
            "properties": {
                "attributes": {
                    "properties": {
                        "scheme_status_code": {
                            "description": "Scheme-specific status code. Refer to scheme documentation where available.",
                            "example": "0",
                            "type": "string"
                        },
                        "scheme_status_code_description": {
                            "description": "Description of `scheme_status_code`",
                            "example": "Field 1 (destination sorting code) was invalid",
                            "type": "string"
                        },
                        "source_gateway": {
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "properties": {
                        "payment": {
                            "$ref": "#/definitions/RelationshipPayments"
                        },
                        "reversal": {
                            "$ref": "#/definitions/RelationshipReversals"
                        }
                    },
                    "type": "object"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "reversal_admissions",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReversalAdmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ReversalAdmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReversalCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ReversalPayment"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReversalCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ReversalPayment"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReversalDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ReversalPayment"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReversalPayment": {
            "properties": {
                "attributes": {
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "properties": {
                        "payment": {
                            "$ref": "#/definitions/RelationshipLinks",
                            "description": "ID of the payment resource related to the reversal"
                        },
                        "reversal_admission": {
                            "$ref": "#/definitions/RelationshipLinks",
                            "description": "ID of the reversal admission resource related to the reversal"
                        },
                        "reversal_submission": {
                            "$ref": "#/definitions/RelationshipLinks",
                            "description": "ID of the reversal submission resource related to the reversal"
                        }
                    },
                    "type": "object"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "reversals",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReversalSubmission": {
            "properties": {
                "attributes": {
                    "properties": {
                        "scheme_status_code": {
                            "description": "Scheme-specific status code, refer to scheme documentation",
                            "example": "E",
                            "type": "string"
                        },
                        "scheme_status_code_description": {
                            "description": "Description of `scheme_status_code`",
                            "example": "Field 1 (destination sorting code) was invalid",
                            "type": "string"
                        },
                        "status": {
                            "$ref": "#/definitions/ReversalSubmissionStatus"
                        },
                        "status_reason": {
                            "description": "Description of the reversal submission status",
                            "example": "Accepted without qualification",
                            "type": "string"
                        },
                        "submission_datetime": {
                            "description": "Date of the reversal submission",
                            "example": "2018-05-09T10:49:13.470Z",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                        },
                        "transaction_start_datetime": {
                            "description": "Time the request was received by Form3. Used to compute the total transaction time of a payment.",
                            "example": "2018-05-09T10:49:13.447Z",
                            "format": "date-time",
                            "readOnly": true,
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "relationships": {
                    "$ref": "#/definitions/ReversalSubmissionRelationships"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "reversal_submissions",
                    "pattern": "^[A-Za-z_]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReversalSubmissionCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/NewReversalSubmission"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReversalSubmissionCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ReversalSubmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReversalSubmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/ReversalSubmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReversalSubmissionRelationships": {
            "properties": {
                "payment": {
                    "$ref": "#/definitions/RelationshipPayments"
                },
                "reversal": {
                    "$ref": "#/definitions/RelationshipReversals"
                },
                "validations": {
                    "$ref": "#/definitions/RelationshipLinks"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "ReversalSubmissionStatus": {
            "description": "[Status of the reversal submission](http://draft-api-docs.form3.tech/api.html#enumerations-reversal-submission-status)",
            "enum": [
                "accepted",
                "validation_passed",
                "released_to_gateway",
                "queued_for_delivery",
                "delivery_confirmed",
                "delivery_failed",
                "submitted",
                "validation_pending"
            ],
            "example": "accepted",
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "Role": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/RoleAttributes"
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "role",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RoleAttributes": {
            "properties": {
                "name": {
                    "description": "Name of the role",
                    "example": "Read-only Role",
                    "type": "string"
                },
                "parent_role_id": {
                    "description": "Unique resource ID of the parent Role",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string",
                    "x-nullable": true
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RoleCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Role"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RoleCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Role"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RoleDetailsListResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/Role"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "RoleDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Role"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "SchemeMessage": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/SchemeMessageAttributes"
                },
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "x-nullable": false
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string",
                    "x-nullable": false
                },
                "relationships": {
                    "$ref": "#/definitions/SchemeMessageRelationships"
                },
                "type": {
                    "enum": [
                        "scheme_messages"
                    ],
                    "type": "string",
                    "x-nullable": false
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id",
                "attributes"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "SchemeMessageAdmission": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/SchemeMessageAdmissionAttributes"
                },
                "id": {
                    "format": "uuid",
                    "type": "string",
                    "x-nullable": false
                },
                "organisation_id": {
                    "format": "uuid",
                    "type": "string",
                    "x-nullable": false
                },
                "relationships": {
                    "$ref": "#/definitions/SchemeMessageAdmissionRelationships"
                },
                "type": {
                    "enum": [
                        "scheme_message_admissions"
                    ],
                    "type": "string",
                    "x-nullable": false
                },
                "version": {
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "SchemeMessageAdmissionAttributes": {
            "properties": {
                "admission_datetime": {
                    "format": "date-time",
                    "type": "string"
                },
                "scheme_status_code": {
                    "type": "string"
                },
                "scheme_status_code_description": {
                    "type": "string"
                },
                "source_gateway": {
                    "type": "string"
                },
                "status": {
                    "$ref": "#/definitions/SchemeMessageAdmissionStatus"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "SchemeMessageAdmissionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/SchemeMessageAdmission"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "SchemeMessageAdmissionRelationships": {
            "properties": {
                "scheme_message": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/SchemeMessage"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "SchemeMessageAdmissionStatus": {
            "enum": [
                "delivery_confirmed",
                "failed"
            ],
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "SchemeMessageAttributes": {
            "properties": {
                "date": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": false
                },
                "entries": {
                    "items": {
                        "$ref": "#/definitions/SchemeMessageEntryItem"
                    },
                    "type": "array"
                },
                "payment_scheme": {
                    "$ref": "#/definitions/PaymentScheme",
                    "x-nullable": false
                },
                "scheme_message_type": {
                    "type": "string",
                    "x-nullable": false
                },
                "unique_scheme_id": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "required": [
                "scheme_message_type",
                "date",
                "payment_scheme",
                "entries"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "SchemeMessageDetailsListResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/SchemeMessage"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "SchemeMessageDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/SchemeMessage"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "SchemeMessageEntryItem": {
            "properties": {
                "key": {
                    "type": "string",
                    "x-nullable": false
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "key"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "SchemeMessageRelationships": {
            "properties": {
                "scheme_message_admission": {
                    "properties": {
                        "data": {
                            "items": {
                                "$ref": "#/definitions/SchemeMessageAdmission"
                            },
                            "type": "array"
                        }
                    },
                    "type": "object"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "Self": {
            "properties": {
                "self": {
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "SendersCorrespondentAccountHoldingEntity": {
            "properties": {
                "bank_address": {
                    "description": "Sender's correspondent's address",
                    "example": [
                        "Liverpool Customer Service Centre",
                        "Stevenson Way",
                        "Wavertree",
                        "L13 1NW"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "x-availability": {
                        "get": {
                            "swift": "sometimes"
                        },
                        "post": {
                            "swift": "optional"
                        }
                    },
                    "x-description": {
                        "swift": "Field 53B"
                    },
                    "x-omitempty": true
                },
                "bank_id": {
                    "description": "SWIFT BIC for sender's correspondent",
                    "example": "333333",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "swift": "sometimes"
                        },
                        "post": {
                            "swift": "optional"
                        }
                    },
                    "x-description": {
                        "swift": "Field 53A"
                    },
                    "x-length": 11
                },
                "bank_id_code": {
                    "$ref": "#/definitions/BankIdCode"
                },
                "bank_name": {
                    "description": "Sender's correspondent's name",
                    "example": "XYZ BANK PLC",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "swift": "sometimes"
                        },
                        "post": {
                            "swift": "optional"
                        }
                    },
                    "x-description": {
                        "swift": "Field 53D"
                    },
                    "x-length": 35
                },
                "bank_party_id": {
                    "description": "Identifier of the financial institution which services the account",
                    "example": "//AT12345",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "swift": "sometimes"
                        },
                        "post": {
                            "swift": "optional"
                        }
                    },
                    "x-description": {
                        "swift": "Field 53A/53B/53D"
                    },
                    "x-length": 37
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "Subscription": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/SubscriptionAttributes"
                },
                "created_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "modified_on": {
                    "format": "date-time",
                    "type": "string",
                    "x-nullable": true
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "subscriptions",
                    "pattern": "^[A-Za-z]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id",
                "attributes"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "SubscriptionAmendment": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/SubscriptionUpdate"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "SubscriptionAttributes": {
            "properties": {
                "callback_transport": {
                    "enum": [
                        "http",
                        "email",
                        "queue"
                    ],
                    "type": "string"
                },
                "callback_uri": {
                    "pattern": "^[A-Za-z0-9 .,@:\\&\\?=\\/\\-_]*$",
                    "type": "string"
                },
                "deactivated": {
                    "type": "boolean"
                },
                "event_type": {
                    "pattern": "^[A-Za-z_-]*$",
                    "type": "string"
                },
                "filter": {
                    "type": "string"
                },
                "record_type": {
                    "pattern": "^[A-Za-z_-]*$",
                    "type": "string"
                },
                "user_id": {
                    "format": "uuid",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "required": [
                "callback_uri",
                "callback_transport",
                "record_type",
                "event_type"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "SubscriptionCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Subscription"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "SubscriptionCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Subscription"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "SubscriptionDetailsListResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/Subscription"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "SubscriptionDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/Subscription"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "SubscriptionUpdate": {
            "properties": {
                "attributes": {
                    "$ref": "#/definitions/SubscriptionUpdateAttributes"
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "subscriptions",
                    "pattern": "^[A-Za-z]*$",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "required": [
                "id",
                "organisation_id",
                "attributes"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "SubscriptionUpdateAttributes": {
            "properties": {
                "callback_transport": {
                    "enum": [
                        "http",
                        "email",
                        "queue"
                    ],
                    "type": "string"
                },
                "callback_uri": {
                    "pattern": "^[A-Za-z0-9 .,@:\\&\\?=\\/\\-_]*$",
                    "type": "string"
                },
                "deactivated": {
                    "type": "boolean"
                },
                "event_type": {
                    "pattern": "^[A-Za-z_-]*$",
                    "type": "string"
                },
                "filter": {
                    "type": "string"
                },
                "record_type": {
                    "pattern": "^[A-Za-z_-]*$",
                    "type": "string"
                },
                "user_id": {
                    "format": "uuid",
                    "readOnly": true,
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "Token": {
            "properties": {
                "access_token": {
                    "description": "The access token to be used for all future API calls until `expires_in`",
                    "type": "string"
                },
                "expires_in": {
                    "description": "The lifetime of this token in seconds",
                    "format": "int32",
                    "type": "integer"
                },
                "token_type": {
                    "description": "The type of the token. Is always set to `Bearer`.",
                    "enum": [
                        "Bearer"
                    ],
                    "type": "string"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "UltimateEntity": {
            "properties": {
                "address": {
                    "description": "Ultimate debtor/beneficiary address",
                    "example": [
                        "Liverpool Customer Service Centre",
                        "Stevenson Way, Wavertree, L13 1NW"
                    ],
                    "items": {
                        "type": "string"
                    },
                    "type": "array",
                    "x-availability": {
                        "get": {
                            "sepa": "sometimes"
                        },
                        "post": {
                            "sepa": "optional"
                        }
                    },
                    "x-description": {
                        "sepa": "Max 2 lines of 70 text."
                    },
                    "x-omitempty": true
                },
                "birth_city": {
                    "description": "Ultimate debtor/beneficiary birth city",
                    "example": "PARIS",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "sepa": "sometimes"
                        },
                        "post": {
                            "sepa": "conditional"
                        }
                    },
                    "x-description": {
                        "sepa": "If a Ultimate Beneficiary/Debtor Identification is used then only one of `organisation_identification`, `private_identification` or date and place of birth can be present."
                    },
                    "x-length": 35
                },
                "birth_country": {
                    "description": "Ultimate debtor/beneficiary birth country. ISO 3166 format country code",
                    "example": "FR",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "sepa": "sometimes"
                        },
                        "post": {
                            "sepa": "conditional"
                        }
                    },
                    "x-description": {
                        "sepa": "If a Ultimate Beneficiary/Debtor Identification is used then only one of `organisation_identification`, `private_identification` or date and place of birth can be present."
                    },
                    "x-length": 2
                },
                "birth_date": {
                    "description": "Ultimate debtor/beneficiary birth date. Formatted ISO 8601 format YYYY-MM-DD",
                    "example": "1973-01-31",
                    "format": "date",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "sepa": "sometimes"
                        },
                        "post": {
                            "sepa": "conditional"
                        }
                    },
                    "x-description": {
                        "sepa": "If a Ultimate Beneficiary/Debtor Identification is used then only one of `organisation_identification`, `private_identification` or date and place of birth can be present."
                    },
                    "x-nullable": true
                },
                "birth_province": {
                    "description": "Ultimate debtor/beneficiary birth province",
                    "example": "SOUTH SIDE",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "sepa": "sometimes"
                        },
                        "post": {
                            "sepa": "optional"
                        }
                    },
                    "x-description": {
                        "sepa": "If a Ultimate Beneficiary/Debtor Identification is used then only one of `organisation_identification`, `private_identification` or date and place of birth can be present."
                    },
                    "x-length": 35
                },
                "country": {
                    "description": "Country of ultimate debtor/beneficiary address. ISO 3166 format country code",
                    "example": "GB",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "sepa": "sometimes"
                        },
                        "post": {
                            "sepa": "optional"
                        }
                    },
                    "x-length": 2
                },
                "name": {
                    "description": "Ultimate beneficiary name",
                    "example": "Jane Bond",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "sepa": "sometimes"
                        },
                        "post": {
                            "sepa": "optional"
                        }
                    },
                    "x-length": 70
                },
                "organisation_identification": {
                    "description": "Organisation identification of an ultimate debtor/beneficiary, in the case that the ultimate debtor/beneficiary is an organisation and not a private person.",
                    "example": "ID1234656",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "sepa": "sometimes"
                        },
                        "post": {
                            "sepa": "optional"
                        }
                    },
                    "x-description": {
                        "sepa": "The Identification can either be a BIC, BEI or Other Identification"
                    },
                    "x-length": 35
                },
                "organisation_identification_code": {
                    "description": "The code that specifies the type of `organisation_identification`",
                    "example": "BIC",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "sepa": "sometimes"
                        },
                        "post": {
                            "sepa": "conditional"
                        }
                    },
                    "x-description": {
                        "sepa": "If `organisation_identification` is specified, must be one of `BIC`, `BEI`, `BANK`, `CBID`, `CHID`, `CINC`, `COID`, `CUST`, `DUNS`, `EMPL`, `GS1G`, `SREN`, `SRET`, `TXID` or `Other`"
                    },
                    "x-length": 5
                },
                "organisation_identification_issuer": {
                    "description": "Issuer of the `organisation_identification`",
                    "example": "NATIONAL WESTMINSTER BANK PLC",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "sepa": "sometimes"
                        },
                        "post": {
                            "sepa": "optional"
                        }
                    },
                    "x-description": {
                        "sepa": "May only be present if `organisation_identification_code` is `Other`"
                    },
                    "x-length": 35
                },
                "organisation_identification_scheme": {
                    "description": "The code that specifies the scheme of `organisation_identification`",
                    "example": "CustomerId",
                    "type": "string",
                    "x-availability": {
                        "get": {
                            "sepa": "sometimes"
                        },
                        "post": {
                            "sepa": "optional"
                        }
                    },
                    "x-description": {
                        "sepa": "May only be present if `organisation_identification_code` is `Other`"
                    },
                    "x-length": 35
                },
                "private_identification": {
                    "$ref": "#/definitions/PrivateIdentification"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "User": {
            "properties": {
                "attributes": {
                    "properties": {
                        "client_credential_ids": {
                            "items": {
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "email": {
                            "description": "Email address",
                            "example": "viewer.testbank@form3.tech",
                            "type": "string"
                        },
                        "public_key_ids": {
                            "items": {
                                "format": "uuid",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "role_ids": {
                            "description": "List of roles that this user belongs to",
                            "example": [
                                "1081014a-37a8-45c9-a40d-59c028a565d8"
                            ],
                            "items": {
                                "format": "uuid",
                                "type": "string"
                            },
                            "type": "array"
                        },
                        "username": {
                            "description": "User name",
                            "example": "viewer.testbank",
                            "type": "string"
                        }
                    },
                    "type": "object"
                },
                "id": {
                    "description": "Unique resource ID",
                    "example": "7826c3cb-d6fd-41d0-b187-dc23ba928772",
                    "format": "uuid",
                    "type": "string"
                },
                "organisation_id": {
                    "description": "Unique ID of the organisation this resource is created by",
                    "example": "ee2fb143-6dfe-4787-b183-ca8ddd4164d2",
                    "format": "uuid",
                    "type": "string"
                },
                "type": {
                    "description": "Name of the resource type",
                    "example": "User",
                    "type": "string"
                },
                "version": {
                    "description": "Version number",
                    "example": 0,
                    "minimum": 0,
                    "type": "integer"
                }
            },
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "UserCreation": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/User"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "UserCreationResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/User"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "UserCredentialListResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/Credential"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "UserDetailsListResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/User"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "UserDetailsResponse": {
            "properties": {
                "data": {
                    "$ref": "#/definitions/User"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        },
        "UserRoleListResponse": {
            "properties": {
                "data": {
                    "items": {
                        "$ref": "#/definitions/Role"
                    },
                    "type": "array"
                },
                "links": {
                    "$ref": "#/definitions/Links"
                }
            },
            "required": [
                "data"
            ],
            "type": "object",
            "x-access": [
                "Public"
            ]
        }
    },
    "info": {
        "title": "Form3 Public API",
        "version": "1"
    },
    "parameters": {
        "Authorization": {
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
        "OBNameVerificationRequest1": {
            "description": "Details of the account name to be verified",
            "in": "body",
            "name": "requestBody",
            "required": true,
            "schema": {
                "additionalProperties": false,
                "properties": {
                    "Data": {
                        "properties": {
                            "AccountType": {
                                "$ref": "#/definitions/OBExternalAccountType1Code"
                            },
                            "Identification": {
                                "description": "The sort code/account number combination for the account",
                                "pattern": "^[0-9]{14}$",
                                "type": "string"
                            },
                            "Name": {
                                "$ref": "#/definitions/AccountName"
                            },
                            "SchemeName": {
                                "enum": [
                                    "SortCodeAccountNumber"
                                ],
                                "type": "string"
                            },
                            "SecondaryIdentification": {
                                "description": "The payment reference information as input by the payer.\nThis must always be included, where available, for all CoP requests as the payee’s ASPSP may need to use secondary reference data input in this field to identify the underlying account in its books.\n",
                                "maxLength": 140,
                                "minLength": 1,
                                "type": "string"
                            }
                        },
                        "required": [
                            "SchemeName",
                            "AccountType",
                            "Identification",
                            "Name"
                        ],
                        "type": "object"
                    }
                },
                "required": [
                    "Data"
                ],
                "type": "object"
            },
            "x-access": [
                "Public"
            ]
        }
    },
    "paths": {
        "/addressbook/health": {
            "get": {
                "responses": {
                    "200": {
                        "description": "healthy",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Get health",
                "tags": [
                    "Addressbook"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/addressbook/parties": {
            "get": {
                "parameters": [
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "pattern": "^(first|last|[\\d]{1,4})$",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 100,
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list parties response",
                        "schema": {
                            "$ref": "#/definitions/ListPartiesResponse"
                        }
                    }
                },
                "summary": "List parties",
                "tags": [
                    "Addressbook"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "creation request",
                        "schema": {
                            "$ref": "#/definitions/PartyCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "creation response",
                        "schema": {
                            "$ref": "#/definitions/PartyCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create a party",
                "tags": [
                    "Addressbook"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/addressbook/parties/{id}": {
            "get": {
                "parameters": [
                    {
                        "description": "Id of party",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "party returned",
                        "schema": {
                            "$ref": "#/definitions/PartyGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "404": {
                        "description": "Record not found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Get a party",
                "tags": [
                    "Addressbook"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/addressbook/parties/{id}/accounts/{party_account_id}": {
            "get": {
                "parameters": [
                    {
                        "description": "Id of party",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Id of party account",
                        "format": "uuid",
                        "in": "path",
                        "name": "party_account_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get reponse",
                        "schema": {
                            "$ref": "#/definitions/PartyAccountGetResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "404": {
                        "description": "Record not found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Get a party account",
                "tags": [
                    "Addressbook"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/addressbook/parties/{id}/contacts": {
            "get": {
                "parameters": [
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "pattern": "^(first|last|[\\d]{1,4})$",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 100,
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Id of party",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list contacts response",
                        "schema": {
                            "$ref": "#/definitions/ListContactsResponse"
                        }
                    }
                },
                "summary": "List contacts for party",
                "tags": [
                    "Addressbook"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Id of party",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "creation request",
                        "schema": {
                            "$ref": "#/definitions/ContactCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "creation response",
                        "schema": {
                            "$ref": "#/definitions/ContactCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create a contact",
                "tags": [
                    "Addressbook"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/addressbook/parties/{id}/contacts/{contact_id}": {
            "get": {
                "parameters": [
                    {
                        "description": "Id of party",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Id of contact",
                        "format": "uuid",
                        "in": "path",
                        "name": "contact_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "contact returned",
                        "schema": {
                            "$ref": "#/definitions/ContactGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "404": {
                        "description": "Record not found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Get a contact",
                "tags": [
                    "Addressbook"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/addressbook/parties/{id}/contacts/{contact_id}/accounts": {
            "get": {
                "parameters": [
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "pattern": "^(first|last|[\\d]{1,4})$",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 100,
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Id of party",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Id of party",
                        "format": "uuid",
                        "in": "path",
                        "name": "contact_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list contact accounts response",
                        "schema": {
                            "$ref": "#/definitions/ListContactAccountsResponse"
                        }
                    }
                },
                "summary": "List contacts accounts for contact",
                "tags": [
                    "Addressbook"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Id of party",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Id of Contact",
                        "format": "uuid",
                        "in": "path",
                        "name": "contact_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "creation request",
                        "schema": {
                            "$ref": "#/definitions/ContactAccountCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "creation response",
                        "schema": {
                            "$ref": "#/definitions/ContactAccountCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create a contact account",
                "tags": [
                    "Addressbook"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/addressbook/parties/{id}/contacts/{contact_id}/accounts/{contact_account_id}": {
            "get": {
                "parameters": [
                    {
                        "description": "Id of party",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Id of Contact",
                        "format": "uuid",
                        "in": "path",
                        "name": "contact_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Id of Contact",
                        "format": "uuid",
                        "in": "path",
                        "name": "contact_account_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get contact account response",
                        "schema": {
                            "$ref": "#/definitions/ContactAccountGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Get a contact account",
                "tags": [
                    "Addressbook"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/audit/entries/health": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Audit service health",
                        "schema": {
                            "$ref": "#/definitions/Health"
                        }
                    }
                },
                "summary": "Fetch audit service health",
                "tags": [
                    "Audit"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/audit/entries/{record_type}": {
            "get": {
                "parameters": [
                    {
                        "description": "Record Type",
                        "in": "path",
                        "name": "record_type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "collectionFormat": "csv",
                        "description": "Filter by organisation id",
                        "in": "query",
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "name": "filter[organisation_id]",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[action_time_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[action_time_to]",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Audit details",
                        "schema": {
                            "$ref": "#/definitions/AuditEntryListResponse"
                        }
                    }
                },
                "summary": "List audit entries for this record type",
                "tags": [
                    "Audit"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/audit/entries/{record_type}/{id}": {
            "get": {
                "parameters": [
                    {
                        "description": "Record Type",
                        "in": "path",
                        "name": "record_type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Record Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Audit details",
                        "schema": {
                            "$ref": "#/definitions/AuditEntryListResponse"
                        }
                    }
                },
                "summary": "Fetch audit entry list for this record type/id",
                "tags": [
                    "Audit"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/fx/deals": {
            "get": {
                "parameters": [
                    {
                        "description": "The organisations to filter on",
                        "in": "query",
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "name": "filter[organisation_id]",
                        "type": "array"
                    },
                    {
                        "description": "The Party for which to see FX Deals",
                        "format": "uuid",
                        "in": "query",
                        "name": "filter[party_id]",
                        "type": "string"
                    },
                    {
                        "description": "The processing date from which, inclusively, to find FX Deals",
                        "format": "date",
                        "in": "query",
                        "name": "filter[processing_date_from]",
                        "type": "string"
                    },
                    {
                        "description": "The processing date until which, inclusively, to find FX Deals",
                        "format": "date",
                        "in": "query",
                        "name": "filter[processing_date_to]",
                        "type": "string"
                    },
                    {
                        "description": "The source currency, for example GBP",
                        "in": "query",
                        "name": "filter[source.currency]",
                        "type": "string"
                    },
                    {
                        "description": "The target currency, for example GBP",
                        "in": "query",
                        "name": "filter[target.currency]",
                        "type": "string"
                    },
                    {
                        "description": "The amount of currency to sell",
                        "in": "query",
                        "name": "filter[source.amount]",
                        "type": "string"
                    },
                    {
                        "description": "The amount of currency to buy",
                        "in": "query",
                        "name": "filter[target.amount]",
                        "type": "string"
                    },
                    {
                        "description": "The type of foreign exchange",
                        "enum": [
                            "spot",
                            "forward"
                        ],
                        "in": "query",
                        "name": "filter[type]",
                        "type": "string"
                    },
                    {
                        "description": "Reference of the FX Deal Submission associated to look for",
                        "in": "query",
                        "name": "filter[submission.reference]",
                        "type": "string"
                    },
                    {
                        "description": "Status of the FX Deal Submission associated to look for",
                        "in": "query",
                        "name": "filter[submission.status]",
                        "type": "string"
                    },
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "pattern": "$[A-z0-9]{4}^",
                        "type": "string"
                    },
                    {
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FX Deals response",
                        "schema": {
                            "$ref": "#/definitions/FXDealsListResponse"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/responses/Forbidden"
                    },
                    "502": {
                        "$ref": "#/responses/BadGateway"
                    },
                    "default": {
                        "$ref": "#/responses/UnexpectedError"
                    }
                },
                "summary": "Get FX Deals",
                "tags": [
                    "fx_api"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "creation request",
                        "schema": {
                            "$ref": "#/definitions/FXDealCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "creation response",
                        "schema": {
                            "$ref": "#/definitions/FXDealResponse"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/responses/Forbidden"
                    },
                    "409": {
                        "$ref": "#/responses/Conflict"
                    },
                    "502": {
                        "$ref": "#/responses/BadGateway"
                    },
                    "default": {
                        "$ref": "#/responses/UnexpectedError"
                    }
                },
                "summary": "Create an FX Deal",
                "tags": [
                    "fx_api"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/fx/deals/{fx_deal_id}": {
            "get": {
                "parameters": [
                    {
                        "description": "FX Deal ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "fx_deal_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "fx deal response",
                        "schema": {
                            "$ref": "#/definitions/FXDealResponse"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/responses/NotFound"
                    },
                    "502": {
                        "$ref": "#/responses/BadGateway"
                    },
                    "default": {
                        "$ref": "#/responses/UnexpectedError"
                    }
                },
                "summary": "Fetch an FX Deal",
                "tags": [
                    "fx_api"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/fx/deals/{fx_deal_id}/submissions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "The ID of the FX Deal to submit",
                        "in": "path",
                        "name": "fx_deal_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "creation request",
                        "schema": {
                            "$ref": "#/definitions/FXDealSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "creation response",
                        "schema": {
                            "$ref": "#/definitions/FXDealSubmissionResponse"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/responses/NotFound"
                    },
                    "409": {
                        "$ref": "#/responses/Conflict"
                    },
                    "502": {
                        "$ref": "#/responses/BadGateway"
                    },
                    "default": {
                        "$ref": "#/responses/UnexpectedError"
                    }
                },
                "summary": "Create an FX Deal Submission",
                "tags": [
                    "fx_api"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/fx/deals/{fx_deal_id}/submissions/{fx_deal_submission_id}": {
            "get": {
                "parameters": [
                    {
                        "description": "FX Deal ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "fx_deal_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "FX Deal submission ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "fx_deal_submission_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "fx deal submission response",
                        "schema": {
                            "$ref": "#/definitions/FXDealSubmissionResponse"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/responses/NotFound"
                    },
                    "502": {
                        "$ref": "#/responses/BadGateway"
                    },
                    "default": {
                        "$ref": "#/responses/UnexpectedError"
                    }
                },
                "summary": "Fetch an FX Deal Submission",
                "tags": [
                    "fx_api"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "patch": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "FX Deal ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "fx_deal_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "FX Deal submission ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "fx_deal_submission_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "patchBody",
                        "schema": {
                            "$ref": "#/definitions/FxDealSubmissionAmendment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "creation response",
                        "schema": {
                            "$ref": "#/definitions/FXDealSubmissionResponse"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/responses/NotFound"
                    },
                    "502": {
                        "$ref": "#/responses/BadGateway"
                    },
                    "default": {
                        "$ref": "#/responses/UnexpectedError"
                    }
                },
                "summary": "Create an FX Deal Submission",
                "tags": [
                    "fx_api"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/fx/rates": {
            "get": {
                "parameters": [
                    {
                        "description": "The party we want to get the FX rate for",
                        "in": "query",
                        "name": "filter[party_id]",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The currency the party wants to sell",
                        "in": "query",
                        "name": "filter[source.currency]",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The currency the party wants to buy",
                        "in": "query",
                        "name": "filter[target.currency]",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The amount of currency to sell",
                        "in": "query",
                        "name": "filter[source.amount]",
                        "type": "string"
                    },
                    {
                        "description": "The amount of currency to buy",
                        "in": "query",
                        "name": "filter[target.amount]",
                        "type": "string"
                    },
                    {
                        "description": "Type of foreign exchange",
                        "enum": [
                            "spot",
                            "forward"
                        ],
                        "in": "query",
                        "name": "filter[type]",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The date for which the rate would be valid",
                        "format": "date",
                        "in": "query",
                        "name": "filter[processing_date]",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FX rates response",
                        "schema": {
                            "$ref": "#/definitions/FXRatesListResponse"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/responses/Forbidden"
                    },
                    "502": {
                        "$ref": "#/responses/BadGateway"
                    },
                    "default": {
                        "$ref": "#/responses/UnexpectedError"
                    }
                },
                "summary": "Get FX rates",
                "tags": [
                    "fx_api"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/notification/reports": {
            "get": {
                "parameters": [
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "pattern": "^(first|last|[\\d]{1,4})$",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 100,
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Filter by organisation Ids",
                        "in": "query",
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "name": "filter[organisation_id]",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "description": "Filter bu ReportType",
                        "in": "query",
                        "name": "filter[report_type]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by Report Type Description",
                        "in": "query",
                        "name": "filter[report_type_description]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by Report Source",
                        "in": "query",
                        "name": "filter[report_source]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Request reports created after specific date time",
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[created_on_after]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Request reports created after specific date time",
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[created_on_before]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Request reports modified after specific date time",
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[modified_on_after]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Request reports modified before specific date time",
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[modified_on_before]",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of reports",
                        "schema": {
                            "$ref": "#/definitions/ReportDetailsListResponse"
                        }
                    },
                    "400": {
                        "description": "Reports bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "List reports",
                "tags": [
                    "Reports"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/notification/reports/{id}": {
            "get": {
                "parameters": [
                    {
                        "description": "Report ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Acceptable Format",
                        "in": "header",
                        "name": "Accept",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report details",
                        "schema": {
                            "$ref": "#/definitions/ReportDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "404": {
                        "description": "Report Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "406": {
                        "description": "Report not available in acceptable format",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Get report by ID",
                "tags": [
                    "Reports"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/notification/reports/{id}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Report Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Report Admission ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get report admission by Id",
                        "schema": {
                            "$ref": "#/definitions/ReportAdmissionDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Get Report Admission by ID",
                "tags": [
                    "Reports"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/notification/schememessages": {
            "get": {
                "parameters": [
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "pattern": "^(first|last|[\\d]{1,4})$",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 100,
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Filter by Unique SchemeId",
                        "in": "query",
                        "name": "filter[unique_scheme_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by Scheme Message Type",
                        "in": "query",
                        "name": "filter[scheme_message_type]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by Payment Scheme",
                        "in": "query",
                        "name": "filter[payment_scheme]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by Admission DateTime",
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[admission.admission_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by Admission DateTime",
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[admission.admission_date_to]",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of scheme messages",
                        "schema": {
                            "$ref": "#/definitions/SchemeMessageDetailsListResponse"
                        }
                    },
                    "400": {
                        "description": "Scheme Message bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "List messages",
                "tags": [
                    "SchemeMessages"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/notification/schememessages/{id}": {
            "get": {
                "parameters": [
                    {
                        "description": "Scheme Message Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Scheme Message details",
                        "schema": {
                            "$ref": "#/definitions/SchemeMessageDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Scheme Message bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "404": {
                        "description": "Scheme Message Not found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Fetch message",
                "tags": [
                    "SchemeMessages"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/notification/schememessages/{id}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Scheme Message Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Scheme Message Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get scheme message admission by Id",
                        "schema": {
                            "$ref": "#/definitions/SchemeMessageAdmissionDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Scheme Message Admission by Id bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "404": {
                        "description": "Scheme Message Not found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Get Scheme Message Admission By AdmissionId",
                "tags": [
                    "SchemeMessages"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/notification/subscriptions": {
            "get": {
                "parameters": [
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "pattern": "$[A-z0-9]{4}^",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "collectionFormat": "csv",
                        "description": "Filter by event type",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "filter[event_type]",
                        "required": false,
                        "type": "array"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of subscription details",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionDetailsListResponse"
                        }
                    }
                },
                "summary": "List all subscriptions",
                "tags": [
                    "Subscriptions"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Subscription creation request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubscriptionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Subscription creation response",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionCreationResponse"
                        }
                    }
                },
                "summary": "Create subscription",
                "tags": [
                    "Subscriptions"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/notification/subscriptions/health": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Notification service health",
                        "schema": {
                            "$ref": "#/definitions/Health"
                        }
                    }
                },
                "summary": "Fetch notification service health",
                "tags": [
                    "Subscriptions"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/notification/subscriptions/{id}": {
            "delete": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Subscription Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Version",
                        "in": "query",
                        "minimum": 0,
                        "name": "version",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Subscription deleted OK. No body content will be returned"
                    }
                },
                "summary": "Deletes a subscription",
                "tags": [
                    "Subscriptions"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "description": "Subscription Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription details",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch subscription",
                "tags": [
                    "Subscriptions"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "patch": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Subscription Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Subscription update request",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionAmendment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription details",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Update subscription details",
                "tags": [
                    "Subscriptions"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/oauth2/token": {
            "post": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "description": "Value MUST be set to \"client_credentials\" as per RFC",
                        "enum": [
                            "client_credentials"
                        ],
                        "in": "formData",
                        "name": "grant_type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Authorisation token (Bearer)",
                        "schema": {
                            "$ref": "#/definitions/Token"
                        }
                    },
                    "403": {
                        "description": "Authentication failed"
                    }
                },
                "security": [
                    {
                        "Basic": []
                    }
                ],
                "summary": "Request Access Token",
                "tags": [
                    "Oauth2"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/openbanking/accounts/name-verification": {
            "post": {
                "description": "Lookup the account details by way of a POST to find the payee. Return a match indicator, reason code and correct account name (in the event of a close match)\n",
                "operationId": "AccountVerification",
                "parameters": [
                    {
                        "$ref": "#/parameters/OBNameVerificationRequest1"
                    },
                    {
                        "$ref": "#/parameters/Authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/OBNameVerification1"
                    },
                    "400": {
                        "$ref": "#/responses/400Error"
                    },
                    "401": {
                        "$ref": "#/responses/401Error"
                    },
                    "403": {
                        "$ref": "#/responses/403Error"
                    },
                    "405": {
                        "$ref": "#/responses/405Error"
                    },
                    "406": {
                        "$ref": "#/responses/406Error"
                    },
                    "429": {
                        "$ref": "#/responses/429Error"
                    },
                    "500": {
                        "$ref": "#/responses/500Error"
                    },
                    "503": {
                        "$ref": "#/responses/503Error"
                    }
                },
                "security": [
                    {
                        "IntraFIOAuth2Security": [
                            "name-verification"
                        ]
                    }
                ],
                "summary": "Account name verification endpoint",
                "tags": [
                    "Account Name Verification"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/openbanking/participants": {
            "get": {
                "parameters": [
                    {
                        "description": "Sort code",
                        "in": "query",
                        "minimum": 0,
                        "name": "filter[sort_code]",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Participant information",
                        "schema": {
                            "$ref": "#/definitions/ParticipantResponse"
                        }
                    },
                    "404": {
                        "description": "Participant not found"
                    }
                },
                "summary": "Get participant information",
                "tags": [
                    "Participants"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/organisation/accounts": {
            "get": {
                "parameters": [
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "name": "page[number]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "collectionFormat": "csv",
                        "description": "Filter by organisation id",
                        "in": "query",
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "name": "filter[organisation_id]",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "collectionFormat": "csv",
                        "description": "Filter by type of bank id e.g. \"GBDSC\"",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "filter[bank_id_code]",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "collectionFormat": "csv",
                        "description": "Filter by bank id e.g. sort code or bic",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "filter[bank_id]",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "collectionFormat": "csv",
                        "description": "Filter by account number",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "filter[account_number]",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "collectionFormat": "csv",
                        "description": "Filter by country e.g. FR,GB",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "filter[country]",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "collectionFormat": "csv",
                        "description": "Filter by customer_id",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "filter[customer_id]",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "collectionFormat": "csv",
                        "description": "Filter by IBAN",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "filter[iban]",
                        "required": false,
                        "type": "array"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of account details",
                        "schema": {
                            "$ref": "#/definitions/AccountDetailsListResponse"
                        }
                    }
                },
                "summary": "List accounts",
                "tags": [
                    "Accounts"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Account creation request",
                        "schema": {
                            "$ref": "#/definitions/AccountCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Account creation response",
                        "schema": {
                            "$ref": "#/definitions/AccountCreationResponse"
                        }
                    }
                },
                "summary": "Create account",
                "tags": [
                    "Accounts"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/organisation/accounts/{id}": {
            "delete": {
                "parameters": [
                    {
                        "description": "Account Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Version",
                        "in": "query",
                        "minimum": 0,
                        "name": "version",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Account deleted"
                    }
                },
                "summary": "Delete account",
                "tags": [
                    "Accounts"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "description": "Account Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account details",
                        "schema": {
                            "$ref": "#/definitions/AccountDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch account",
                "tags": [
                    "Accounts"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "patch": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Account Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "account amend request",
                        "schema": {
                            "$ref": "#/definitions/AccountAmendment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account updated",
                        "schema": {
                            "$ref": "#/definitions/AccountDetailsResponse"
                        }
                    }
                },
                "summary": "Amend account",
                "tags": [
                    "Accounts"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/organisation/accounts/{id}/events": {
            "get": {
                "parameters": [
                    {
                        "description": "Account Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "name": "page[number]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account event list",
                        "schema": {
                            "$ref": "#/definitions/AccountEventListResponse"
                        }
                    }
                },
                "summary": "Fetch account events",
                "tags": [
                    "Accounts"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/organisation/balances": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Associations details",
                        "schema": {
                            "$ref": "#/definitions/BalanceDetailsListResponse"
                        }
                    }
                },
                "summary": "Fetch all account balances at Starling",
                "tags": [
                    "Balances"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/organisation/positions": {
            "get": {
                "responses": {
                    "200": {
                        "description": "List of position details",
                        "schema": {
                            "$ref": "#/definitions/PositionDetailsListResponse"
                        }
                    }
                },
                "summary": "List Positions",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/organisation/units": {
            "get": {
                "parameters": [
                    {
                        "description": "Child org id",
                        "format": "uuid",
                        "in": "query",
                        "name": "filter[child_organisation_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Organisation ids",
                        "in": "query",
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "name": "filter[organisation_ids]",
                        "required": false,
                        "type": "array"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of organisation details",
                        "schema": {
                            "$ref": "#/definitions/OrganisationDetailsListResponse"
                        }
                    }
                },
                "summary": "List all organisations",
                "tags": [
                    "Organisations"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Organisation creation request",
                        "schema": {
                            "$ref": "#/definitions/OrganisationCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Organisation creation response",
                        "schema": {
                            "$ref": "#/definitions/OrganisationCreationResponse"
                        }
                    }
                },
                "summary": "Create organisation",
                "tags": [
                    "Organisations"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/organisation/units/health": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Organisation service health",
                        "schema": {
                            "$ref": "#/definitions/Health"
                        }
                    }
                },
                "summary": "Fetch organisation service health",
                "tags": [
                    "Organisations"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/organisation/units/{id}": {
            "get": {
                "parameters": [
                    {
                        "description": "Organisation Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organisation details",
                        "schema": {
                            "$ref": "#/definitions/OrganisationDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch organisation",
                "tags": [
                    "Organisations"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "patch": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Organisation Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Organisation update request",
                        "schema": {
                            "$ref": "#/definitions/OrganisationUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organisation details",
                        "schema": {
                            "$ref": "#/definitions/OrganisationDetailsResponse"
                        }
                    }
                },
                "summary": "Update organisation",
                "tags": [
                    "Organisations"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/security/roles": {
            "get": {
                "parameters": [
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of role details",
                        "schema": {
                            "$ref": "#/definitions/RoleDetailsListResponse"
                        }
                    }
                },
                "summary": "List all roles",
                "tags": [
                    "Roles"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Role creation request",
                        "schema": {
                            "$ref": "#/definitions/RoleCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Role creation response",
                        "schema": {
                            "$ref": "#/definitions/RoleCreationResponse"
                        }
                    }
                },
                "summary": "Create role",
                "tags": [
                    "Roles"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/security/roles/{role_id}": {
            "delete": {
                "parameters": [
                    {
                        "description": "Role Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "role_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Version",
                        "in": "query",
                        "minimum": 0,
                        "name": "version",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Role deleted"
                    }
                },
                "summary": "Delete role",
                "tags": [
                    "Roles"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "description": "Role Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "role_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role details",
                        "schema": {
                            "$ref": "#/definitions/RoleDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch role",
                "tags": [
                    "Roles"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/security/roles/{role_id}/aces": {
            "get": {
                "parameters": [
                    {
                        "description": "Role Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "role_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ACE details",
                        "schema": {
                            "$ref": "#/definitions/AceDetailsListResponse"
                        }
                    }
                },
                "summary": "List all Access Controls for role",
                "tags": [
                    "ACE"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Role Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "role_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "ACE creation request",
                        "schema": {
                            "$ref": "#/definitions/AceCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ACE creation response",
                        "schema": {
                            "$ref": "#/definitions/AceCreationResponse"
                        }
                    }
                },
                "summary": "Create Access Control Entry",
                "tags": [
                    "ACE"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/security/roles/{role_id}/aces/{ace_id}": {
            "delete": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Role Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "role_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Ace Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "ace_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ACE deleted OK"
                    }
                },
                "summary": "Delete Access Control Entry",
                "tags": [
                    "ACE"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "description": "Role Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "role_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Ace Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "ace_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ACE details",
                        "schema": {
                            "$ref": "#/definitions/AceDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch Access Control Entry",
                "tags": [
                    "ACE"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/security/users": {
            "get": {
                "parameters": [
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user details",
                        "schema": {
                            "$ref": "#/definitions/UserDetailsListResponse"
                        }
                    }
                },
                "summary": "List all users",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "User creation request",
                        "schema": {
                            "$ref": "#/definitions/UserCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User creation response",
                        "schema": {
                            "$ref": "#/definitions/UserCreationResponse"
                        }
                    }
                },
                "summary": "Create user",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/security/users/health": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Security service health",
                        "schema": {
                            "$ref": "#/definitions/Health"
                        }
                    }
                },
                "summary": "Fetch security service health",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/security/users/{user_id}": {
            "delete": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "User Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Version",
                        "in": "query",
                        "minimum": 0,
                        "name": "version",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted"
                    }
                },
                "summary": "Delete user",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "description": "User Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "schema": {
                            "$ref": "#/definitions/UserDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch user",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "patch": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "User Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "User update request",
                        "schema": {
                            "$ref": "#/definitions/UserCreation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "schema": {
                            "$ref": "#/definitions/UserDetailsResponse"
                        }
                    }
                },
                "summary": "Edit user details",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/security/users/{user_id}/aces": {
            "get": {
                "parameters": [
                    {
                        "description": "User Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Record type",
                        "in": "query",
                        "name": "filter[record_type]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Access action",
                        "in": "query",
                        "name": "filter[action]",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of access control entries for this user",
                        "schema": {
                            "$ref": "#/definitions/AceDetailsListResponse"
                        }
                    }
                },
                "summary": "Get access control list for user",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/security/users/{user_id}/credentials": {
            "get": {
                "parameters": [
                    {
                        "description": "User Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of credentials for user",
                        "schema": {
                            "$ref": "#/definitions/UserCredentialListResponse"
                        }
                    }
                },
                "summary": "Fetch credentials for user",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "User Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Credential creation response",
                        "schema": {
                            "$ref": "#/definitions/CredentialCreationResponse"
                        }
                    }
                },
                "summary": "Generate new credentials for a user",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/security/users/{user_id}/credentials/{client_id}": {
            "delete": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "User Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "client id",
                        "in": "path",
                        "name": "client_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Credential deleted"
                    }
                },
                "summary": "Delete credential for user",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/security/users/{user_id}/roles": {
            "get": {
                "parameters": [
                    {
                        "description": "User Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of roles for user",
                        "schema": {
                            "$ref": "#/definitions/UserRoleListResponse"
                        }
                    }
                },
                "summary": "Get all roles for user",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/security/users/{user_id}/roles/{role_id}": {
            "delete": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "User Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Role Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "role_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User role deleted OK"
                    }
                },
                "summary": "Remove role from user",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "User Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Role Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "role_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Role set OK"
                    }
                },
                "summary": "Add role to user",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/claims": {
            "get": {
                "parameters": [
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "pattern": "$[A-z0-9]{4}^",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Filter by organisation id",
                        "in": "query",
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "name": "filter[organisation_id]",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "filter[payment_scheme]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[clearing_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[reference]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[reason_code]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[contact_name]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[debtor_party.account_number]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[debtor_party.bank_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[beneficiary_party.account_number]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[beneficiary_party.bank_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[original_instruction.reference]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[submission.status]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[submission.submission_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[submission.submission_date_to]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[reversal.status]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[reversal.submission_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[reversal.submission_date_to]",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of claims details",
                        "schema": {
                            "$ref": "#/definitions/ClaimDetailsListResponse"
                        }
                    }
                },
                "summary": "List claims",
                "tags": [
                    "Claims"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Claim creation request",
                        "schema": {
                            "$ref": "#/definitions/ClaimCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Claim creation response",
                        "schema": {
                            "$ref": "#/definitions/ClaimDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Claim creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create Claim",
                "tags": [
                    "Claims"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/claims/health": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Claims service health",
                        "schema": {
                            "$ref": "#/definitions/Health"
                        }
                    }
                },
                "summary": "Fetch claims service health",
                "tags": [
                    "Claims"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/claims/{id}": {
            "get": {
                "parameters": [
                    {
                        "description": "Claim Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Claim details",
                        "schema": {
                            "$ref": "#/definitions/ClaimDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch claim",
                "tags": [
                    "Claims"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/claims/{id}/reversals": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Claim Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Claim Reversal creation request",
                        "schema": {
                            "$ref": "#/definitions/ClaimReversalCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Claim Reversal creation response",
                        "schema": {
                            "$ref": "#/definitions/ClaimReversalDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Claim Reversal creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create Claim Reversal",
                "tags": [
                    "Claims"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/claims/{id}/reversals/{reversalId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Claim Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Claim Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Claim Reversal details",
                        "schema": {
                            "$ref": "#/definitions/ClaimReversalDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Fetch Claim Reversal",
                "tags": [
                    "Claims"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/claims/{id}/reversals/{reversalId}/submissions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Claim Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Claim Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Claim Reversal Submission creation request",
                        "schema": {
                            "$ref": "#/definitions/ClaimReversalSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Claim Reversal Submission creation response",
                        "schema": {
                            "$ref": "#/definitions/ClaimReversalSubmissionDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Claim Reversal creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create Claim Reversal Submission",
                "tags": [
                    "Claims"
                ],
                "x-access": "Public"
            }
        },
        "/transaction/claims/{id}/reversals/{reversalId}/submissions/{submissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Claim Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Claim Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Claim Reversal Submission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "submissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Claim Reversal Submission details",
                        "schema": {
                            "$ref": "#/definitions/ClaimReversalSubmissionDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Fetch Claim Reversal Submission",
                "tags": [
                    "Claims"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/claims/{id}/submissions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Claim Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Claim Submission creation request",
                        "schema": {
                            "$ref": "#/definitions/ClaimSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Claim Submission creation response",
                        "schema": {
                            "$ref": "#/definitions/ClaimSubmissionDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Claim Submission creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create Claim Submission",
                "tags": [
                    "Claims"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/claims/{id}/submissions/{submissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Claim Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Claim Submission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "submissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Claim Submission details",
                        "schema": {
                            "$ref": "#/definitions/ClaimSubmissionDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Fetch Claim Submission",
                "tags": [
                    "Claims"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits": {
            "get": {
                "parameters": [
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "pattern": "$[A-z0-9]{4}^",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Filter by organisation id",
                        "in": "query",
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "name": "filter[organisation_id]",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[created_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[created_date_to]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[modified_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[modified_date_to]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[debtor_party.account_number]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[debtor_party.bank_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[beneficiary_party.account_number]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[beneficiary_party.bank_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[currency]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[payment_scheme]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[payment_type]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date",
                        "in": "query",
                        "name": "filter[processing_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date",
                        "in": "query",
                        "name": "filter[processing_date_to]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[clearing_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[admission.admission_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[admission.admission_date_to]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by admission status",
                        "in": "query",
                        "name": "filter[admission.status]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by admission scheme status code",
                        "in": "query",
                        "name": "filter[admission.scheme_status_code]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by amount",
                        "in": "query",
                        "name": "filter[amount]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by reference",
                        "in": "query",
                        "name": "filter[reference]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by unique scheme id",
                        "in": "query",
                        "name": "filter[unique_scheme_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[submission.submission_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[submission.submission_date_to]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by submission status",
                        "in": "query",
                        "name": "filter[submission.status]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by submission scheme status code",
                        "in": "query",
                        "name": "filter[submission.scheme_status_code]",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of direct debit details",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitDetailsListResponse"
                        }
                    }
                },
                "summary": "List direct debits",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Direct Debit creation request",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Direct Debit creation response",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Direct Debit creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create Direct debit",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/health": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Direct debit service health",
                        "schema": {
                            "$ref": "#/definitions/Health"
                        }
                    }
                },
                "summary": "Fetch direct debit service health",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}": {
            "get": {
                "parameters": [
                    {
                        "description": "Direct Debit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Direct Debit details",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch direct debit",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Direct Debit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Direct Debit Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Direct Debit Admission details",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitAdmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch Direct Debit Admission",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/returns": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "DirectDebit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Return creation request",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReturnCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Return creation response",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReturnCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Return creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create direct debit return",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/returns/{returnId}": {
            "get": {
                "parameters": [
                    {
                        "description": "DirectDebit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return details",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReturnDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch direct debit return",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/returns/{returnId}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "DirectDebit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reversal admission details",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReturnAdmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch return admission",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/returns/{returnId}/reversals/{reversalId}": {
            "get": {
                "parameters": [
                    {
                        "description": "DirectDebit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reversal reversal details",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReturnReversalDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch return admission",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/returns/{returnId}/reversals/{reversalId}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "DirectDebit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reversal admission details",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReturnReversalAdmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch return admission",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/returns/{returnId}/submissions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "DirectDebit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Return submission creation request",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReturnSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Return submission creation response",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReturnSubmissionCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Return submission creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "create direct debit return submission",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/returns/{returnId}/submissions/{submissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "DirectDebit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Submission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "submissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return submission details",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReturnSubmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch return submission",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/reversals": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "DirectDebit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Reversal creation request",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReversalCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Reversal creation response",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReversalCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Reversal creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create direct debit reversal",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/reversals/{reversalId}": {
            "get": {
                "parameters": [
                    {
                        "description": "DirectDebit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reversal details",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReversalDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch direct debit reversal",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/reversals/{reversalId}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "DirectDebit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reversal admission details",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReversalAdmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch reversal admission",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/submissions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "DirectDebit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Direct debit submission creation request",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Direct debit submission creation response",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitSubmissionCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Return submission creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create direct debit submission",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/submissions/{submissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "DirectDebit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Submission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "submissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Direct debit submission details",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitSubmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Get direct debit submission",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/mandates": {
            "get": {
                "parameters": [
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "pattern": "$[A-z0-9]{4}^",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Filter by organisation id",
                        "in": "query",
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "name": "filter[organisation_id]",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "filter[debtor_party.account_number]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[debtor_party.bank_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[beneficiary_party.account_number]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[beneficiary_party.bank_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[currency]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[payment_scheme]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[payment_type]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date",
                        "in": "query",
                        "name": "filter[processing_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date",
                        "in": "query",
                        "name": "filter[processing_date_to]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date",
                        "in": "query",
                        "name": "filter[scheme_processing_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date",
                        "in": "query",
                        "name": "filter[scheme_processing_date_to]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[clearing_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[admission.admission_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[admission.admission_date_to]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by admission status",
                        "in": "query",
                        "name": "filter[admission.status]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by admission scheme status code",
                        "in": "query",
                        "name": "filter[admission.scheme_status_code]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by amount",
                        "in": "query",
                        "name": "filter[amount]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by reference",
                        "in": "query",
                        "name": "filter[reference]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by unique scheme id",
                        "in": "query",
                        "name": "filter[unique_scheme_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Include old versions of mandates",
                        "in": "query",
                        "name": "filter[all_versions]",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[submission.submission_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[submission.submission_date_to]",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of mandates details",
                        "schema": {
                            "$ref": "#/definitions/MandateDetailsListResponse"
                        }
                    }
                },
                "summary": "List mandates",
                "tags": [
                    "Mandates"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Mandate creation request",
                        "schema": {
                            "$ref": "#/definitions/MandateCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Mandate creation response",
                        "schema": {
                            "$ref": "#/definitions/MandateCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Mandate creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create Mandate",
                "tags": [
                    "Mandates"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/mandates/health": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Mandate service health",
                        "schema": {
                            "$ref": "#/definitions/Health"
                        }
                    }
                },
                "summary": "Fetch mandate service health",
                "tags": [
                    "Mandates"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/mandates/{id}": {
            "get": {
                "parameters": [
                    {
                        "description": "Mandate Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mandate details",
                        "schema": {
                            "$ref": "#/definitions/MandateDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch mandate",
                "tags": [
                    "Mandates"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "patch": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Mandate Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Mandate amendment",
                        "schema": {
                            "$ref": "#/definitions/MandateAmendment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mandate details",
                        "schema": {
                            "$ref": "#/definitions/MandateDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Mandate update error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Update mandate",
                "tags": [
                    "Mandates"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/mandates/{id}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Mandate Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Mandate Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mandate Admission details",
                        "schema": {
                            "$ref": "#/definitions/MandateAdmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch Mandate Admission",
                "tags": [
                    "Mandates"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/mandates/{id}/returns": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Mandate Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Return creation request",
                        "schema": {
                            "$ref": "#/definitions/MandateReturnCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Return creation response",
                        "schema": {
                            "$ref": "#/definitions/MandateReturnCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Return creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create mandate return",
                "tags": [
                    "Mandates"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/mandates/{id}/returns/{returnId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Mandate Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return details",
                        "schema": {
                            "$ref": "#/definitions/MandateReturnDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch mandate return",
                "tags": [
                    "Mandates"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/mandates/{id}/returns/{returnId}/submissions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Mandate Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Return submission creation request",
                        "schema": {
                            "$ref": "#/definitions/MandateReturnSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Return submission creation response",
                        "schema": {
                            "$ref": "#/definitions/MandateReturnSubmissionCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Return submission creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create mandate return submission",
                "tags": [
                    "Mandates"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/mandates/{id}/returns/{returnId}/submissions/{submissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Mandate Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Submission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "submissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return submission details",
                        "schema": {
                            "$ref": "#/definitions/MandateReturnSubmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch return submission",
                "tags": [
                    "Mandates"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/mandates/{id}/submissions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Mandate Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Mandate Submission creation request",
                        "schema": {
                            "$ref": "#/definitions/MandateSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Mandate Submission creation response",
                        "schema": {
                            "$ref": "#/definitions/MandateSubmissionDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Mandate Submission creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create Mandate Submission",
                "tags": [
                    "Mandates"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/mandates/{id}/submissions/{submissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Mandate Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Mandate Submission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "submissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mandate Submission details",
                        "schema": {
                            "$ref": "#/definitions/MandateSubmissionDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Fetch Mandate Submission",
                "tags": [
                    "Mandates"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments": {
            "get": {
                "parameters": [
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "pattern": "$[A-z0-9]{4}^",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Filter by organisation id",
                        "in": "query",
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "name": "filter[organisation_id]",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "filter[debtor_party.account_number]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[debtor_party.bank_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[beneficiary_party.account_number]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[beneficiary_party.bank_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[currency]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[scheme_transaction_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[payment_scheme]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[payment_type]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date",
                        "in": "query",
                        "name": "filter[processing_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date",
                        "in": "query",
                        "name": "filter[processing_date_to]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[unique_scheme_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[amount]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[reference]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[submission.submission_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[submission.submission_date_to]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by submission status",
                        "in": "query",
                        "name": "filter[submission.status]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by submission scheme status code",
                        "in": "query",
                        "name": "filter[submission.scheme_status_code]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[admission.admission_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[admission.admission_date_to]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by admission status",
                        "in": "query",
                        "name": "filter[admission.status]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by admission scheme status code",
                        "in": "query",
                        "name": "filter[admission.scheme_status_code]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "csv",
                        "description": "Filter for payments containing all of the requested relationships",
                        "in": "query",
                        "items": {
                            "enum": [
                                "payment_submissions",
                                "payment_admissions",
                                "reversals",
                                "recalls",
                                "returns",
                                "payment_advices"
                            ],
                            "type": "string"
                        },
                        "name": "filter[relationships]",
                        "required": false,
                        "type": "array"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of payment details",
                        "schema": {
                            "$ref": "#/definitions/PaymentDetailsListResponse"
                        }
                    }
                },
                "summary": "List payments",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Payment creation request",
                        "schema": {
                            "$ref": "#/definitions/PaymentCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Payment creation response",
                        "schema": {
                            "$ref": "#/definitions/PaymentCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Payment creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create payment",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public",
                    "FPS",
                    "Bacs",
                    "SEPA"
                ]
            }
        },
        "/transaction/payments/health": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Payment service health",
                        "schema": {
                            "$ref": "#/definitions/Health"
                        }
                    }
                },
                "summary": "Fetch payment service health",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment details",
                        "schema": {
                            "$ref": "#/definitions/PaymentDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch payment",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admission details",
                        "schema": {
                            "$ref": "#/definitions/PaymentAdmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch admission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/advices": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Advice creation request",
                        "schema": {
                            "$ref": "#/definitions/AdviceCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Advice creation response",
                        "schema": {
                            "$ref": "#/definitions/AdviceCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Advice creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create advice",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/advices/{adviceId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Advice Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "adviceId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Advice details",
                        "schema": {
                            "$ref": "#/definitions/AdviceDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch advice",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/advices/{adviceId}/submissions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Advice Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "adviceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Advice submission creation request",
                        "schema": {
                            "$ref": "#/definitions/AdviceSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Advice submission creation response",
                        "schema": {
                            "$ref": "#/definitions/AdviceSubmissionCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Advice submission creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "create advice submission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/advices/{adviceId}/submissions/{submissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Advice Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "adviceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Submission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "submissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Advice submission details",
                        "schema": {
                            "$ref": "#/definitions/AdviceSubmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch advice submission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/recalls": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Recall creation request",
                        "schema": {
                            "$ref": "#/definitions/RecallCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Recall creation response",
                        "schema": {
                            "$ref": "#/definitions/RecallCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Recall creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create recall",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/recalls/{recallId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Recall Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "recallId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recall details",
                        "schema": {
                            "$ref": "#/definitions/RecallDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch recall",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/recalls/{recallId}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Recall Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "recallId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recall admission details",
                        "schema": {
                            "$ref": "#/definitions/RecallAdmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch recall admission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/recalls/{recallId}/decisions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Recall Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "recallId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Recall decision creation request",
                        "schema": {
                            "$ref": "#/definitions/RecallDecisionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Recall decision creation response",
                        "schema": {
                            "$ref": "#/definitions/RecallDecisionCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Recall decision creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create recall decision",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/recalls/{recallId}/decisions/{decisionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Recall Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "recallId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Decision Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "decisionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recall decision details",
                        "schema": {
                            "$ref": "#/definitions/RecallDecisionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch recall decision",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/recalls/{recallId}/decisions/{decisionId}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Recall Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "recallId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Decision Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "decisionId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recall decision admission details",
                        "schema": {
                            "$ref": "#/definitions/RecallDecisionAdmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch recall decision admission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/recalls/{recallId}/decisions/{decisionId}/submissions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Recall Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "recallId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Decision Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "decisionId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Recall decision submission creation request",
                        "schema": {
                            "$ref": "#/definitions/RecallDecisionSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Recall decision submission creation response",
                        "schema": {
                            "$ref": "#/definitions/RecallDecisionSubmissionCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Recall decision submission creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "create recall decision submission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/recalls/{recallId}/decisions/{decisionId}/submissions/{submissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Recall Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "recallId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Decision Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "decisionId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Submission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "submissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recall decision submission details",
                        "schema": {
                            "$ref": "#/definitions/RecallDecisionSubmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch recall decision submission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/recalls/{recallId}/reversals/{reversalId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Recall Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "recallId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recall Reversal details",
                        "schema": {
                            "$ref": "#/definitions/RecallReversalDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch recall reversal",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/recalls/{recallId}/reversals/{reversalId}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Recall Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "recallId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reversal admission details",
                        "schema": {
                            "$ref": "#/definitions/RecallReversalAdmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch recall reversal admission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/recalls/{recallId}/submissions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Recall Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "recallId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Recall submission creation request",
                        "schema": {
                            "$ref": "#/definitions/RecallSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Recall submission creation response",
                        "schema": {
                            "$ref": "#/definitions/RecallSubmissionCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Recall submission creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "create recall submission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/recalls/{recallId}/submissions/{submissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Recall Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "recallId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Submission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "submissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recall submission details",
                        "schema": {
                            "$ref": "#/definitions/RecallSubmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch recall submission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/returns": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Return creation request",
                        "schema": {
                            "$ref": "#/definitions/ReturnCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Return creation response",
                        "schema": {
                            "$ref": "#/definitions/ReturnCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Return creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create return",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/returns/{returnId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return details",
                        "schema": {
                            "$ref": "#/definitions/ReturnDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch return",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/returns/{returnId}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return admission details",
                        "schema": {
                            "$ref": "#/definitions/ReturnAdmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch return admission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/returns/{returnId}/reversals": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Return reversal creation request",
                        "schema": {
                            "$ref": "#/definitions/ReturnReversalCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Reversal creation response",
                        "schema": {
                            "$ref": "#/definitions/ReturnReversalCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Reversal creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create return reversal",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/returns/{returnId}/reversals/{reversalId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return reversal details",
                        "schema": {
                            "$ref": "#/definitions/ReturnReversalDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch return reversal",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/returns/{returnId}/reversals/{reversalId}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return reversal admission details",
                        "schema": {
                            "$ref": "#/definitions/ReturnReversalAdmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch return reversal admission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/returns/{returnId}/submissions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Return submission creation request",
                        "schema": {
                            "$ref": "#/definitions/ReturnSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Return submission creation response",
                        "schema": {
                            "$ref": "#/definitions/ReturnSubmissionCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Return submission creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "create return submission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/returns/{returnId}/submissions/{submissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Submission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "submissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return submission details",
                        "schema": {
                            "$ref": "#/definitions/ReturnSubmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch return submission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/reversals": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Reversal creation request",
                        "schema": {
                            "$ref": "#/definitions/ReversalCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Reversal creation response",
                        "schema": {
                            "$ref": "#/definitions/ReversalCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Reversal creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create reversal",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/reversals/{reversalId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reversal details",
                        "schema": {
                            "$ref": "#/definitions/ReversalDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch reversal",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/reversals/{reversalId}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reversal admission details",
                        "schema": {
                            "$ref": "#/definitions/ReversalAdmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch reversal admission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/reversals/{reversalId}/submissions": {
            "post": {
                "consumes": [
                    "application/vnc.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Reversal submission creation request",
                        "schema": {
                            "$ref": "#/definitions/ReversalSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Reversal submission creation response",
                        "schema": {
                            "$ref": "#/definitions/ReversalSubmissionCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Reversal submission creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create reversal submission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/reversals/{reversalId}/submissions/{submissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Submission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "submissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reversal submission details",
                        "schema": {
                            "$ref": "#/definitions/ReversalSubmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch reversal submission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/submissions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Submission creation request",
                        "schema": {
                            "$ref": "#/definitions/PaymentSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Submission creation response",
                        "schema": {
                            "$ref": "#/definitions/PaymentSubmissionCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Submission creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "create submission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/submissions/{submissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Submission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "submissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Submission details",
                        "schema": {
                            "$ref": "#/definitions/PaymentSubmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch submission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        }
    },
    "produces": [
        "application/vnd.api+json",
        "application/json"
    ],
    "responses": {
        "400Error": {
            "description": "Bad request",
            "schema": {
                "$ref": "#/definitions/OBErrorResponse1"
            },
            "x-access": [
                "Public"
            ]
        },
        "401Error": {
            "description": "Unauthorized",
            "x-access": [
                "Public"
            ]
        },
        "403Error": {
            "description": "Forbidden",
            "x-access": [
                "Public"
            ]
        },
        "405Error": {
            "description": "Method Not Allowed",
            "x-access": [
                "Public"
            ]
        },
        "406Error": {
            "description": "Not Acceptable",
            "x-access": [
                "Public"
            ]
        },
        "429Error": {
            "description": "Too Many Requests",
            "headers": {
                "Retry-After": {
                    "description": "Number in seconds to wait",
                    "type": "integer"
                }
            },
            "x-access": [
                "Public"
            ]
        },
        "500Error": {
            "description": "Internal Server Error",
            "schema": {
                "$ref": "#/definitions/OBErrorResponse1"
            },
            "x-access": [
                "Public"
            ]
        },
        "503Error": {
            "description": "Service Unavailable",
            "x-access": [
                "Public"
            ]
        },
        "BadGateway": {
            "description": "Bad Gateway",
            "schema": {
                "$ref": "#/definitions/ApiError"
            }
        },
        "BadRequest": {
            "description": "Bad Request",
            "schema": {
                "$ref": "#/definitions/ApiError"
            }
        },
        "Conflict": {
            "description": "Conflict",
            "schema": {
                "$ref": "#/definitions/ApiError"
            }
        },
        "Forbidden": {
            "description": "Action Forbidden",
            "schema": {
                "$ref": "#/definitions/ApiError"
            }
        },
        "NotFound": {
            "description": "Not Found",
            "schema": {
                "$ref": "#/definitions/ApiError"
            }
        },
        "OBNameVerification1": {
            "description": "Account name verification report",
            "schema": {
                "additionalProperties": false,
                "properties": {
                    "Data": {
                        "properties": {
                            "VerificationReport": {
                                "additionalProperties": false,
                                "description": "Provides the verification report",
                                "properties": {
                                    "Matched": {
                                        "description": "Flag to indicate whether the account details were matched by the API provider",
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "$ref": "#/definitions/AccountName"
                                    },
                                    "ReasonCode": {
                                        "$ref": "#/definitions/ReasonCodes"
                                    }
                                },
                                "required": [
                                    "Matched"
                                ],
                                "type": "object"
                            }
                        },
                        "required": [
                            "VerificationReport"
                        ],
                        "type": "object"
                    },
                    "Links": {
                        "$ref": "#/definitions/Links"
                    },
                    "Meta": {
                        "$ref": "#/definitions/Meta"
                    }
                },
                "required": [
                    "Data"
                ],
                "type": "object"
            },
            "x-access": [
                "Public"
            ]
        },
        "UnexpectedError": {
            "description": "Unexpected Error",
            "schema": {
                "$ref": "#/definitions/ApiError"
            }
        }
    },
    "swagger": "2.0"
}
