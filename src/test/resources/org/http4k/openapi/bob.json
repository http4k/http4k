{
    "basePath": "/v1",
    "info": {
        "title": "Form3 Public API",
        "version": "1"
    },
    "parameters": {
        "Authorization": {
            "description": "An Authorisation Token as per https://tools.ietf.org/html/rfc6750",
            "in": "header",
            "name": "Authorization",
            "required": true,
            "type": "string",
            "x-access": [
                "Public"
            ]
        },
    },
    "paths": {
        "/addressbook/health": {
            "get": {
                "responses": {
                    "200": {
                        "description": "healthy",
                        "schema": {
                            "type": "object"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Get health",
                "tags": [
                    "Addressbook"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/addressbook/parties": {
            "get": {
                "parameters": [
                    {
                        "$ref": "#/parameters/Authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list parties response",
                        "schema": {
                            "$ref": "#/definitions/ListPartiesResponse"
                        }
                    }
                },
                "summary": "List parties",
                "tags": [
                    "Addressbook"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "creation request",
                        "schema": {
                            "$ref": "#/definitions/PartyCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "creation response",
                        "schema": {
                            "$ref": "#/definitions/PartyCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create a party",
                "tags": [
                    "Addressbook"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/addressbook/parties/{id}": {
            "get": {
                "parameters": [
                    {
                        "description": "Id of party",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "party returned",
                        "schema": {
                            "$ref": "#/definitions/PartyGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "404": {
                        "description": "Record not found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Get a party",
                "tags": [
                    "Addressbook"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/addressbook/parties/{id}/accounts/{party_account_id}": {
            "get": {
                "parameters": [
                    {
                        "description": "Id of party",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Id of party account",
                        "format": "uuid",
                        "in": "path",
                        "name": "party_account_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get reponse",
                        "schema": {
                            "$ref": "#/definitions/PartyAccountGetResponse"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "404": {
                        "description": "Record not found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Get a party account",
                "tags": [
                    "Addressbook"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/addressbook/parties/{id}/contacts": {
            "get": {
                "parameters": [
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "pattern": "^(first|last|[\\d]{1,4})$",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 100,
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Id of party",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list contacts response",
                        "schema": {
                            "$ref": "#/definitions/ListContactsResponse"
                        }
                    }
                },
                "summary": "List contacts for party",
                "tags": [
                    "Addressbook"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Id of party",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "creation request",
                        "schema": {
                            "$ref": "#/definitions/ContactCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "creation response",
                        "schema": {
                            "$ref": "#/definitions/ContactCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create a contact",
                "tags": [
                    "Addressbook"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/addressbook/parties/{id}/contacts/{contact_id}": {
            "get": {
                "parameters": [
                    {
                        "description": "Id of party",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Id of contact",
                        "format": "uuid",
                        "in": "path",
                        "name": "contact_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "contact returned",
                        "schema": {
                            "$ref": "#/definitions/ContactGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "404": {
                        "description": "Record not found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Get a contact",
                "tags": [
                    "Addressbook"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/addressbook/parties/{id}/contacts/{contact_id}/accounts": {
            "get": {
                "parameters": [
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "pattern": "^(first|last|[\\d]{1,4})$",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 100,
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Id of party",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Id of party",
                        "format": "uuid",
                        "in": "path",
                        "name": "contact_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "list contact accounts response",
                        "schema": {
                            "$ref": "#/definitions/ListContactAccountsResponse"
                        }
                    }
                },
                "summary": "List contacts accounts for contact",
                "tags": [
                    "Addressbook"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Id of party",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Id of Contact",
                        "format": "uuid",
                        "in": "path",
                        "name": "contact_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "creation request",
                        "schema": {
                            "$ref": "#/definitions/ContactAccountCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "creation response",
                        "schema": {
                            "$ref": "#/definitions/ContactAccountCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create a contact account",
                "tags": [
                    "Addressbook"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/addressbook/parties/{id}/contacts/{contact_id}/accounts/{contact_account_id}": {
            "get": {
                "parameters": [
                    {
                        "description": "Id of party",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Id of Contact",
                        "format": "uuid",
                        "in": "path",
                        "name": "contact_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Id of Contact",
                        "format": "uuid",
                        "in": "path",
                        "name": "contact_account_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "version",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "get contact account response",
                        "schema": {
                            "$ref": "#/definitions/ContactAccountGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "404": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Get a contact account",
                "tags": [
                    "Addressbook"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/audit/entries/health": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Audit service health",
                        "schema": {
                            "$ref": "#/definitions/Health"
                        }
                    }
                },
                "summary": "Fetch audit service health",
                "tags": [
                    "Audit"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/audit/entries/{record_type}": {
            "get": {
                "parameters": [
                    {
                        "description": "Record Type",
                        "in": "path",
                        "name": "record_type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "collectionFormat": "csv",
                        "description": "Filter by organisation id",
                        "in": "query",
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "name": "filter[organisation_id]",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[action_time_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[action_time_to]",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Audit details",
                        "schema": {
                            "$ref": "#/definitions/AuditEntryListResponse"
                        }
                    }
                },
                "summary": "List audit entries for this record type",
                "tags": [
                    "Audit"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/audit/entries/{record_type}/{id}": {
            "get": {
                "parameters": [
                    {
                        "description": "Record Type",
                        "in": "path",
                        "name": "record_type",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Record Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Audit details",
                        "schema": {
                            "$ref": "#/definitions/AuditEntryListResponse"
                        }
                    }
                },
                "summary": "Fetch audit entry list for this record type/id",
                "tags": [
                    "Audit"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/fx/deals": {
            "get": {
                "parameters": [
                    {
                        "description": "The organisations to filter on",
                        "in": "query",
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "name": "filter[organisation_id]",
                        "type": "array"
                    },
                    {
                        "description": "The Party for which to see FX Deals",
                        "format": "uuid",
                        "in": "query",
                        "name": "filter[party_id]",
                        "type": "string"
                    },
                    {
                        "description": "The processing date from which, inclusively, to find FX Deals",
                        "format": "date",
                        "in": "query",
                        "name": "filter[processing_date_from]",
                        "type": "string"
                    },
                    {
                        "description": "The processing date until which, inclusively, to find FX Deals",
                        "format": "date",
                        "in": "query",
                        "name": "filter[processing_date_to]",
                        "type": "string"
                    },
                    {
                        "description": "The source currency, for example GBP",
                        "in": "query",
                        "name": "filter[source.currency]",
                        "type": "string"
                    },
                    {
                        "description": "The target currency, for example GBP",
                        "in": "query",
                        "name": "filter[target.currency]",
                        "type": "string"
                    },
                    {
                        "description": "The amount of currency to sell",
                        "in": "query",
                        "name": "filter[source.amount]",
                        "type": "string"
                    },
                    {
                        "description": "The amount of currency to buy",
                        "in": "query",
                        "name": "filter[target.amount]",
                        "type": "string"
                    },
                    {
                        "description": "The type of foreign exchange",
                        "enum": [
                            "spot",
                            "forward"
                        ],
                        "in": "query",
                        "name": "filter[type]",
                        "type": "string"
                    },
                    {
                        "description": "Reference of the FX Deal Submission associated to look for",
                        "in": "query",
                        "name": "filter[submission.reference]",
                        "type": "string"
                    },
                    {
                        "description": "Status of the FX Deal Submission associated to look for",
                        "in": "query",
                        "name": "filter[submission.status]",
                        "type": "string"
                    },
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "pattern": "$[A-z0-9]{4}^",
                        "type": "string"
                    },
                    {
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FX Deals response",
                        "schema": {
                            "$ref": "#/definitions/FXDealsListResponse"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/responses/Forbidden"
                    },
                    "502": {
                        "$ref": "#/responses/BadGateway"
                    },
                    "default": {
                        "$ref": "#/responses/UnexpectedError"
                    }
                },
                "summary": "Get FX Deals",
                "tags": [
                    "fx_api"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "creation request",
                        "schema": {
                            "$ref": "#/definitions/FXDealCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "creation response",
                        "schema": {
                            "$ref": "#/definitions/FXDealResponse"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/responses/Forbidden"
                    },
                    "409": {
                        "$ref": "#/responses/Conflict"
                    },
                    "502": {
                        "$ref": "#/responses/BadGateway"
                    },
                    "default": {
                        "$ref": "#/responses/UnexpectedError"
                    }
                },
                "summary": "Create an FX Deal",
                "tags": [
                    "fx_api"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/fx/deals/{fx_deal_id}": {
            "get": {
                "parameters": [
                    {
                        "description": "FX Deal ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "fx_deal_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "fx deal response",
                        "schema": {
                            "$ref": "#/definitions/FXDealResponse"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/responses/NotFound"
                    },
                    "502": {
                        "$ref": "#/responses/BadGateway"
                    },
                    "default": {
                        "$ref": "#/responses/UnexpectedError"
                    }
                },
                "summary": "Fetch an FX Deal",
                "tags": [
                    "fx_api"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/fx/deals/{fx_deal_id}/submissions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "The ID of the FX Deal to submit",
                        "in": "path",
                        "name": "fx_deal_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "creation request",
                        "schema": {
                            "$ref": "#/definitions/FXDealSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "creation response",
                        "schema": {
                            "$ref": "#/definitions/FXDealSubmissionResponse"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/responses/NotFound"
                    },
                    "409": {
                        "$ref": "#/responses/Conflict"
                    },
                    "502": {
                        "$ref": "#/responses/BadGateway"
                    },
                    "default": {
                        "$ref": "#/responses/UnexpectedError"
                    }
                },
                "summary": "Create an FX Deal Submission",
                "tags": [
                    "fx_api"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/fx/deals/{fx_deal_id}/submissions/{fx_deal_submission_id}": {
            "get": {
                "parameters": [
                    {
                        "description": "FX Deal ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "fx_deal_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "FX Deal submission ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "fx_deal_submission_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "fx deal submission response",
                        "schema": {
                            "$ref": "#/definitions/FXDealSubmissionResponse"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/responses/NotFound"
                    },
                    "502": {
                        "$ref": "#/responses/BadGateway"
                    },
                    "default": {
                        "$ref": "#/responses/UnexpectedError"
                    }
                },
                "summary": "Fetch an FX Deal Submission",
                "tags": [
                    "fx_api"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "patch": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "FX Deal ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "fx_deal_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "FX Deal submission ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "fx_deal_submission_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "patchBody",
                        "schema": {
                            "$ref": "#/definitions/FxDealSubmissionAmendment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "creation response",
                        "schema": {
                            "$ref": "#/definitions/FXDealSubmissionResponse"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/responses/Forbidden"
                    },
                    "404": {
                        "$ref": "#/responses/NotFound"
                    },
                    "502": {
                        "$ref": "#/responses/BadGateway"
                    },
                    "default": {
                        "$ref": "#/responses/UnexpectedError"
                    }
                },
                "summary": "Create an FX Deal Submission",
                "tags": [
                    "fx_api"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/fx/rates": {
            "get": {
                "parameters": [
                    {
                        "description": "The party we want to get the FX rate for",
                        "in": "query",
                        "name": "filter[party_id]",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The currency the party wants to sell",
                        "in": "query",
                        "name": "filter[source.currency]",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The currency the party wants to buy",
                        "in": "query",
                        "name": "filter[target.currency]",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The amount of currency to sell",
                        "in": "query",
                        "name": "filter[source.amount]",
                        "type": "string"
                    },
                    {
                        "description": "The amount of currency to buy",
                        "in": "query",
                        "name": "filter[target.amount]",
                        "type": "string"
                    },
                    {
                        "description": "Type of foreign exchange",
                        "enum": [
                            "spot",
                            "forward"
                        ],
                        "in": "query",
                        "name": "filter[type]",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "The date for which the rate would be valid",
                        "format": "date",
                        "in": "query",
                        "name": "filter[processing_date]",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "FX rates response",
                        "schema": {
                            "$ref": "#/definitions/FXRatesListResponse"
                        }
                    },
                    "400": {
                        "$ref": "#/responses/BadRequest"
                    },
                    "403": {
                        "$ref": "#/responses/Forbidden"
                    },
                    "502": {
                        "$ref": "#/responses/BadGateway"
                    },
                    "default": {
                        "$ref": "#/responses/UnexpectedError"
                    }
                },
                "summary": "Get FX rates",
                "tags": [
                    "fx_api"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/notification/reports": {
            "get": {
                "parameters": [
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "pattern": "^(first|last|[\\d]{1,4})$",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 100,
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Filter by organisation Ids",
                        "in": "query",
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "name": "filter[organisation_id]",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "description": "Filter bu ReportType",
                        "in": "query",
                        "name": "filter[report_type]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by Report Type Description",
                        "in": "query",
                        "name": "filter[report_type_description]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by Report Source",
                        "in": "query",
                        "name": "filter[report_source]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Request reports created after specific date time",
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[created_on_after]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Request reports created after specific date time",
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[created_on_before]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Request reports modified after specific date time",
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[modified_on_after]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Request reports modified before specific date time",
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[modified_on_before]",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of reports",
                        "schema": {
                            "$ref": "#/definitions/ReportDetailsListResponse"
                        }
                    },
                    "400": {
                        "description": "Reports bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "List reports",
                "tags": [
                    "Reports"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/notification/reports/{id}": {
            "get": {
                "parameters": [
                    {
                        "description": "Report ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Acceptable Format",
                        "in": "header",
                        "name": "Accept",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report details",
                        "schema": {
                            "$ref": "#/definitions/ReportDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "404": {
                        "description": "Report Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "406": {
                        "description": "Report not available in acceptable format",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Get report by ID",
                "tags": [
                    "Reports"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/notification/reports/{id}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Report Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Report Admission ID",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get report admission by Id",
                        "schema": {
                            "$ref": "#/definitions/ReportAdmissionDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Get Report Admission by ID",
                "tags": [
                    "Reports"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/notification/schememessages": {
            "get": {
                "parameters": [
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "pattern": "^(first|last|[\\d]{1,4})$",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "default": 100,
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Filter by Unique SchemeId",
                        "in": "query",
                        "name": "filter[unique_scheme_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by Scheme Message Type",
                        "in": "query",
                        "name": "filter[scheme_message_type]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by Payment Scheme",
                        "in": "query",
                        "name": "filter[payment_scheme]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by Admission DateTime",
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[admission.admission_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by Admission DateTime",
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[admission.admission_date_to]",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of scheme messages",
                        "schema": {
                            "$ref": "#/definitions/SchemeMessageDetailsListResponse"
                        }
                    },
                    "400": {
                        "description": "Scheme Message bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "List messages",
                "tags": [
                    "SchemeMessages"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/notification/schememessages/{id}": {
            "get": {
                "parameters": [
                    {
                        "description": "Scheme Message Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Scheme Message details",
                        "schema": {
                            "$ref": "#/definitions/SchemeMessageDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Scheme Message bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "404": {
                        "description": "Scheme Message Not found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Fetch message",
                "tags": [
                    "SchemeMessages"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/notification/schememessages/{id}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Scheme Message Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Scheme Message Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Get scheme message admission by Id",
                        "schema": {
                            "$ref": "#/definitions/SchemeMessageAdmissionDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Scheme Message Admission by Id bad request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "404": {
                        "description": "Scheme Message Not found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Get Scheme Message Admission By AdmissionId",
                "tags": [
                    "SchemeMessages"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/notification/subscriptions": {
            "get": {
                "parameters": [
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "pattern": "$[A-z0-9]{4}^",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "collectionFormat": "csv",
                        "description": "Filter by event type",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "filter[event_type]",
                        "required": false,
                        "type": "array"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of subscription details",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionDetailsListResponse"
                        }
                    }
                },
                "summary": "List all subscriptions",
                "tags": [
                    "Subscriptions"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Subscription creation request",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/SubscriptionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Subscription creation response",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionCreationResponse"
                        }
                    }
                },
                "summary": "Create subscription",
                "tags": [
                    "Subscriptions"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/notification/subscriptions/health": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Notification service health",
                        "schema": {
                            "$ref": "#/definitions/Health"
                        }
                    }
                },
                "summary": "Fetch notification service health",
                "tags": [
                    "Subscriptions"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/notification/subscriptions/{id}": {
            "delete": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Subscription Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Version",
                        "in": "query",
                        "minimum": 0,
                        "name": "version",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Subscription deleted OK. No body content will be returned"
                    }
                },
                "summary": "Deletes a subscription",
                "tags": [
                    "Subscriptions"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "description": "Subscription Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription details",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch subscription",
                "tags": [
                    "Subscriptions"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "patch": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Subscription Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Subscription update request",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionAmendment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Subscription details",
                        "schema": {
                            "$ref": "#/definitions/SubscriptionDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    },
                    "500": {
                        "description": "Internal Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Update subscription details",
                "tags": [
                    "Subscriptions"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/oauth2/token": {
            "post": {
                "consumes": [
                    "application/x-www-form-urlencoded"
                ],
                "parameters": [
                    {
                        "description": "Value MUST be set to \"client_credentials\" as per RFC",
                        "enum": [
                            "client_credentials"
                        ],
                        "in": "formData",
                        "name": "grant_type",
                        "required": true,
                        "type": "string"
                    }
                ],
                "produces": [
                    "application/json"
                ],
                "responses": {
                    "200": {
                        "description": "Authorisation token (Bearer)",
                        "schema": {
                            "$ref": "#/definitions/Token"
                        }
                    },
                    "403": {
                        "description": "Authentication failed"
                    }
                },
                "security": [
                    {
                        "Basic": []
                    }
                ],
                "summary": "Request Access Token",
                "tags": [
                    "Oauth2"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/openbanking/accounts/name-verification": {
            "post": {
                "description": "Lookup the account details by way of a POST to find the payee. Return a match indicator, reason code and correct account name (in the event of a close match)\n",
                "operationId": "AccountVerification",
                "parameters": [
                    {
                        "$ref": "#/parameters/OBNameVerificationRequest1"
                    },
                    {
                        "$ref": "#/parameters/Authorization"
                    }
                ],
                "responses": {
                    "200": {
                        "$ref": "#/responses/OBNameVerification1"
                    },
                    "400": {
                        "$ref": "#/responses/400Error"
                    },
                    "401": {
                        "$ref": "#/responses/401Error"
                    },
                    "403": {
                        "$ref": "#/responses/403Error"
                    },
                    "405": {
                        "$ref": "#/responses/405Error"
                    },
                    "406": {
                        "$ref": "#/responses/406Error"
                    },
                    "429": {
                        "$ref": "#/responses/429Error"
                    },
                    "500": {
                        "$ref": "#/responses/500Error"
                    },
                    "503": {
                        "$ref": "#/responses/503Error"
                    }
                },
                "security": [
                    {
                        "IntraFIOAuth2Security": [
                            "name-verification"
                        ]
                    }
                ],
                "summary": "Account name verification endpoint",
                "tags": [
                    "Account Name Verification"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/openbanking/participants": {
            "get": {
                "parameters": [
                    {
                        "description": "Sort code",
                        "in": "query",
                        "minimum": 0,
                        "name": "filter[sort_code]",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Participant information",
                        "schema": {
                            "$ref": "#/definitions/ParticipantResponse"
                        }
                    },
                    "404": {
                        "description": "Participant not found"
                    }
                },
                "summary": "Get participant information",
                "tags": [
                    "Participants"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/organisation/accounts": {
            "get": {
                "parameters": [
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "name": "page[number]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "collectionFormat": "csv",
                        "description": "Filter by organisation id",
                        "in": "query",
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "name": "filter[organisation_id]",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "collectionFormat": "csv",
                        "description": "Filter by type of bank id e.g. \"GBDSC\"",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "filter[bank_id_code]",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "collectionFormat": "csv",
                        "description": "Filter by bank id e.g. sort code or bic",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "filter[bank_id]",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "collectionFormat": "csv",
                        "description": "Filter by account number",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "filter[account_number]",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "collectionFormat": "csv",
                        "description": "Filter by country e.g. FR,GB",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "filter[country]",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "collectionFormat": "csv",
                        "description": "Filter by customer_id",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "filter[customer_id]",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "collectionFormat": "csv",
                        "description": "Filter by IBAN",
                        "in": "query",
                        "items": {
                            "type": "string"
                        },
                        "name": "filter[iban]",
                        "required": false,
                        "type": "array"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of account details",
                        "schema": {
                            "$ref": "#/definitions/AccountDetailsListResponse"
                        }
                    }
                },
                "summary": "List accounts",
                "tags": [
                    "Accounts"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Account creation request",
                        "schema": {
                            "$ref": "#/definitions/AccountCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Account creation response",
                        "schema": {
                            "$ref": "#/definitions/AccountCreationResponse"
                        }
                    }
                },
                "summary": "Create account",
                "tags": [
                    "Accounts"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/organisation/accounts/{id}": {
            "delete": {
                "parameters": [
                    {
                        "description": "Account Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Version",
                        "in": "query",
                        "minimum": 0,
                        "name": "version",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Account deleted"
                    }
                },
                "summary": "Delete account",
                "tags": [
                    "Accounts"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "description": "Account Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account details",
                        "schema": {
                            "$ref": "#/definitions/AccountDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch account",
                "tags": [
                    "Accounts"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "patch": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Account Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "account amend request",
                        "schema": {
                            "$ref": "#/definitions/AccountAmendment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account updated",
                        "schema": {
                            "$ref": "#/definitions/AccountDetailsResponse"
                        }
                    }
                },
                "summary": "Amend account",
                "tags": [
                    "Accounts"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/organisation/accounts/{id}/events": {
            "get": {
                "parameters": [
                    {
                        "description": "Account Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "name": "page[number]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Account event list",
                        "schema": {
                            "$ref": "#/definitions/AccountEventListResponse"
                        }
                    }
                },
                "summary": "Fetch account events",
                "tags": [
                    "Accounts"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/organisation/balances": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Associations details",
                        "schema": {
                            "$ref": "#/definitions/BalanceDetailsListResponse"
                        }
                    }
                },
                "summary": "Fetch all account balances at Starling",
                "tags": [
                    "Balances"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/organisation/positions": {
            "get": {
                "responses": {
                    "200": {
                        "description": "List of position details",
                        "schema": {
                            "$ref": "#/definitions/PositionDetailsListResponse"
                        }
                    }
                },
                "summary": "List Positions",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/organisation/units": {
            "get": {
                "parameters": [
                    {
                        "description": "Child org id",
                        "format": "uuid",
                        "in": "query",
                        "name": "filter[child_organisation_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Organisation ids",
                        "in": "query",
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "name": "filter[organisation_ids]",
                        "required": false,
                        "type": "array"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of organisation details",
                        "schema": {
                            "$ref": "#/definitions/OrganisationDetailsListResponse"
                        }
                    }
                },
                "summary": "List all organisations",
                "tags": [
                    "Organisations"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Organisation creation request",
                        "schema": {
                            "$ref": "#/definitions/OrganisationCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Organisation creation response",
                        "schema": {
                            "$ref": "#/definitions/OrganisationCreationResponse"
                        }
                    }
                },
                "summary": "Create organisation",
                "tags": [
                    "Organisations"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/organisation/units/health": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Organisation service health",
                        "schema": {
                            "$ref": "#/definitions/Health"
                        }
                    }
                },
                "summary": "Fetch organisation service health",
                "tags": [
                    "Organisations"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/organisation/units/{id}": {
            "get": {
                "parameters": [
                    {
                        "description": "Organisation Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organisation details",
                        "schema": {
                            "$ref": "#/definitions/OrganisationDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch organisation",
                "tags": [
                    "Organisations"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "patch": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Organisation Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Organisation update request",
                        "schema": {
                            "$ref": "#/definitions/OrganisationUpdate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Organisation details",
                        "schema": {
                            "$ref": "#/definitions/OrganisationDetailsResponse"
                        }
                    }
                },
                "summary": "Update organisation",
                "tags": [
                    "Organisations"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/security/roles": {
            "get": {
                "parameters": [
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of role details",
                        "schema": {
                            "$ref": "#/definitions/RoleDetailsListResponse"
                        }
                    }
                },
                "summary": "List all roles",
                "tags": [
                    "Roles"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Role creation request",
                        "schema": {
                            "$ref": "#/definitions/RoleCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Role creation response",
                        "schema": {
                            "$ref": "#/definitions/RoleCreationResponse"
                        }
                    }
                },
                "summary": "Create role",
                "tags": [
                    "Roles"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/security/roles/{role_id}": {
            "delete": {
                "parameters": [
                    {
                        "description": "Role Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "role_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Version",
                        "in": "query",
                        "minimum": 0,
                        "name": "version",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Role deleted"
                    }
                },
                "summary": "Delete role",
                "tags": [
                    "Roles"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "description": "Role Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "role_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Role details",
                        "schema": {
                            "$ref": "#/definitions/RoleDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch role",
                "tags": [
                    "Roles"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/security/roles/{role_id}/aces": {
            "get": {
                "parameters": [
                    {
                        "description": "Role Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "role_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of ACE details",
                        "schema": {
                            "$ref": "#/definitions/AceDetailsListResponse"
                        }
                    }
                },
                "summary": "List all Access Controls for role",
                "tags": [
                    "ACE"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Role Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "role_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "ACE creation request",
                        "schema": {
                            "$ref": "#/definitions/AceCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "ACE creation response",
                        "schema": {
                            "$ref": "#/definitions/AceCreationResponse"
                        }
                    }
                },
                "summary": "Create Access Control Entry",
                "tags": [
                    "ACE"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/security/roles/{role_id}/aces/{ace_id}": {
            "delete": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Role Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "role_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Ace Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "ace_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "ACE deleted OK"
                    }
                },
                "summary": "Delete Access Control Entry",
                "tags": [
                    "ACE"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "description": "Role Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "role_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Ace Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "ace_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "ACE details",
                        "schema": {
                            "$ref": "#/definitions/AceDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch Access Control Entry",
                "tags": [
                    "ACE"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/security/users": {
            "get": {
                "parameters": [
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of user details",
                        "schema": {
                            "$ref": "#/definitions/UserDetailsListResponse"
                        }
                    }
                },
                "summary": "List all users",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "User creation request",
                        "schema": {
                            "$ref": "#/definitions/UserCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "User creation response",
                        "schema": {
                            "$ref": "#/definitions/UserCreationResponse"
                        }
                    }
                },
                "summary": "Create user",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/security/users/health": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Security service health",
                        "schema": {
                            "$ref": "#/definitions/Health"
                        }
                    }
                },
                "summary": "Fetch security service health",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/security/users/{user_id}": {
            "delete": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "User Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Version",
                        "in": "query",
                        "minimum": 0,
                        "name": "version",
                        "required": true,
                        "type": "integer"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User deleted"
                    }
                },
                "summary": "Delete user",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "get": {
                "parameters": [
                    {
                        "description": "User Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "schema": {
                            "$ref": "#/definitions/UserDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch user",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "patch": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "User Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "User update request",
                        "schema": {
                            "$ref": "#/definitions/UserCreation"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "schema": {
                            "$ref": "#/definitions/UserDetailsResponse"
                        }
                    }
                },
                "summary": "Edit user details",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/security/users/{user_id}/aces": {
            "get": {
                "parameters": [
                    {
                        "description": "User Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Record type",
                        "in": "query",
                        "name": "filter[record_type]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Access action",
                        "in": "query",
                        "name": "filter[action]",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of access control entries for this user",
                        "schema": {
                            "$ref": "#/definitions/AceDetailsListResponse"
                        }
                    }
                },
                "summary": "Get access control list for user",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/security/users/{user_id}/credentials": {
            "get": {
                "parameters": [
                    {
                        "description": "User Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of credentials for user",
                        "schema": {
                            "$ref": "#/definitions/UserCredentialListResponse"
                        }
                    }
                },
                "summary": "Fetch credentials for user",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "User Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Credential creation response",
                        "schema": {
                            "$ref": "#/definitions/CredentialCreationResponse"
                        }
                    }
                },
                "summary": "Generate new credentials for a user",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/security/users/{user_id}/credentials/{client_id}": {
            "delete": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "User Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "client id",
                        "in": "path",
                        "name": "client_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "Credential deleted"
                    }
                },
                "summary": "Delete credential for user",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/security/users/{user_id}/roles": {
            "get": {
                "parameters": [
                    {
                        "description": "User Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of roles for user",
                        "schema": {
                            "$ref": "#/definitions/UserRoleListResponse"
                        }
                    }
                },
                "summary": "Get all roles for user",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/security/users/{user_id}/roles/{role_id}": {
            "delete": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "User Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Role Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "role_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "204": {
                        "description": "User role deleted OK"
                    }
                },
                "summary": "Remove role from user",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "User Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "user_id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Role Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "role_id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Role set OK"
                    }
                },
                "summary": "Add role to user",
                "tags": [
                    "Users"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/claims": {
            "get": {
                "parameters": [
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "pattern": "$[A-z0-9]{4}^",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Filter by organisation id",
                        "in": "query",
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "name": "filter[organisation_id]",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "filter[payment_scheme]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[clearing_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[reference]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[reason_code]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[contact_name]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[debtor_party.account_number]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[debtor_party.bank_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[beneficiary_party.account_number]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[beneficiary_party.bank_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[original_instruction.reference]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[submission.status]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[submission.submission_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[submission.submission_date_to]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[reversal.status]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[reversal.submission_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[reversal.submission_date_to]",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of claims details",
                        "schema": {
                            "$ref": "#/definitions/ClaimDetailsListResponse"
                        }
                    }
                },
                "summary": "List claims",
                "tags": [
                    "Claims"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Claim creation request",
                        "schema": {
                            "$ref": "#/definitions/ClaimCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Claim creation response",
                        "schema": {
                            "$ref": "#/definitions/ClaimDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Claim creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create Claim",
                "tags": [
                    "Claims"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/claims/health": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Claims service health",
                        "schema": {
                            "$ref": "#/definitions/Health"
                        }
                    }
                },
                "summary": "Fetch claims service health",
                "tags": [
                    "Claims"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/claims/{id}": {
            "get": {
                "parameters": [
                    {
                        "description": "Claim Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Claim details",
                        "schema": {
                            "$ref": "#/definitions/ClaimDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch claim",
                "tags": [
                    "Claims"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/claims/{id}/reversals": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Claim Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Claim Reversal creation request",
                        "schema": {
                            "$ref": "#/definitions/ClaimReversalCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Claim Reversal creation response",
                        "schema": {
                            "$ref": "#/definitions/ClaimReversalDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Claim Reversal creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create Claim Reversal",
                "tags": [
                    "Claims"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/claims/{id}/reversals/{reversalId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Claim Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Claim Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Claim Reversal details",
                        "schema": {
                            "$ref": "#/definitions/ClaimReversalDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Fetch Claim Reversal",
                "tags": [
                    "Claims"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/claims/{id}/reversals/{reversalId}/submissions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Claim Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Claim Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Claim Reversal Submission creation request",
                        "schema": {
                            "$ref": "#/definitions/ClaimReversalSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Claim Reversal Submission creation response",
                        "schema": {
                            "$ref": "#/definitions/ClaimReversalSubmissionDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Claim Reversal creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create Claim Reversal Submission",
                "tags": [
                    "Claims"
                ],
                "x-access": "Public"
            }
        },
        "/transaction/claims/{id}/reversals/{reversalId}/submissions/{submissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Claim Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Claim Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Claim Reversal Submission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "submissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Claim Reversal Submission details",
                        "schema": {
                            "$ref": "#/definitions/ClaimReversalSubmissionDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Fetch Claim Reversal Submission",
                "tags": [
                    "Claims"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/claims/{id}/submissions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Claim Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Claim Submission creation request",
                        "schema": {
                            "$ref": "#/definitions/ClaimSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Claim Submission creation response",
                        "schema": {
                            "$ref": "#/definitions/ClaimSubmissionDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Claim Submission creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create Claim Submission",
                "tags": [
                    "Claims"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/claims/{id}/submissions/{submissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Claim Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Claim Submission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "submissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Claim Submission details",
                        "schema": {
                            "$ref": "#/definitions/ClaimSubmissionDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Fetch Claim Submission",
                "tags": [
                    "Claims"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits": {
            "get": {
                "parameters": [
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "pattern": "$[A-z0-9]{4}^",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Filter by organisation id",
                        "in": "query",
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "name": "filter[organisation_id]",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[created_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[created_date_to]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[modified_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[modified_date_to]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[debtor_party.account_number]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[debtor_party.bank_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[beneficiary_party.account_number]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[beneficiary_party.bank_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[currency]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[payment_scheme]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[payment_type]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date",
                        "in": "query",
                        "name": "filter[processing_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date",
                        "in": "query",
                        "name": "filter[processing_date_to]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[clearing_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[admission.admission_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[admission.admission_date_to]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by admission status",
                        "in": "query",
                        "name": "filter[admission.status]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by admission scheme status code",
                        "in": "query",
                        "name": "filter[admission.scheme_status_code]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by amount",
                        "in": "query",
                        "name": "filter[amount]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by reference",
                        "in": "query",
                        "name": "filter[reference]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by unique scheme id",
                        "in": "query",
                        "name": "filter[unique_scheme_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[submission.submission_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[submission.submission_date_to]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by submission status",
                        "in": "query",
                        "name": "filter[submission.status]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by submission scheme status code",
                        "in": "query",
                        "name": "filter[submission.scheme_status_code]",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of direct debit details",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitDetailsListResponse"
                        }
                    }
                },
                "summary": "List direct debits",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Direct Debit creation request",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Direct Debit creation response",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Direct Debit creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create Direct debit",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/health": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Direct debit service health",
                        "schema": {
                            "$ref": "#/definitions/Health"
                        }
                    }
                },
                "summary": "Fetch direct debit service health",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}": {
            "get": {
                "parameters": [
                    {
                        "description": "Direct Debit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Direct Debit details",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch direct debit",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Direct Debit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Direct Debit Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Direct Debit Admission details",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitAdmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch Direct Debit Admission",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/returns": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "DirectDebit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Return creation request",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReturnCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Return creation response",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReturnCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Return creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create direct debit return",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/returns/{returnId}": {
            "get": {
                "parameters": [
                    {
                        "description": "DirectDebit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return details",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReturnDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch direct debit return",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/returns/{returnId}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "DirectDebit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reversal admission details",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReturnAdmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch return admission",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/returns/{returnId}/reversals/{reversalId}": {
            "get": {
                "parameters": [
                    {
                        "description": "DirectDebit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reversal reversal details",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReturnReversalDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch return admission",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/returns/{returnId}/reversals/{reversalId}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "DirectDebit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reversal admission details",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReturnReversalAdmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch return admission",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/returns/{returnId}/submissions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "DirectDebit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Return submission creation request",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReturnSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Return submission creation response",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReturnSubmissionCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Return submission creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "create direct debit return submission",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/returns/{returnId}/submissions/{submissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "DirectDebit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Submission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "submissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return submission details",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReturnSubmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch return submission",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/reversals": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "DirectDebit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Reversal creation request",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReversalCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Reversal creation response",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReversalCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Reversal creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create direct debit reversal",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/reversals/{reversalId}": {
            "get": {
                "parameters": [
                    {
                        "description": "DirectDebit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reversal details",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReversalDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch direct debit reversal",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/reversals/{reversalId}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "DirectDebit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reversal admission details",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitReversalAdmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch reversal admission",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/submissions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "DirectDebit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Direct debit submission creation request",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Direct debit submission creation response",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitSubmissionCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Return submission creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create direct debit submission",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/directdebits/{id}/submissions/{submissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "DirectDebit Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Submission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "submissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Direct debit submission details",
                        "schema": {
                            "$ref": "#/definitions/DirectDebitSubmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Get direct debit submission",
                "tags": [
                    "DirectDebits"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/mandates": {
            "get": {
                "parameters": [
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "pattern": "$[A-z0-9]{4}^",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Filter by organisation id",
                        "in": "query",
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "name": "filter[organisation_id]",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "filter[debtor_party.account_number]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[debtor_party.bank_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[beneficiary_party.account_number]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[beneficiary_party.bank_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[currency]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[payment_scheme]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[payment_type]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date",
                        "in": "query",
                        "name": "filter[processing_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date",
                        "in": "query",
                        "name": "filter[processing_date_to]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date",
                        "in": "query",
                        "name": "filter[scheme_processing_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date",
                        "in": "query",
                        "name": "filter[scheme_processing_date_to]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[clearing_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[admission.admission_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[admission.admission_date_to]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by admission status",
                        "in": "query",
                        "name": "filter[admission.status]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by admission scheme status code",
                        "in": "query",
                        "name": "filter[admission.scheme_status_code]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by amount",
                        "in": "query",
                        "name": "filter[amount]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by reference",
                        "in": "query",
                        "name": "filter[reference]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by unique scheme id",
                        "in": "query",
                        "name": "filter[unique_scheme_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Include old versions of mandates",
                        "in": "query",
                        "name": "filter[all_versions]",
                        "required": false,
                        "type": "boolean"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[submission.submission_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[submission.submission_date_to]",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of mandates details",
                        "schema": {
                            "$ref": "#/definitions/MandateDetailsListResponse"
                        }
                    }
                },
                "summary": "List mandates",
                "tags": [
                    "Mandates"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Mandate creation request",
                        "schema": {
                            "$ref": "#/definitions/MandateCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Mandate creation response",
                        "schema": {
                            "$ref": "#/definitions/MandateCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Mandate creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create Mandate",
                "tags": [
                    "Mandates"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/mandates/health": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Mandate service health",
                        "schema": {
                            "$ref": "#/definitions/Health"
                        }
                    }
                },
                "summary": "Fetch mandate service health",
                "tags": [
                    "Mandates"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/mandates/{id}": {
            "get": {
                "parameters": [
                    {
                        "description": "Mandate Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mandate details",
                        "schema": {
                            "$ref": "#/definitions/MandateDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch mandate",
                "tags": [
                    "Mandates"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "patch": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Mandate Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Mandate amendment",
                        "schema": {
                            "$ref": "#/definitions/MandateAmendment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mandate details",
                        "schema": {
                            "$ref": "#/definitions/MandateDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Mandate update error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Update mandate",
                "tags": [
                    "Mandates"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/mandates/{id}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Mandate Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Mandate Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mandate Admission details",
                        "schema": {
                            "$ref": "#/definitions/MandateAdmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch Mandate Admission",
                "tags": [
                    "Mandates"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/mandates/{id}/returns": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Mandate Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Return creation request",
                        "schema": {
                            "$ref": "#/definitions/MandateReturnCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Return creation response",
                        "schema": {
                            "$ref": "#/definitions/MandateReturnCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Return creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create mandate return",
                "tags": [
                    "Mandates"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/mandates/{id}/returns/{returnId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Mandate Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return details",
                        "schema": {
                            "$ref": "#/definitions/MandateReturnDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch mandate return",
                "tags": [
                    "Mandates"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/mandates/{id}/returns/{returnId}/submissions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Mandate Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Return submission creation request",
                        "schema": {
                            "$ref": "#/definitions/MandateReturnSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Return submission creation response",
                        "schema": {
                            "$ref": "#/definitions/MandateReturnSubmissionCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Return submission creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create mandate return submission",
                "tags": [
                    "Mandates"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/mandates/{id}/returns/{returnId}/submissions/{submissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Mandate Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Submission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "submissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return submission details",
                        "schema": {
                            "$ref": "#/definitions/MandateReturnSubmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch return submission",
                "tags": [
                    "Mandates"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/mandates/{id}/submissions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Mandate Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Mandate Submission creation request",
                        "schema": {
                            "$ref": "#/definitions/MandateSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Mandate Submission creation response",
                        "schema": {
                            "$ref": "#/definitions/MandateSubmissionDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Mandate Submission creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create Mandate Submission",
                "tags": [
                    "Mandates"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/mandates/{id}/submissions/{submissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Mandate Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Mandate Submission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "submissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Mandate Submission details",
                        "schema": {
                            "$ref": "#/definitions/MandateSubmissionDetailsResponse"
                        }
                    },
                    "400": {
                        "description": "Error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Fetch Mandate Submission",
                "tags": [
                    "Mandates"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments": {
            "get": {
                "parameters": [
                    {
                        "description": "Which page to select",
                        "in": "query",
                        "minimum": 0,
                        "name": "page[number]",
                        "pattern": "$[A-z0-9]{4}^",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Number of items to select",
                        "in": "query",
                        "maximum": 1000,
                        "minimum": 0,
                        "name": "page[size]",
                        "required": false,
                        "type": "integer"
                    },
                    {
                        "description": "Filter by organisation id",
                        "in": "query",
                        "items": {
                            "format": "uuid",
                            "type": "string"
                        },
                        "name": "filter[organisation_id]",
                        "required": false,
                        "type": "array"
                    },
                    {
                        "in": "query",
                        "name": "filter[debtor_party.account_number]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[debtor_party.bank_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[beneficiary_party.account_number]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[beneficiary_party.bank_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[currency]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[scheme_transaction_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[payment_scheme]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[payment_type]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date",
                        "in": "query",
                        "name": "filter[processing_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date",
                        "in": "query",
                        "name": "filter[processing_date_to]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[unique_scheme_id]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[amount]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "in": "query",
                        "name": "filter[reference]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[submission.submission_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[submission.submission_date_to]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by submission status",
                        "in": "query",
                        "name": "filter[submission.status]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by submission scheme status code",
                        "in": "query",
                        "name": "filter[submission.scheme_status_code]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[admission.admission_date_from]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "format": "date-time",
                        "in": "query",
                        "name": "filter[admission.admission_date_to]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by admission status",
                        "in": "query",
                        "name": "filter[admission.status]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "description": "Filter by admission scheme status code",
                        "in": "query",
                        "name": "filter[admission.scheme_status_code]",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "collectionFormat": "csv",
                        "description": "Filter for payments containing all of the requested relationships",
                        "in": "query",
                        "items": {
                            "enum": [
                                "payment_submissions",
                                "payment_admissions",
                                "reversals",
                                "recalls",
                                "returns",
                                "payment_advices"
                            ],
                            "type": "string"
                        },
                        "name": "filter[relationships]",
                        "required": false,
                        "type": "array"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of payment details",
                        "schema": {
                            "$ref": "#/definitions/PaymentDetailsListResponse"
                        }
                    }
                },
                "summary": "List payments",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            },
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Payment creation request",
                        "schema": {
                            "$ref": "#/definitions/PaymentCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Payment creation response",
                        "schema": {
                            "$ref": "#/definitions/PaymentCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Payment creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create payment",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public",
                    "FPS",
                    "Bacs",
                    "SEPA"
                ]
            }
        },
        "/transaction/payments/health": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Payment service health",
                        "schema": {
                            "$ref": "#/definitions/Health"
                        }
                    }
                },
                "summary": "Fetch payment service health",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Payment details",
                        "schema": {
                            "$ref": "#/definitions/PaymentDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch payment",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Admission details",
                        "schema": {
                            "$ref": "#/definitions/PaymentAdmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch admission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/advices": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Advice creation request",
                        "schema": {
                            "$ref": "#/definitions/AdviceCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Advice creation response",
                        "schema": {
                            "$ref": "#/definitions/AdviceCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Advice creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create advice",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/advices/{adviceId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Advice Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "adviceId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Advice details",
                        "schema": {
                            "$ref": "#/definitions/AdviceDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch advice",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/advices/{adviceId}/submissions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Advice Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "adviceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Advice submission creation request",
                        "schema": {
                            "$ref": "#/definitions/AdviceSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Advice submission creation response",
                        "schema": {
                            "$ref": "#/definitions/AdviceSubmissionCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Advice submission creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "create advice submission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/advices/{adviceId}/submissions/{submissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Advice Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "adviceId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Submission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "submissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Advice submission details",
                        "schema": {
                            "$ref": "#/definitions/AdviceSubmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch advice submission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/recalls": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Recall creation request",
                        "schema": {
                            "$ref": "#/definitions/RecallCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Recall creation response",
                        "schema": {
                            "$ref": "#/definitions/RecallCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Recall creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create recall",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/recalls/{recallId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Recall Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "recallId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recall details",
                        "schema": {
                            "$ref": "#/definitions/RecallDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch recall",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/recalls/{recallId}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Recall Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "recallId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recall admission details",
                        "schema": {
                            "$ref": "#/definitions/RecallAdmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch recall admission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/recalls/{recallId}/decisions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Recall Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "recallId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Recall decision creation request",
                        "schema": {
                            "$ref": "#/definitions/RecallDecisionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Recall decision creation response",
                        "schema": {
                            "$ref": "#/definitions/RecallDecisionCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Recall decision creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create recall decision",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/recalls/{recallId}/decisions/{decisionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Recall Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "recallId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Decision Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "decisionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recall decision details",
                        "schema": {
                            "$ref": "#/definitions/RecallDecisionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch recall decision",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/recalls/{recallId}/decisions/{decisionId}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Recall Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "recallId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Decision Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "decisionId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recall decision admission details",
                        "schema": {
                            "$ref": "#/definitions/RecallDecisionAdmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch recall decision admission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/recalls/{recallId}/decisions/{decisionId}/submissions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Recall Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "recallId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Decision Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "decisionId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Recall decision submission creation request",
                        "schema": {
                            "$ref": "#/definitions/RecallDecisionSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Recall decision submission creation response",
                        "schema": {
                            "$ref": "#/definitions/RecallDecisionSubmissionCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Recall decision submission creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "create recall decision submission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/recalls/{recallId}/decisions/{decisionId}/submissions/{submissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Recall Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "recallId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Decision Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "decisionId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Submission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "submissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recall decision submission details",
                        "schema": {
                            "$ref": "#/definitions/RecallDecisionSubmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch recall decision submission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/recalls/{recallId}/reversals/{reversalId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Recall Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "recallId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recall Reversal details",
                        "schema": {
                            "$ref": "#/definitions/RecallReversalDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch recall reversal",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/recalls/{recallId}/reversals/{reversalId}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Recall Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "recallId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reversal admission details",
                        "schema": {
                            "$ref": "#/definitions/RecallReversalAdmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch recall reversal admission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/recalls/{recallId}/submissions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Recall Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "recallId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Recall submission creation request",
                        "schema": {
                            "$ref": "#/definitions/RecallSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Recall submission creation response",
                        "schema": {
                            "$ref": "#/definitions/RecallSubmissionCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Recall submission creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "create recall submission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/recalls/{recallId}/submissions/{submissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Recall Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "recallId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Submission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "submissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Recall submission details",
                        "schema": {
                            "$ref": "#/definitions/RecallSubmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch recall submission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/returns": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Return creation request",
                        "schema": {
                            "$ref": "#/definitions/ReturnCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Return creation response",
                        "schema": {
                            "$ref": "#/definitions/ReturnCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Return creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create return",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/returns/{returnId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return details",
                        "schema": {
                            "$ref": "#/definitions/ReturnDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch return",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/returns/{returnId}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return admission details",
                        "schema": {
                            "$ref": "#/definitions/ReturnAdmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch return admission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/returns/{returnId}/reversals": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Return reversal creation request",
                        "schema": {
                            "$ref": "#/definitions/ReturnReversalCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Reversal creation response",
                        "schema": {
                            "$ref": "#/definitions/ReturnReversalCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Reversal creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create return reversal",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/returns/{returnId}/reversals/{reversalId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return reversal details",
                        "schema": {
                            "$ref": "#/definitions/ReturnReversalDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch return reversal",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/returns/{returnId}/reversals/{reversalId}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return reversal admission details",
                        "schema": {
                            "$ref": "#/definitions/ReturnReversalAdmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch return reversal admission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/returns/{returnId}/submissions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Return submission creation request",
                        "schema": {
                            "$ref": "#/definitions/ReturnSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Return submission creation response",
                        "schema": {
                            "$ref": "#/definitions/ReturnSubmissionCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Return submission creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "create return submission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/returns/{returnId}/submissions/{submissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Return Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "returnId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Submission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "submissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Return submission details",
                        "schema": {
                            "$ref": "#/definitions/ReturnSubmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch return submission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/reversals": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Reversal creation request",
                        "schema": {
                            "$ref": "#/definitions/ReversalCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Reversal creation response",
                        "schema": {
                            "$ref": "#/definitions/ReversalCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Reversal creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create reversal",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/reversals/{reversalId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reversal details",
                        "schema": {
                            "$ref": "#/definitions/ReversalDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch reversal",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/reversals/{reversalId}/admissions/{admissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Admission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "admissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reversal admission details",
                        "schema": {
                            "$ref": "#/definitions/ReversalAdmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch reversal admission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/reversals/{reversalId}/submissions": {
            "post": {
                "consumes": [
                    "application/vnc.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Reversal submission creation request",
                        "schema": {
                            "$ref": "#/definitions/ReversalSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Reversal submission creation response",
                        "schema": {
                            "$ref": "#/definitions/ReversalSubmissionCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Reversal submission creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "Create reversal submission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/reversals/{reversalId}/submissions/{submissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Reversal Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "reversalId",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Submission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "submissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reversal submission details",
                        "schema": {
                            "$ref": "#/definitions/ReversalSubmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch reversal submission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/submissions": {
            "post": {
                "consumes": [
                    "application/vnd.api+json",
                    "application/json"
                ],
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "in": "body",
                        "name": "Submission creation request",
                        "schema": {
                            "$ref": "#/definitions/PaymentSubmissionCreation"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Submission creation response",
                        "schema": {
                            "$ref": "#/definitions/PaymentSubmissionCreationResponse"
                        }
                    },
                    "400": {
                        "description": "Submission creation error",
                        "schema": {
                            "$ref": "#/definitions/ApiError"
                        }
                    }
                },
                "summary": "create submission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        },
        "/transaction/payments/{id}/submissions/{submissionId}": {
            "get": {
                "parameters": [
                    {
                        "description": "Payment Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "id",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "description": "Submission Id",
                        "format": "uuid",
                        "in": "path",
                        "name": "submissionId",
                        "required": true,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Submission details",
                        "schema": {
                            "$ref": "#/definitions/PaymentSubmissionDetailsResponse"
                        }
                    }
                },
                "summary": "Fetch submission",
                "tags": [
                    "Payments"
                ],
                "x-access": [
                    "Public"
                ]
            }
        }
    },
    "produces": [
        "application/vnd.api+json",
        "application/json"
    ],
    "responses": {
        "400Error": {
            "description": "Bad request",
            "schema": {
                "$ref": "#/definitions/OBErrorResponse1"
            },
            "x-access": [
                "Public"
            ]
        },
        "401Error": {
            "description": "Unauthorized",
            "x-access": [
                "Public"
            ]
        },
        "403Error": {
            "description": "Forbidden",
            "x-access": [
                "Public"
            ]
        },
        "405Error": {
            "description": "Method Not Allowed",
            "x-access": [
                "Public"
            ]
        },
        "406Error": {
            "description": "Not Acceptable",
            "x-access": [
                "Public"
            ]
        },
        "429Error": {
            "description": "Too Many Requests",
            "headers": {
                "Retry-After": {
                    "description": "Number in seconds to wait",
                    "type": "integer"
                }
            },
            "x-access": [
                "Public"
            ]
        },
        "500Error": {
            "description": "Internal Server Error",
            "schema": {
                "$ref": "#/definitions/OBErrorResponse1"
            },
            "x-access": [
                "Public"
            ]
        },
        "503Error": {
            "description": "Service Unavailable",
            "x-access": [
                "Public"
            ]
        },
        "BadGateway": {
            "description": "Bad Gateway",
            "schema": {
                "$ref": "#/definitions/ApiError"
            }
        },
        "BadRequest": {
            "description": "Bad Request",
            "schema": {
                "$ref": "#/definitions/ApiError"
            }
        },
        "Conflict": {
            "description": "Conflict",
            "schema": {
                "$ref": "#/definitions/ApiError"
            }
        },
        "Forbidden": {
            "description": "Action Forbidden",
            "schema": {
                "$ref": "#/definitions/ApiError"
            }
        },
        "NotFound": {
            "description": "Not Found",
            "schema": {
                "$ref": "#/definitions/ApiError"
            }
        },
        "OBNameVerification1": {
            "description": "Account name verification report",
            "schema": {
                "additionalProperties": false,
                "properties": {
                    "Data": {
                        "properties": {
                            "VerificationReport": {
                                "additionalProperties": false,
                                "description": "Provides the verification report",
                                "properties": {
                                    "Matched": {
                                        "description": "Flag to indicate whether the account details were matched by the API provider",
                                        "type": "boolean"
                                    },
                                    "Name": {
                                        "$ref": "#/definitions/AccountName"
                                    },
                                    "ReasonCode": {
                                        "$ref": "#/definitions/ReasonCodes"
                                    }
                                },
                                "required": [
                                    "Matched"
                                ],
                                "type": "object"
                            }
                        },
                        "required": [
                            "VerificationReport"
                        ],
                        "type": "object"
                    },
                    "Links": {
                        "$ref": "#/definitions/Links"
                    },
                    "Meta": {
                        "$ref": "#/definitions/Meta"
                    }
                },
                "required": [
                    "Data"
                ],
                "type": "object"
            },
            "x-access": [
                "Public"
            ]
        },
        "UnexpectedError": {
            "description": "Unexpected Error",
            "schema": {
                "$ref": "#/definitions/ApiError"
            }
        }
    },
    "schemes": [
        "https"
    ],
    "security": [
        {
            "OAuth2": []
        }
    ],
    "securityDefinitions": {
        "Basic": {
            "type": "basic"
        },
        "IntraFIOAuth2Security": {
            "description": "TPP client credential authorisation flow with the ASPSP",
            "flow": "application",
            "scopes": {
                "name-verification": "An access token specifically minted for verifying the name of an account",
                "payments": "An access token previously minted from an PISP flow"
            },
            "tokenUrl": "https://authserver.example/token",
            "type": "oauth2"
        },
        "OAuth2": {
            "description": "OAuth 2.0 with Client Credentials Grant type",
            "flow": "application",
            "tokenUrl": "/oauth2/token",
            "type": "oauth2"
        }
    },
    "swagger": "2.0"
}
