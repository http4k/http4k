/**
 * Generated by https://github.com/jmfayard/buildSrcVersions
 *
 * Update this file with
 *   `$ ./gradlew buildSrcVersions`
 */
object Libs {
    /**
     * https://github.com/Kotlin/kotlinx.serialization
     */
    const val kotlinx_serialization_json: String =
            "org.jetbrains.kotlinx:kotlinx-serialization-json:" +
            Versions.org_jetbrains_kotlinx_kotlinx_serialization

    /**
     * https://github.com/FasterXML/jackson-dataformat-xml
     */
    const val jackson_dataformat_xml: String =
            "com.fasterxml.jackson.dataformat:jackson-dataformat-xml:" +
            Versions.com_fasterxml_jackson_dataformat

    /**
     * https://github.com/FasterXML/jackson-dataformats-text
     */
    const val jackson_dataformat_yaml: String =
            "com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:" +
            Versions.com_fasterxml_jackson_dataformat

    /**
     * https://resilience4j.readme.io
     */
    const val resilience4j_bulkhead: String = "io.github.resilience4j:resilience4j-bulkhead:" +
            Versions.io_github_resilience4j

    /**
     * https://resilience4j.readme.io
     */
    const val resilience4j_circuitbreaker: String =
            "io.github.resilience4j:resilience4j-circuitbreaker:" + Versions.io_github_resilience4j

    /**
     * https://resilience4j.readme.io
     */
    const val resilience4j_ratelimiter: String =
            "io.github.resilience4j:resilience4j-ratelimiter:" + Versions.io_github_resilience4j

    /**
     * https://resilience4j.readme.io
     */
    const val resilience4j_retry: String = "io.github.resilience4j:resilience4j-retry:" +
            Versions.io_github_resilience4j

    /**
     * https://aws.amazon.com/sdkforjava
     */
    const val http_client_spi: String = "software.amazon.awssdk:http-client-spi:" +
            Versions.software_amazon_awssdk

    /**
     * https://aws.amazon.com/sdkforjava
     */
    const val s3: String = "software.amazon.awssdk:s3:" + Versions.software_amazon_awssdk

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_gradle_plugin: String = "org.jetbrains.kotlin:kotlin-gradle-plugin:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_reflect: String = "org.jetbrains.kotlin:kotlin-reflect:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_scripting_compiler_embeddable: String =
            "org.jetbrains.kotlin:kotlin-scripting-compiler-embeddable:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_serialization: String = "org.jetbrains.kotlin:kotlin-serialization:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_serialization_unshaded: String =
            "org.jetbrains.kotlin:kotlin-serialization-unshaded:" + Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_stdlib: String = "org.jetbrains.kotlin:kotlin-stdlib:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_stdlib_common: String = "org.jetbrains.kotlin:kotlin-stdlib-common:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://kotlinlang.org/
     */
    const val kotlin_stdlib_jdk8: String = "org.jetbrains.kotlin:kotlin-stdlib-jdk8:" +
            Versions.org_jetbrains_kotlin

    /**
     * https://github.com/square/moshi/
     */
    const val moshi: String = "com.squareup.moshi:moshi:" + Versions.com_squareup_moshi

    /**
     * https://github.com/square/moshi/
     */
    const val moshi_kotlin: String = "com.squareup.moshi:moshi-kotlin:" +
            Versions.com_squareup_moshi

    /**
     * https://eclipse.org/jetty
     */
    const val jetty_alpn_conscrypt_server: String =
            "org.eclipse.jetty:jetty-alpn-conscrypt-server:" + Versions.org_eclipse_jetty

    /**
     * https://eclipse.org/jetty
     */
    const val jetty_client: String = "org.eclipse.jetty:jetty-client:" + Versions.org_eclipse_jetty

    /**
     * https://eclipse.org/jetty
     */
    const val jetty_server: String = "org.eclipse.jetty:jetty-server:" + Versions.org_eclipse_jetty

    /**
     * https://eclipse.org/jetty
     */
    const val jetty_servlet: String = "org.eclipse.jetty:jetty-servlet:" +
            Versions.org_eclipse_jetty

    /**
     * https://junit.org/junit5/
     */
    const val junit_jupiter_api: String = "org.junit.jupiter:junit-jupiter-api:" +
            Versions.org_junit_jupiter

    /**
     * https://junit.org/junit5/
     */
    const val junit_jupiter_engine: String = "org.junit.jupiter:junit-jupiter-engine:" +
            Versions.org_junit_jupiter

    /**
     * https://github.com/open-telemetry/opentelemetry-java
     */
    const val opentelemetry_exporters_inmemory: String =
            "io.opentelemetry:opentelemetry-exporters-inmemory:" + Versions.io_opentelemetry

    /**
     * https://github.com/open-telemetry/opentelemetry-java
     */
    const val opentelemetry_api: String = "io.opentelemetry:opentelemetry-api:" +
            Versions.io_opentelemetry

    /**
     * https://github.com/open-telemetry/opentelemetry-java
     */
    const val opentelemetry_extension_trace_propagators: String =
            "io.opentelemetry:opentelemetry-extension-trace-propagators:" +
            Versions.io_opentelemetry

    /**
     * https://github.com/open-telemetry/opentelemetry-java
     */
    const val opentelemetry_sdk: String = "io.opentelemetry:opentelemetry-sdk:" +
            Versions.io_opentelemetry

    /**
     * https://forkhandles.dev
     */
    const val bunting4k: String = "dev.forkhandles:bunting4k:" + Versions.dev_forkhandles

    /**
     * https://forkhandles.dev
     */
    const val result4k: String = "dev.forkhandles:result4k:" + Versions.dev_forkhandles

    /**
     * http://www.jboss.org
     */
    const val undertow_core: String = "io.undertow:undertow-core:" + Versions.io_undertow

    /**
     * http://www.jboss.org
     */
    const val undertow_servlet: String = "io.undertow:undertow-servlet:" + Versions.io_undertow

    /**
     * https://github.com/ktorio/ktor
     */
    const val ktor_server_cio: String = "io.ktor:ktor-server-cio:" + Versions.io_ktor

    /**
     * https://github.com/ktorio/ktor
     */
    const val ktor_server_netty: String = "io.ktor:ktor-server-netty:" + Versions.io_ktor

    const val com_microsoft_azure_azurefunctions_gradle_plugin: String =
            "com.microsoft.azure.azurefunctions:com.microsoft.azure.azurefunctions.gradle.plugin:" +
            Versions.com_microsoft_azure_azurefunctions_gradle_plugin

    const val de_fayard_buildsrcversions_gradle_plugin: String =
            "de.fayard.buildSrcVersions:de.fayard.buildSrcVersions.gradle.plugin:" +
            Versions.de_fayard_buildsrcversions_gradle_plugin

    const val com_github_kt3k_coveralls_gradle_plugin: String =
            "com.github.kt3k.coveralls:com.github.kt3k.coveralls.gradle.plugin:" +
            Versions.com_github_kt3k_coveralls_gradle_plugin

    const val com_jfrog_bintray_gradle_plugin: String =
            "com.jfrog.bintray:com.jfrog.bintray.gradle.plugin:" +
            Versions.com_jfrog_bintray_gradle_plugin

    const val openapi_generator_gradle_plugin: String =
            "org.openapitools:openapi-generator-gradle-plugin:" +
            Versions.openapi_generator_gradle_plugin

    /**
     * https://azure.microsoft.com/en-us/services/functions
     */
    const val azure_functions_java_library: String =
            "com.microsoft.azure.functions:azure-functions-java-library:" +
            Versions.azure_functions_java_library

    /**
     * https://eclipse.org/jetty
     */
    const val javax_websocket_server_impl: String =
            "org.eclipse.jetty.websocket:javax-websocket-server-impl:" +
            Versions.javax_websocket_server_impl

    /**
     * http://www.github.com/kotest/kotest
     */
    const val kotest_assertions_core_jvm: String = "io.kotest:kotest-assertions-core-jvm:" +
            Versions.kotest_assertions_core_jvm

    /**
     * http://github.com/kt3k/coveralls-gradle-plugin/
     */
    const val coveralls_gradle_plugin: String = "org.kt3k.gradle.plugin:coveralls-gradle-plugin:" +
            Versions.coveralls_gradle_plugin

    const val functions_framework_api: String =
            "com.google.cloud.functions:functions-framework-api:" + Versions.functions_framework_api

    /**
     * https://aws.amazon.com/lambda/
     */
    const val aws_lambda_java_events: String = "com.amazonaws:aws-lambda-java-events:" +
            Versions.aws_lambda_java_events

    /**
     * https://github.com/FasterXML/jackson-module-kotlin
     */
    const val jackson_module_kotlin: String =
            "com.fasterxml.jackson.module:jackson-module-kotlin:" + Versions.jackson_module_kotlin

    /**
     * https://aws.amazon.com/lambda/
     */
    const val aws_lambda_java_core: String = "com.amazonaws:aws-lambda-java-core:" +
            Versions.aws_lambda_java_core

    const val dokka_gradle_plugin: String = "org.jetbrains.dokka:dokka-gradle-plugin:" +
            Versions.dokka_gradle_plugin

    /**
     * https://javaee.github.io/servlet-spec/
     */
    const val javax_servlet_api: String = "javax.servlet:javax.servlet-api:" +
            Versions.javax_servlet_api

    /**
     * https://netty.io/
     */
    const val netty_codec_http2: String = "io.netty:netty-codec-http2:" + Versions.netty_codec_http2

    /**
     * http://github.com/FasterXML/jackson
     */
    const val jackson_databind: String = "com.fasterxml.jackson.core:jackson-databind:" +
            Versions.jackson_databind

    /**
     * http://hc.apache.org/httpcomponents-asyncclient
     */
    const val httpasyncclient: String = "org.apache.httpcomponents:httpasyncclient:" +
            Versions.httpasyncclient

    /**
     * https://github.com/micrometer-metrics/micrometer
     */
    const val micrometer_core: String = "io.micrometer:micrometer-core:" + Versions.micrometer_core

    /**
     * https://cloud.tencent.com/
     */
    const val scf_java_events: String = "com.tencentcloudapi:scf-java-events:" +
            Versions.scf_java_events

    /**
     * https://www.aliyun.com/product/fc
     */
    const val fc_java_common: String = "com.aliyun.fc.runtime:fc-java-common:" +
            Versions.fc_java_common

    /**
     * https://github.com/TooTallNate/Java-WebSocket
     */
    const val java_websocket: String = "org.java-websocket:Java-WebSocket:" +
            Versions.java_websocket

    /**
     * https://commons.apache.org/proper/commons-pool/
     */
    const val commons_pool2: String = "org.apache.commons:commons-pool2:" + Versions.commons_pool2

    /**
     * https://eclipse.org/jetty
     */
    const val http2_server: String = "org.eclipse.jetty.http2:http2-server:" + Versions.http2_server

    /**
     * http://www.ratpack.io
     */
    const val ratpack_core: String = "io.ratpack:ratpack-core:" + Versions.ratpack_core

    /**
     * http://www.seleniumhq.org/
     */
    const val selenium_api: String = "org.seleniumhq.selenium:selenium-api:" + Versions.selenium_api

    /**
     * https://hc.apache.org/httpcomponents-client-5.0.x/
     */
    const val httpclient5: String = "org.apache.httpcomponents.client5:httpclient5:" +
            Versions.httpclient5

    /**
     * https://freemarker.apache.org/
     */
    const val freemarker: String = "org.freemarker:freemarker:" + Versions.freemarker

    /**
     * https://github.com/jknack/handlebars.java
     */
    const val handlebars: String = "com.github.jknack:handlebars:" + Versions.handlebars

    /**
     * http://hc.apache.org/httpcomponents-client
     */
    const val httpclient: String = "org.apache.httpcomponents:httpclient:" + Versions.httpclient

    /**
     * https://github.com/javadev/underscore-java
     */
    const val underscore: String = "com.github.javadev:underscore:" + Versions.underscore

    /**
     * http://www.eclipse.org/jetty
     */
    const val alpn_boot: String = "org.mortbay.jetty.alpn:alpn-boot:" + Versions.alpn_boot

    /**
     * https://hc.apache.org/httpcomponents-core-5.0.x/
     */
    const val httpcore5: String = "org.apache.httpcomponents.core5:httpcore5:" + Versions.httpcore5

    /**
     * https://www.joda.org/joda-time/
     */
    const val joda_time: String = "joda-time:joda-time:" + Versions.joda_time

    /**
     * http://www.slf4j.org
     */
    const val slf4j_nop: String = "org.slf4j:slf4j-nop:" + Versions.slf4j_nop

    /**
     * http://www.thymeleaf.org
     */
    const val thymeleaf: String = "org.thymeleaf:thymeleaf:" + Versions.thymeleaf

    /**
     * https://github.com/npryce/hamkrest
     */
    const val hamkrest: String = "com.natpryce:hamkrest:" + Versions.hamkrest

    /**
     * http://hc.apache.org/httpcomponents-core-ga
     */
    const val httpcore: String = "org.apache.httpcomponents:httpcore:" + Versions.httpcore

    /**
     * https://github.com/neuland/jade4j
     */
    const val jade4j: String = "de.neuland-bfi:jade4j:" + Versions.jade4j

    /**
     * https://square.github.io/okhttp/
     */
    const val okhttp: String = "com.squareup.okhttp3:okhttp:" + Versions.okhttp

    /**
     * http://pebbletemplates.io
     */
    const val pebble: String = "io.pebbletemplates:pebble:" + Versions.pebble

    const val shadow: String = "com.github.jengelman.gradle.plugins:shadow:" + Versions.shadow

    /**
     * https://jsoup.org/
     */
    const val jsoup: String = "org.jsoup:jsoup:" + Versions.jsoup

    /**
     * http://argo.sourceforge.net
     */
    const val argo: String = "net.sourceforge.argo:argo:" + Versions.argo

    /**
     * https://github.com/google/gson
     */
    const val gson: String = "com.google.code.gson:gson:" + Versions.gson

    /**
     * https://github.com/douglascrockford/JSON-java
     */
    const val json: String = "org.json:json:" + Versions.json
}
