>>>Endpoint.kt

package testPackage.server.endpoints

import org.http4k.core.Body
import org.http4k.core.Method
import org.http4k.core.Request
import org.http4k.core.Response
import org.http4k.core.Status
import org.http4k.lens.FormField
import org.http4k.lens.Validator.Strict
import org.http4k.lens.boolean
import org.http4k.lens.int
import org.http4k.lens.webForm
import org.http4k.routing.RoutingHttpHandler
import org.http4k.routing.bind

fun Endpoint(): RoutingHttpHandler {

	val requiredLens = FormField.boolean().required("required")
	val optionalLens = FormField.int().optional("optional")
	val formLens = Body.webForm(Strict, requiredLens, optionalLens).toLens()

	return "/formbody" bind Method.POST to { req: Request ->
		val form = formLens(req)
		val required = requiredLens(form)
		val optional = optionalLens(form)
		Response(Status.OK)

	}
}

>>>TitleServer.kt

package testPackage.server

import org.http4k.routing.routes
import org.http4k.server.asServer
import testPackage.server.endpoints.Endpoint

object TitleServer {
	operator fun invoke() = routes(
		Endpoint()
	)
}

fun main() {
	TitleServer().asServer(SunHttp(8000)).start()
}
