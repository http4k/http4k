>>>Endpoint.kt

package testPackage.server.endpoints

import org.http4k.core.Body
import org.http4k.core.Method
import org.http4k.core.Request
import org.http4k.core.Response
import org.http4k.core.Status
import org.http4k.core.with
import org.http4k.format.Jackson.auto
import org.http4k.routing.RoutingHttpHandler
import org.http4k.routing.bind
import testPackage.model.Ref

/**
 * Returns
 * 	200 OK
 * 	404 Not OK
 */
fun Endpoint(): RoutingHttpHandler {

	val refLens = Body.auto<Ref>().toLens()

	return "/jsonbody" bind Method.POST to { req: Request ->
		Response(Status.OK)

			.with(refLens of TODO())
	}
}

>>>TitleServer.kt

package testPackage.server

import org.http4k.routing.routes
import org.http4k.server.asServer
import testPackage.server.endpoints.Endpoint

object TitleServer {
	operator fun invoke() = routes(
		Endpoint()
	)
}

fun main() {
	TitleServer().asServer(SunHttp(8000)).start()
}
